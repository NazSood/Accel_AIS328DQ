
Accelerometer_AIS328DQ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000068f4  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000001e8  20000000  000068f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c4  200001e8  00006adc  000201e8  2**2
                  ALLOC
  3 .stack        00000804  200002ac  00006ba0  000201e8  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000201e8  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY
  6 .debug_info   0002267f  00000000  00000000  00020269  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000370f  00000000  00000000  000428e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00004d71  00000000  00000000  00045ff7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000004c0  00000000  00000000  0004ad68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000558  00000000  00000000  0004b228  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000192d7  00000000  00000000  0004b780  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000a517  00000000  00000000  00064a57  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0007bb8d  00000000  00000000  0006ef6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001adc  00000000  00000000  000eaafc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b0 0a 00 20 95 17 00 00 91 17 00 00 91 17 00 00     ... ............
	...
      2c:	91 17 00 00 00 00 00 00 00 00 00 00 91 17 00 00     ................
      3c:	91 17 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
      4c:	91 17 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
      5c:	00 00 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
      6c:	91 17 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
      7c:	91 17 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
      8c:	91 17 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
      9c:	91 17 00 00 91 17 00 00 91 17 00 00 91 17 00 00     ................
	...

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200001e8 	.word	0x200001e8
      d4:	00000000 	.word	0x00000000
      d8:	000068f4 	.word	0x000068f4

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200001ec 	.word	0x200001ec
     108:	000068f4 	.word	0x000068f4
     10c:	000068f4 	.word	0x000068f4
     110:	00000000 	.word	0x00000000

00000114 <_Z20configure_i2c_masterv>:
//! [timeout]
#define TIMEOUT 0

//! [initialize_i2c]
void configure_i2c_master(void)
{
     114:	b510      	push	{r4, lr}
static inline void i2c_master_get_config_defaults(
		struct i2c_master_config *const config)
{
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
     116:	4c1d      	ldr	r4, [pc, #116]	; (18c <_Z20configure_i2c_masterv+0x78>)
     118:	2364      	movs	r3, #100	; 0x64
     11a:	6023      	str	r3, [r4, #0]
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
     11c:	4b1c      	ldr	r3, [pc, #112]	; (190 <_Z20configure_i2c_masterv+0x7c>)
     11e:	6063      	str	r3, [r4, #4]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
     120:	2300      	movs	r3, #0
     122:	60a3      	str	r3, [r4, #8]
#endif
	config->generator_source = GCLK_GENERATOR_0;
     124:	7323      	strb	r3, [r4, #12]
	config->run_in_standby   = false;
     126:	7623      	strb	r3, [r4, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
     128:	2280      	movs	r2, #128	; 0x80
     12a:	0392      	lsls	r2, r2, #14
     12c:	6122      	str	r2, [r4, #16]
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
     12e:	2201      	movs	r2, #1
     130:	4252      	negs	r2, r2
     132:	82a2      	strh	r2, [r4, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
     134:	61e3      	str	r3, [r4, #28]
	config->pinmux_pad1      = PINMUX_DEFAULT;
     136:	6223      	str	r3, [r4, #32]
	config->scl_low_timeout  = false;
     138:	3225      	adds	r2, #37	; 0x25
     13a:	54a3      	strb	r3, [r4, r2]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
     13c:	62a3      	str	r3, [r4, #40]	; 0x28
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
     13e:	3208      	adds	r2, #8
     140:	54a3      	strb	r3, [r4, r2]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
     142:	3201      	adds	r2, #1
     144:	54a3      	strb	r3, [r4, r2]
	config->master_scl_low_extend_timeout  = false;
     146:	3201      	adds	r2, #1
     148:	54a3      	strb	r3, [r4, r2]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
     14a:	33d7      	adds	r3, #215	; 0xd7
     14c:	8623      	strh	r3, [r4, #48]	; 0x30
	
	i2c_master_get_config_defaults(&config_i2c_master);

	/* Change buffer timeout to something longer. */
	config_i2c_master.buffer_timeout = 10000;
     14e:	4b11      	ldr	r3, [pc, #68]	; (194 <_Z20configure_i2c_masterv+0x80>)
     150:	82e3      	strh	r3, [r4, #22]
	/* Initialize and enable device with config. */
	i2c_master_init(&i2c_master_instance, CONF_I2C_MASTER_MODULE, &config_i2c_master);
     152:	0020      	movs	r0, r4
     154:	3034      	adds	r0, #52	; 0x34
     156:	0022      	movs	r2, r4
     158:	490f      	ldr	r1, [pc, #60]	; (198 <_Z20configure_i2c_masterv+0x84>)
     15a:	4b10      	ldr	r3, [pc, #64]	; (19c <_Z20configure_i2c_masterv+0x88>)
     15c:	4798      	blx	r3
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     15e:	6b62      	ldr	r2, [r4, #52]	; 0x34
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     160:	2107      	movs	r1, #7
     162:	69d3      	ldr	r3, [r2, #28]
	while (i2c_master_is_syncing(module)) {
     164:	4219      	tst	r1, r3
     166:	d1fc      	bne.n	162 <_Z20configure_i2c_masterv+0x4e>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
     168:	6813      	ldr	r3, [r2, #0]
     16a:	2102      	movs	r1, #2
     16c:	430b      	orrs	r3, r1
     16e:	6013      	str	r3, [r2, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     170:	4b06      	ldr	r3, [pc, #24]	; (18c <_Z20configure_i2c_masterv+0x78>)
     172:	8f5c      	ldrh	r4, [r3, #58]	; 0x3a
	uint32_t timeout_counter = 0;
     174:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
     176:	2010      	movs	r0, #16
     178:	8b51      	ldrh	r1, [r2, #26]
     17a:	4201      	tst	r1, r0
     17c:	d104      	bne.n	188 <_Z20configure_i2c_masterv+0x74>
		timeout_counter++;
     17e:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     180:	42a3      	cmp	r3, r4
     182:	d3f9      	bcc.n	178 <_Z20configure_i2c_masterv+0x64>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
     184:	2310      	movs	r3, #16
     186:	8353      	strh	r3, [r2, #26]
	//! [enable_module]
	i2c_master_enable(&i2c_master_instance);
	
}
     188:	bd10      	pop	{r4, pc}
     18a:	46c0      	nop			; (mov r8, r8)
     18c:	20000204 	.word	0x20000204
     190:	00000d48 	.word	0x00000d48
     194:	00002710 	.word	0x00002710
     198:	42001000 	.word	0x42001000
     19c:	00000689 	.word	0x00000689

000001a0 <_ZN12AIS328DQcore13readRegister8EPhS0_>:
	
	I2CAddress =  i2cADD;
}

// Read 8-bit register
status_t AIS328DQcore::readRegister8(uint8_t reg[], uint8_t* data_){
     1a0:	b5f0      	push	{r4, r5, r6, r7, lr}
     1a2:	46c6      	mov	lr, r8
     1a4:	b500      	push	{lr}
     1a6:	b084      	sub	sp, #16
     1a8:	000d      	movs	r5, r1
     1aa:	4690      	mov	r8, r2
		.data_length = 1,
		.data        = reg,
		.ten_bit_address = false,
		.high_speed      = false,
		.hs_master_code  = 0x0,
	};
     1ac:	ac01      	add	r4, sp, #4
     1ae:	220c      	movs	r2, #12
     1b0:	2100      	movs	r1, #0
     1b2:	0020      	movs	r0, r4
     1b4:	4b14      	ldr	r3, [pc, #80]	; (208 <_ZN12AIS328DQcore13readRegister8EPhS0_+0x68>)
     1b6:	4798      	blx	r3
     1b8:	2318      	movs	r3, #24
     1ba:	8023      	strh	r3, [r4, #0]
     1bc:	3b17      	subs	r3, #23
     1be:	8063      	strh	r3, [r4, #2]
     1c0:	6065      	str	r5, [r4, #4]
	
	/* Write buffer to slave until success. */
	//! [write_packet]
	while (i2c_master_write_packet_wait_no_stop(&i2c_master_instance, &packet) !=
     1c2:	4d12      	ldr	r5, [pc, #72]	; (20c <_ZN12AIS328DQcore13readRegister8EPhS0_+0x6c>)
     1c4:	0028      	movs	r0, r5
     1c6:	3034      	adds	r0, #52	; 0x34
     1c8:	0021      	movs	r1, r4
     1ca:	4b11      	ldr	r3, [pc, #68]	; (210 <_ZN12AIS328DQcore13readRegister8EPhS0_+0x70>)
     1cc:	4798      	blx	r3
	}

	/* Read from slave until success. */
	//! [read_packet]
	static uint8_t readBuffer[1];
	packet.data = readBuffer;
     1ce:	3540      	adds	r5, #64	; 0x40
     1d0:	6065      	str	r5, [r4, #4]
	while (i2c_master_write_packet_wait_no_stop(&i2c_master_instance, &packet) !=
     1d2:	1e45      	subs	r5, r0, #1
     1d4:	41a8      	sbcs	r0, r5
     1d6:	4245      	negs	r5, r0
     1d8:	b2ad      	uxth	r5, r5
     1da:	3501      	adds	r5, #1
	packet.data = readBuffer;
     1dc:	2400      	movs	r4, #0
		
	/* Write buffer to slave until success. */
	//! [write_packet]
	while (i2c_master_read_packet_wait(&i2c_master_instance, &packet) !=
     1de:	4e0b      	ldr	r6, [pc, #44]	; (20c <_ZN12AIS328DQcore13readRegister8EPhS0_+0x6c>)
     1e0:	3634      	adds	r6, #52	; 0x34
     1e2:	4f0c      	ldr	r7, [pc, #48]	; (214 <_ZN12AIS328DQcore13readRegister8EPhS0_+0x74>)
     1e4:	a901      	add	r1, sp, #4
     1e6:	0030      	movs	r0, r6
     1e8:	47b8      	blx	r7
     1ea:	2800      	cmp	r0, #0
     1ec:	d002      	beq.n	1f4 <_ZN12AIS328DQcore13readRegister8EPhS0_+0x54>
     1ee:	3401      	adds	r4, #1
	STATUS_OK) {
		/* Increment timeout counter and check if timed out. */
		if (timeout++ == TIMEOUT) {
     1f0:	42ac      	cmp	r4, r5
     1f2:	d1f7      	bne.n	1e4 <_ZN12AIS328DQcore13readRegister8EPhS0_+0x44>
			break;
		}
	}
	
	*data_ = readBuffer[0];
     1f4:	2340      	movs	r3, #64	; 0x40
     1f6:	4a05      	ldr	r2, [pc, #20]	; (20c <_ZN12AIS328DQcore13readRegister8EPhS0_+0x6c>)
     1f8:	5cd3      	ldrb	r3, [r2, r3]
     1fa:	4642      	mov	r2, r8
     1fc:	7013      	strb	r3, [r2, #0]
	//printf("read: %x\r\n", readBuffer[0]);
	
}
     1fe:	b004      	add	sp, #16
     200:	bc04      	pop	{r2}
     202:	4690      	mov	r8, r2
     204:	bdf0      	pop	{r4, r5, r6, r7, pc}
     206:	46c0      	nop			; (mov r8, r8)
     208:	0000198d 	.word	0x0000198d
     20c:	20000204 	.word	0x20000204
     210:	00000c89 	.word	0x00000c89
     214:	00000c61 	.word	0x00000c61

00000218 <_ZN8AIS328DQ5beginEv>:
	
	
}

// Initialize the Accel
status_t AIS328DQ :: begin(){
     218:	b5f0      	push	{r4, r5, r6, r7, lr}
     21a:	46c6      	mov	lr, r8
     21c:	b500      	push	{lr}
     21e:	b084      	sub	sp, #16

// Begin the low level stuff
status_t AIS328DQcore::beginCore(){
	
  status_t returnError = IMU_SUCCESS;
  configure_i2c_master();
     220:	4b0f      	ldr	r3, [pc, #60]	; (260 <_ZN8AIS328DQ5beginEv+0x48>)
     222:	4798      	blx	r3
	   };
     224:	ac01      	add	r4, sp, #4
     226:	4d0f      	ldr	r5, [pc, #60]	; (264 <_ZN8AIS328DQ5beginEv+0x4c>)
     228:	0023      	movs	r3, r4
     22a:	cd07      	ldmia	r5!, {r0, r1, r2}
     22c:	c307      	stmia	r3!, {r0, r1, r2}
     22e:	46a8      	mov	r8, r5
	   i2c_master_write_packet_wait(&i2c_master_instance, &packet);
     230:	4e0d      	ldr	r6, [pc, #52]	; (268 <_ZN8AIS328DQ5beginEv+0x50>)
     232:	3634      	adds	r6, #52	; 0x34
     234:	0021      	movs	r1, r4
     236:	0030      	movs	r0, r6
     238:	4f0c      	ldr	r7, [pc, #48]	; (26c <_ZN8AIS328DQ5beginEv+0x54>)
     23a:	47b8      	blx	r7
	   packet = {
     23c:	0023      	movs	r3, r4
     23e:	002a      	movs	r2, r5
     240:	ca23      	ldmia	r2!, {r0, r1, r5}
     242:	c323      	stmia	r3!, {r0, r1, r5}
	   i2c_master_write_packet_wait(&i2c_master_instance, &packet);
     244:	0021      	movs	r1, r4
     246:	0030      	movs	r0, r6
     248:	47b8      	blx	r7
	   packet = {
     24a:	0023      	movs	r3, r4
     24c:	4645      	mov	r5, r8
     24e:	cd07      	ldmia	r5!, {r0, r1, r2}
     250:	c307      	stmia	r3!, {r0, r1, r2}
	   i2c_master_write_packet_wait(&i2c_master_instance, &packet);
     252:	0021      	movs	r1, r4
     254:	0030      	movs	r0, r6
     256:	47b8      	blx	r7
}
     258:	b004      	add	sp, #16
     25a:	bc04      	pop	{r2}
     25c:	4690      	mov	r8, r2
     25e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     260:	00000115 	.word	0x00000115
     264:	000064f8 	.word	0x000064f8
     268:	20000204 	.word	0x20000204
     26c:	00000c75 	.word	0x00000c75

00000270 <_ZN8AIS328DQ16XYZdataAvailableEv>:
bool AIS328DQ :: XYZdataAvailable(){
     270:	b510      	push	{r4, lr}
     272:	b082      	sub	sp, #8
	uint8_t writeBuffer[1] = { AIS328DQ_ACC_STAT_REG };
     274:	a901      	add	r1, sp, #4
     276:	2327      	movs	r3, #39	; 0x27
     278:	700b      	strb	r3, [r1, #0]
	readRegister8(writeBuffer, &dummy);	
     27a:	466b      	mov	r3, sp
     27c:	1ddc      	adds	r4, r3, #7
     27e:	0022      	movs	r2, r4
     280:	4b03      	ldr	r3, [pc, #12]	; (290 <_ZN8AIS328DQ16XYZdataAvailableEv+0x20>)
     282:	4798      	blx	r3
	if (dummy & 0x04 != 0)
     284:	7823      	ldrb	r3, [r4, #0]
     286:	2001      	movs	r0, #1
     288:	4018      	ands	r0, r3
}
     28a:	b002      	add	sp, #8
     28c:	bd10      	pop	{r4, pc}
     28e:	46c0      	nop			; (mov r8, r8)
     290:	000001a1 	.word	0x000001a1

00000294 <_ZN8AIS328DQ13readRawAccelXEPs>:
void AIS328DQ::readRawAccelX( int16_t* data_){
     294:	b5f0      	push	{r4, r5, r6, r7, lr}
     296:	b085      	sub	sp, #20
     298:	0006      	movs	r6, r0
     29a:	000f      	movs	r7, r1
	uint8_t writeBuffer[1] = { AIS328DQ_ACC_OUTX_L_XL };
     29c:	a902      	add	r1, sp, #8
     29e:	2328      	movs	r3, #40	; 0x28
     2a0:	700b      	strb	r3, [r1, #0]
	status_t returnError   = readRegister8(writeBuffer, &myBuffer[0]); //LSB
     2a2:	ac03      	add	r4, sp, #12
     2a4:	0022      	movs	r2, r4
     2a6:	4d08      	ldr	r5, [pc, #32]	; (2c8 <_ZN8AIS328DQ13readRawAccelXEPs+0x34>)
     2a8:	47a8      	blx	r5
	uint8_t writeBuffer1[1]= { AIS328DQ_ACC_OUTX_H_XL };
     2aa:	a901      	add	r1, sp, #4
     2ac:	2329      	movs	r3, #41	; 0x29
     2ae:	700b      	strb	r3, [r1, #0]
	returnError            = readRegister8(writeBuffer1, &myBuffer[1]); //MSB
     2b0:	220d      	movs	r2, #13
     2b2:	446a      	add	r2, sp
     2b4:	0030      	movs	r0, r6
     2b6:	47a8      	blx	r5
	int16_t output         = (int16_t)myBuffer[0] | (int16_t)(myBuffer[1] << 8); //(LSB | MSB)
     2b8:	7862      	ldrb	r2, [r4, #1]
     2ba:	0212      	lsls	r2, r2, #8
     2bc:	7823      	ldrb	r3, [r4, #0]
     2be:	4313      	orrs	r3, r2
	*data_ = output;
     2c0:	803b      	strh	r3, [r7, #0]
}
     2c2:	b005      	add	sp, #20
     2c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2c6:	46c0      	nop			; (mov r8, r8)
     2c8:	000001a1 	.word	0x000001a1

000002cc <_ZN8AIS328DQ13readRawAccelYEPs>:
void AIS328DQ::readRawAccelY( int16_t* data_){
     2cc:	b5f0      	push	{r4, r5, r6, r7, lr}
     2ce:	b085      	sub	sp, #20
     2d0:	0006      	movs	r6, r0
     2d2:	000f      	movs	r7, r1
	uint8_t writeBuffer[1] = { AIS328DQ_ACC_OUTY_L_XL };
     2d4:	a902      	add	r1, sp, #8
     2d6:	232a      	movs	r3, #42	; 0x2a
     2d8:	700b      	strb	r3, [r1, #0]
	status_t returnError   = readRegister8(writeBuffer, &myBuffer[0]); //LSB
     2da:	ac03      	add	r4, sp, #12
     2dc:	0022      	movs	r2, r4
     2de:	4d08      	ldr	r5, [pc, #32]	; (300 <_ZN8AIS328DQ13readRawAccelYEPs+0x34>)
     2e0:	47a8      	blx	r5
	uint8_t writeBuffer1[1]= { AIS328DQ_ACC_OUTY_H_XL };
     2e2:	a901      	add	r1, sp, #4
     2e4:	232b      	movs	r3, #43	; 0x2b
     2e6:	700b      	strb	r3, [r1, #0]
	returnError            = readRegister8(writeBuffer1, &myBuffer[1]); //MSB
     2e8:	220d      	movs	r2, #13
     2ea:	446a      	add	r2, sp
     2ec:	0030      	movs	r0, r6
     2ee:	47a8      	blx	r5
	int16_t output         = (int16_t)myBuffer[0] | (int16_t)(myBuffer[1] << 8); //(LSB | MSB)
     2f0:	7862      	ldrb	r2, [r4, #1]
     2f2:	0212      	lsls	r2, r2, #8
     2f4:	7823      	ldrb	r3, [r4, #0]
     2f6:	4313      	orrs	r3, r2
	*data_ = output;
     2f8:	803b      	strh	r3, [r7, #0]
}
     2fa:	b005      	add	sp, #20
     2fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2fe:	46c0      	nop			; (mov r8, r8)
     300:	000001a1 	.word	0x000001a1

00000304 <_ZN8AIS328DQ13readRawAccelZEPs>:
void AIS328DQ::readRawAccelZ( int16_t* data_){
     304:	b5f0      	push	{r4, r5, r6, r7, lr}
     306:	b085      	sub	sp, #20
     308:	0006      	movs	r6, r0
     30a:	000f      	movs	r7, r1
	uint8_t writeBuffer[1] = { AIS328DQ_ACC_OUTZ_L_XL };
     30c:	a902      	add	r1, sp, #8
     30e:	232c      	movs	r3, #44	; 0x2c
     310:	700b      	strb	r3, [r1, #0]
	status_t returnError   = readRegister8(writeBuffer, &myBuffer[0]); //LSB
     312:	ac03      	add	r4, sp, #12
     314:	0022      	movs	r2, r4
     316:	4d08      	ldr	r5, [pc, #32]	; (338 <_ZN8AIS328DQ13readRawAccelZEPs+0x34>)
     318:	47a8      	blx	r5
	uint8_t writeBuffer1[1]= { AIS328DQ_ACC_OUTZ_H_XL };
     31a:	a901      	add	r1, sp, #4
     31c:	232d      	movs	r3, #45	; 0x2d
     31e:	700b      	strb	r3, [r1, #0]
	returnError            = readRegister8(writeBuffer1, &myBuffer[1]); //MSB
     320:	220d      	movs	r2, #13
     322:	446a      	add	r2, sp
     324:	0030      	movs	r0, r6
     326:	47a8      	blx	r5
	int16_t output         = (int16_t)myBuffer[0] | (int16_t)(myBuffer[1] << 8); //(LSB | MSB)
     328:	7862      	ldrb	r2, [r4, #1]
     32a:	0212      	lsls	r2, r2, #8
     32c:	7823      	ldrb	r3, [r4, #0]
     32e:	4313      	orrs	r3, r2
	*data_ = output;
     330:	803b      	strh	r3, [r7, #0]
}
     332:	b005      	add	sp, #20
     334:	bdf0      	pop	{r4, r5, r6, r7, pc}
     336:	46c0      	nop			; (mov r8, r8)
     338:	000001a1 	.word	0x000001a1

0000033c <_ZN8AIS328DQ9calcAccelEs>:
float AIS328DQ::calcAccel( int16_t input ){
     33c:	b5d0      	push	{r4, r6, r7, lr}
     33e:	000c      	movs	r4, r1
	float output = (float)(((float)input * 0.061 * (Accel_setting.accelRange >> 1)) / 1000.0); // 3.91 (typical) is the Linear acceleration sensitivity (refer to datasheet)
     340:	88c0      	ldrh	r0, [r0, #6]
     342:	1040      	asrs	r0, r0, #1
     344:	4b0c      	ldr	r3, [pc, #48]	; (378 <_ZN8AIS328DQ9calcAccelEs+0x3c>)
     346:	4798      	blx	r3
     348:	0006      	movs	r6, r0
     34a:	000f      	movs	r7, r1
     34c:	0020      	movs	r0, r4
     34e:	4b0b      	ldr	r3, [pc, #44]	; (37c <_ZN8AIS328DQ9calcAccelEs+0x40>)
     350:	4798      	blx	r3
     352:	4b0b      	ldr	r3, [pc, #44]	; (380 <_ZN8AIS328DQ9calcAccelEs+0x44>)
     354:	4798      	blx	r3
     356:	4c0b      	ldr	r4, [pc, #44]	; (384 <_ZN8AIS328DQ9calcAccelEs+0x48>)
     358:	4a0b      	ldr	r2, [pc, #44]	; (388 <_ZN8AIS328DQ9calcAccelEs+0x4c>)
     35a:	4b0c      	ldr	r3, [pc, #48]	; (38c <_ZN8AIS328DQ9calcAccelEs+0x50>)
     35c:	47a0      	blx	r4
     35e:	0002      	movs	r2, r0
     360:	000b      	movs	r3, r1
     362:	0030      	movs	r0, r6
     364:	0039      	movs	r1, r7
     366:	47a0      	blx	r4
     368:	2200      	movs	r2, #0
     36a:	4b09      	ldr	r3, [pc, #36]	; (390 <_ZN8AIS328DQ9calcAccelEs+0x54>)
     36c:	4c09      	ldr	r4, [pc, #36]	; (394 <_ZN8AIS328DQ9calcAccelEs+0x58>)
     36e:	47a0      	blx	r4
     370:	4b09      	ldr	r3, [pc, #36]	; (398 <_ZN8AIS328DQ9calcAccelEs+0x5c>)
     372:	4798      	blx	r3
}
     374:	bdd0      	pop	{r4, r6, r7, pc}
     376:	46c0      	nop			; (mov r8, r8)
     378:	00006211 	.word	0x00006211
     37c:	00004715 	.word	0x00004715
     380:	00006305 	.word	0x00006305
     384:	0000563d 	.word	0x0000563d
     388:	5a1cac08 	.word	0x5a1cac08
     38c:	3faf3b64 	.word	0x3faf3b64
     390:	408f4000 	.word	0x408f4000
     394:	00004dd5 	.word	0x00004dd5
     398:	000063a9 	.word	0x000063a9

0000039c <_ZN8AIS328DQ15readFloatAccelXEv>:
float AIS328DQ::readFloatAccelX( void ){
     39c:	b530      	push	{r4, r5, lr}
     39e:	b083      	sub	sp, #12
     3a0:	0004      	movs	r4, r0
	readRawAccelX(&Xaxis);
     3a2:	466b      	mov	r3, sp
     3a4:	1d9d      	adds	r5, r3, #6
     3a6:	0029      	movs	r1, r5
     3a8:	4b04      	ldr	r3, [pc, #16]	; (3bc <_ZN8AIS328DQ15readFloatAccelXEv+0x20>)
     3aa:	4798      	blx	r3
	float output = calcAccel(Xaxis);
     3ac:	2300      	movs	r3, #0
     3ae:	5ee9      	ldrsh	r1, [r5, r3]
     3b0:	0020      	movs	r0, r4
     3b2:	4b03      	ldr	r3, [pc, #12]	; (3c0 <_ZN8AIS328DQ15readFloatAccelXEv+0x24>)
     3b4:	4798      	blx	r3
}
     3b6:	b003      	add	sp, #12
     3b8:	bd30      	pop	{r4, r5, pc}
     3ba:	46c0      	nop			; (mov r8, r8)
     3bc:	00000295 	.word	0x00000295
     3c0:	0000033d 	.word	0x0000033d

000003c4 <_ZN8AIS328DQ15readFloatAccelYEv>:
float AIS328DQ::readFloatAccelY( void ){
     3c4:	b530      	push	{r4, r5, lr}
     3c6:	b083      	sub	sp, #12
     3c8:	0004      	movs	r4, r0
	readRawAccelY(&Yaxis);
     3ca:	466b      	mov	r3, sp
     3cc:	1d9d      	adds	r5, r3, #6
     3ce:	0029      	movs	r1, r5
     3d0:	4b04      	ldr	r3, [pc, #16]	; (3e4 <_ZN8AIS328DQ15readFloatAccelYEv+0x20>)
     3d2:	4798      	blx	r3
	float output = calcAccel(Yaxis);
     3d4:	2300      	movs	r3, #0
     3d6:	5ee9      	ldrsh	r1, [r5, r3]
     3d8:	0020      	movs	r0, r4
     3da:	4b03      	ldr	r3, [pc, #12]	; (3e8 <_ZN8AIS328DQ15readFloatAccelYEv+0x24>)
     3dc:	4798      	blx	r3
}
     3de:	b003      	add	sp, #12
     3e0:	bd30      	pop	{r4, r5, pc}
     3e2:	46c0      	nop			; (mov r8, r8)
     3e4:	000002cd 	.word	0x000002cd
     3e8:	0000033d 	.word	0x0000033d

000003ec <_ZN8AIS328DQ15readFloatAccelZEv>:
float AIS328DQ::readFloatAccelZ( void ){
     3ec:	b530      	push	{r4, r5, lr}
     3ee:	b083      	sub	sp, #12
     3f0:	0004      	movs	r4, r0
	readRawAccelZ(&Zaxis);
     3f2:	466b      	mov	r3, sp
     3f4:	1d9d      	adds	r5, r3, #6
     3f6:	0029      	movs	r1, r5
     3f8:	4b04      	ldr	r3, [pc, #16]	; (40c <_ZN8AIS328DQ15readFloatAccelZEv+0x20>)
     3fa:	4798      	blx	r3
	float output = calcAccel(Zaxis);
     3fc:	2300      	movs	r3, #0
     3fe:	5ee9      	ldrsh	r1, [r5, r3]
     400:	0020      	movs	r0, r4
     402:	4b03      	ldr	r3, [pc, #12]	; (410 <_ZN8AIS328DQ15readFloatAccelZEv+0x24>)
     404:	4798      	blx	r3
}
     406:	b003      	add	sp, #12
     408:	bd30      	pop	{r4, r5, pc}
     40a:	46c0      	nop			; (mov r8, r8)
     40c:	00000305 	.word	0x00000305
     410:	0000033d 	.word	0x0000033d

00000414 <_ZN8AIS328DQC1Eh>:
	I2CAddress =  i2cADD;
     414:	7001      	strb	r1, [r0, #0]
	uint16_t accelSampleRate;
	uint16_t accelBandWidth;
	
	private:
	
}SensorSettings;
     416:	2327      	movs	r3, #39	; 0x27
     418:	7083      	strb	r3, [r0, #2]
     41a:	2230      	movs	r2, #48	; 0x30
     41c:	70c2      	strb	r2, [r0, #3]
     41e:	3a28      	subs	r2, #40	; 0x28
     420:	80c2      	strh	r2, [r0, #6]
}
     422:	4770      	bx	lr

00000424 <usart_serial_getchar>:
 * \param[out]    c       Destination for the read character.
 */
static inline void usart_serial_getchar(
		struct usart_module *const module,
		uint8_t *c)
{
     424:	b570      	push	{r4, r5, r6, lr}
     426:	b082      	sub	sp, #8
     428:	0005      	movs	r5, r0
     42a:	000e      	movs	r6, r1
	uint16_t temp = 0;
     42c:	2200      	movs	r2, #0
     42e:	466b      	mov	r3, sp
     430:	80da      	strh	r2, [r3, #6]

	while(STATUS_OK != usart_read_wait(module, &temp));
     432:	4c06      	ldr	r4, [pc, #24]	; (44c <usart_serial_getchar+0x28>)
     434:	466b      	mov	r3, sp
     436:	1d99      	adds	r1, r3, #6
     438:	0028      	movs	r0, r5
     43a:	47a0      	blx	r4
     43c:	2800      	cmp	r0, #0
     43e:	d1f9      	bne.n	434 <usart_serial_getchar+0x10>

	*c = temp;
     440:	466b      	mov	r3, sp
     442:	3306      	adds	r3, #6
     444:	881b      	ldrh	r3, [r3, #0]
     446:	7033      	strb	r3, [r6, #0]
}
     448:	b002      	add	sp, #8
     44a:	bd70      	pop	{r4, r5, r6, pc}
     44c:	00001457 	.word	0x00001457

00000450 <usart_serial_putchar>:
{
     450:	b570      	push	{r4, r5, r6, lr}
     452:	0005      	movs	r5, r0
	while(STATUS_OK !=usart_write_wait(module, c));
     454:	b28c      	uxth	r4, r1
     456:	4e03      	ldr	r6, [pc, #12]	; (464 <usart_serial_putchar+0x14>)
     458:	0021      	movs	r1, r4
     45a:	0028      	movs	r0, r5
     45c:	47b0      	blx	r6
     45e:	2800      	cmp	r0, #0
     460:	d1fa      	bne.n	458 <usart_serial_putchar+0x8>
}
     462:	bd70      	pop	{r4, r5, r6, pc}
     464:	0000142d 	.word	0x0000142d

00000468 <_Z15configure_usartv>:
struct usart_module usart_instance;
//! [module_inst]

//! [setup]
void configure_usart(void)
{
     468:	b530      	push	{r4, r5, lr}
     46a:	b091      	sub	sp, #68	; 0x44
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
     46c:	2380      	movs	r3, #128	; 0x80
     46e:	05db      	lsls	r3, r3, #23
     470:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
     472:	2300      	movs	r3, #0
     474:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
     476:	22ff      	movs	r2, #255	; 0xff
     478:	4669      	mov	r1, sp
     47a:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
     47c:	2200      	movs	r2, #0
     47e:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
     480:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
     482:	2101      	movs	r1, #1
     484:	2024      	movs	r0, #36	; 0x24
     486:	466c      	mov	r4, sp
     488:	5421      	strb	r1, [r4, r0]
	config->transmitter_enable = true;
     48a:	3001      	adds	r0, #1
     48c:	5421      	strb	r1, [r4, r0]
	config->clock_polarity_inverted = false;
     48e:	3125      	adds	r1, #37	; 0x25
     490:	5463      	strb	r3, [r4, r1]
	config->use_external_clock = false;
     492:	3101      	adds	r1, #1
     494:	5463      	strb	r3, [r4, r1]
	config->ext_clock_freq   = 0;
     496:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
     498:	3105      	adds	r1, #5
     49a:	5463      	strb	r3, [r4, r1]
	config->generator_source = GCLK_GENERATOR_0;
     49c:	3101      	adds	r1, #1
     49e:	5463      	strb	r3, [r4, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
     4a0:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
     4a2:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
     4a4:	76e3      	strb	r3, [r4, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
     4a6:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
     4a8:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
     4aa:	7662      	strb	r2, [r4, #25]
	config->receive_pulse_length                    = 19;
     4ac:	2313      	movs	r3, #19
     4ae:	76a3      	strb	r3, [r4, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
     4b0:	7762      	strb	r2, [r4, #29]
	//! [setup_config_defaults]
	usart_get_config_defaults(&config_usart);
	//! [setup_config_defaults]

	//! [setup_change_config]
	config_usart.baudrate    = 38400;
     4b2:	2396      	movs	r3, #150	; 0x96
     4b4:	021b      	lsls	r3, r3, #8
     4b6:	9308      	str	r3, [sp, #32]
	config_usart.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
     4b8:	2380      	movs	r3, #128	; 0x80
     4ba:	035b      	lsls	r3, r3, #13
     4bc:	9303      	str	r3, [sp, #12]
	config_usart.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
     4be:	4b19      	ldr	r3, [pc, #100]	; (524 <_Z15configure_usartv+0xbc>)
     4c0:	930c      	str	r3, [sp, #48]	; 0x30
	config_usart.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
     4c2:	4b19      	ldr	r3, [pc, #100]	; (528 <_Z15configure_usartv+0xc0>)
     4c4:	930d      	str	r3, [sp, #52]	; 0x34
	config_usart.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
     4c6:	2301      	movs	r3, #1
     4c8:	425b      	negs	r3, r3
     4ca:	930e      	str	r3, [sp, #56]	; 0x38
	config_usart.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
     4cc:	930f      	str	r3, [sp, #60]	; 0x3c
static inline void stdio_serial_init(
		struct usart_module *const module,
		usart_inst_t const hw,
		const struct usart_config *const config)
{
	stdio_base = (void *)module;
     4ce:	4817      	ldr	r0, [pc, #92]	; (52c <_Z15configure_usartv+0xc4>)
     4d0:	4b17      	ldr	r3, [pc, #92]	; (530 <_Z15configure_usartv+0xc8>)
     4d2:	6018      	str	r0, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     4d4:	4a17      	ldr	r2, [pc, #92]	; (534 <_Z15configure_usartv+0xcc>)
     4d6:	4b18      	ldr	r3, [pc, #96]	; (538 <_Z15configure_usartv+0xd0>)
     4d8:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     4da:	4a18      	ldr	r2, [pc, #96]	; (53c <_Z15configure_usartv+0xd4>)
     4dc:	4b18      	ldr	r3, [pc, #96]	; (540 <_Z15configure_usartv+0xd8>)
     4de:	601a      	str	r2, [r3, #0]
	if (usart_init(module, hw, config) == STATUS_OK) {
     4e0:	466a      	mov	r2, sp
     4e2:	4918      	ldr	r1, [pc, #96]	; (544 <_Z15configure_usartv+0xdc>)
     4e4:	4b18      	ldr	r3, [pc, #96]	; (548 <_Z15configure_usartv+0xe0>)
     4e6:	4798      	blx	r3

	usart_serial_init(module, hw, config);
# if defined(__GNUC__)
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
     4e8:	4d18      	ldr	r5, [pc, #96]	; (54c <_Z15configure_usartv+0xe4>)
     4ea:	682b      	ldr	r3, [r5, #0]
     4ec:	6898      	ldr	r0, [r3, #8]
     4ee:	2100      	movs	r1, #0
     4f0:	4c17      	ldr	r4, [pc, #92]	; (550 <_Z15configure_usartv+0xe8>)
     4f2:	47a0      	blx	r4
	setbuf(stdin, NULL);
     4f4:	682b      	ldr	r3, [r5, #0]
     4f6:	6858      	ldr	r0, [r3, #4]
     4f8:	2100      	movs	r1, #0
     4fa:	47a0      	blx	r4
	//! [setup_change_config]

	stdio_serial_init(&usart_instance, EDBG_CDC_MODULE,&config_usart);

	//! [setup_set_config]
	while (usart_init(&usart_instance,
     4fc:	4d0b      	ldr	r5, [pc, #44]	; (52c <_Z15configure_usartv+0xc4>)
     4fe:	4c12      	ldr	r4, [pc, #72]	; (548 <_Z15configure_usartv+0xe0>)
     500:	466a      	mov	r2, sp
     502:	4910      	ldr	r1, [pc, #64]	; (544 <_Z15configure_usartv+0xdc>)
     504:	0028      	movs	r0, r5
     506:	47a0      	blx	r4
     508:	2800      	cmp	r0, #0
     50a:	d1f9      	bne.n	500 <_Z15configure_usartv+0x98>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
     50c:	4b07      	ldr	r3, [pc, #28]	; (52c <_Z15configure_usartv+0xc4>)
     50e:	681a      	ldr	r2, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
     510:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     512:	2b00      	cmp	r3, #0
     514:	d1fc      	bne.n	510 <_Z15configure_usartv+0xa8>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     516:	6813      	ldr	r3, [r2, #0]
     518:	2102      	movs	r1, #2
     51a:	430b      	orrs	r3, r1
     51c:	6013      	str	r3, [r2, #0]
	//! [setup_set_config]

	//! [setup_enable]
	usart_enable(&usart_instance);
	//! [setup_enable]
}
     51e:	b011      	add	sp, #68	; 0x44
     520:	bd30      	pop	{r4, r5, pc}
     522:	46c0      	nop			; (mov r8, r8)
     524:	001b0002 	.word	0x001b0002
     528:	001c0002 	.word	0x001c0002
     52c:	2000024c 	.word	0x2000024c
     530:	200002a4 	.word	0x200002a4
     534:	00000451 	.word	0x00000451
     538:	200002a0 	.word	0x200002a0
     53c:	00000425 	.word	0x00000425
     540:	2000029c 	.word	0x2000029c
     544:	42000c00 	.word	0x42000c00
     548:	00001131 	.word	0x00001131
     54c:	20000018 	.word	0x20000018
     550:	00002385 	.word	0x00002385

00000554 <_Z19configure_port_pinsv>:


AIS328DQ _AIS328DQ(0x18);

void configure_port_pins(void)
{
     554:	b570      	push	{r4, r5, r6, lr}
     556:	b082      	sub	sp, #8
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
     558:	ac01      	add	r4, sp, #4
     55a:	2300      	movs	r3, #0
     55c:	7023      	strb	r3, [r4, #0]
	config->input_pull = PORT_PIN_PULL_UP;
     55e:	2601      	movs	r6, #1
     560:	7066      	strb	r6, [r4, #1]
	config->powersave  = false;
     562:	70a3      	strb	r3, [r4, #2]
	//! [setup_3]
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
	config_port_pin.input_pull = PORT_PIN_PULL_UP;
	//! [setup_3]
	//! [setup_4]
	port_pin_set_config(BUTTON_0_PIN, &config_port_pin);
     564:	0021      	movs	r1, r4
     566:	2023      	movs	r0, #35	; 0x23
     568:	4d03      	ldr	r5, [pc, #12]	; (578 <_Z19configure_port_pinsv+0x24>)
     56a:	47a8      	blx	r5
	//! [setup_4]

	//! [setup_5]
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     56c:	7026      	strb	r6, [r4, #0]
	//! [setup_5]
	//! [setup_6]
	port_pin_set_config(LED_0_PIN, &config_port_pin);
     56e:	0021      	movs	r1, r4
     570:	2000      	movs	r0, #0
     572:	47a8      	blx	r5
	//! [setup_6]
}
     574:	b002      	add	sp, #8
     576:	bd70      	pop	{r4, r5, r6, pc}
     578:	0000110d 	.word	0x0000110d

0000057c <main>:

int main(void)
{
     57c:	b5f0      	push	{r4, r5, r6, r7, lr}
     57e:	b08b      	sub	sp, #44	; 0x2c
    /* Initialize the SAM system */
    SystemInit();
     580:	4b25      	ldr	r3, [pc, #148]	; (618 <main+0x9c>)
     582:	4798      	blx	r3
	board_init();
     584:	4b25      	ldr	r3, [pc, #148]	; (61c <main+0xa0>)
     586:	4798      	blx	r3
	delay_init();
     588:	4b25      	ldr	r3, [pc, #148]	; (620 <main+0xa4>)
     58a:	4798      	blx	r3
	configure_usart();
     58c:	4b25      	ldr	r3, [pc, #148]	; (624 <main+0xa8>)
     58e:	4798      	blx	r3
	uint8_t dummy;
	int16_t Xaxis, Yaxis, Zaxis;
	//Configure GPIOs for LED blinking
    configure_port_pins();
     590:	4b25      	ldr	r3, [pc, #148]	; (628 <main+0xac>)
     592:	4798      	blx	r3
	_AIS328DQ.begin();
     594:	4c25      	ldr	r4, [pc, #148]	; (62c <main+0xb0>)
     596:	340c      	adds	r4, #12
     598:	0020      	movs	r0, r4
     59a:	4b25      	ldr	r3, [pc, #148]	; (630 <main+0xb4>)
     59c:	4798      	blx	r3
	uint8_t writeBuffer[1] = { AIS328DQ_ACC_CTRL_REG4 }; // WHO AM I dummy register
     59e:	a909      	add	r1, sp, #36	; 0x24
     5a0:	2323      	movs	r3, #35	; 0x23
     5a2:	700b      	strb	r3, [r1, #0]
	_AIS328DQ.readRegister8(writeBuffer, &dummy);
     5a4:	2517      	movs	r5, #23
     5a6:	ab04      	add	r3, sp, #16
     5a8:	469c      	mov	ip, r3
     5aa:	4465      	add	r5, ip
     5ac:	002a      	movs	r2, r5
     5ae:	0020      	movs	r0, r4
     5b0:	4b20      	ldr	r3, [pc, #128]	; (634 <main+0xb8>)
     5b2:	4798      	blx	r3
	printf("Got: %X\r\n", dummy);
     5b4:	7829      	ldrb	r1, [r5, #0]
     5b6:	4820      	ldr	r0, [pc, #128]	; (638 <main+0xbc>)
     5b8:	4b20      	ldr	r3, [pc, #128]	; (63c <main+0xc0>)
     5ba:	4798      	blx	r3
	
    /* Replace with your application code */
	printf("setup done!\r\n");
     5bc:	4820      	ldr	r0, [pc, #128]	; (640 <main+0xc4>)
     5be:	4b21      	ldr	r3, [pc, #132]	; (644 <main+0xc8>)
     5c0:	4798      	blx	r3
    while (1) 
    {	
		if(_AIS328DQ.XYZdataAvailable()){ //make sure the data is available before trying to read copies of same
     5c2:	4c1a      	ldr	r4, [pc, #104]	; (62c <main+0xb0>)
     5c4:	340c      	adds	r4, #12
     5c6:	4e20      	ldr	r6, [pc, #128]	; (648 <main+0xcc>)
					
			float Xaxis, Yaxis, Zaxis;
			//read processed values for G
			Xaxis = _AIS328DQ.readFloatAccelX(); 
     5c8:	0025      	movs	r5, r4
		if(_AIS328DQ.XYZdataAvailable()){ //make sure the data is available before trying to read copies of same
     5ca:	0020      	movs	r0, r4
     5cc:	47b0      	blx	r6
     5ce:	2800      	cmp	r0, #0
     5d0:	d0fb      	beq.n	5ca <main+0x4e>
			Xaxis = _AIS328DQ.readFloatAccelX(); 
     5d2:	0028      	movs	r0, r5
     5d4:	4b1d      	ldr	r3, [pc, #116]	; (64c <main+0xd0>)
     5d6:	4798      	blx	r3
     5d8:	9004      	str	r0, [sp, #16]
			Yaxis = _AIS328DQ.readFloatAccelY();
     5da:	0028      	movs	r0, r5
     5dc:	4b1c      	ldr	r3, [pc, #112]	; (650 <main+0xd4>)
     5de:	4798      	blx	r3
     5e0:	9006      	str	r0, [sp, #24]
			Zaxis = _AIS328DQ.readFloatAccelZ();
     5e2:	0028      	movs	r0, r5
     5e4:	4b1b      	ldr	r3, [pc, #108]	; (654 <main+0xd8>)
     5e6:	4798      	blx	r3
     5e8:	9007      	str	r0, [sp, #28]
			printf("Xaxis: %.2f Yaxis: %.2f Zaxis: %.2f\r\n", Xaxis, Yaxis, Zaxis);
     5ea:	4f1b      	ldr	r7, [pc, #108]	; (658 <main+0xdc>)
     5ec:	9804      	ldr	r0, [sp, #16]
     5ee:	47b8      	blx	r7
     5f0:	9004      	str	r0, [sp, #16]
     5f2:	9105      	str	r1, [sp, #20]
     5f4:	9807      	ldr	r0, [sp, #28]
     5f6:	47b8      	blx	r7
     5f8:	9002      	str	r0, [sp, #8]
     5fa:	9103      	str	r1, [sp, #12]
     5fc:	9806      	ldr	r0, [sp, #24]
     5fe:	47b8      	blx	r7
     600:	9000      	str	r0, [sp, #0]
     602:	9101      	str	r1, [sp, #4]
     604:	9a04      	ldr	r2, [sp, #16]
     606:	9b05      	ldr	r3, [sp, #20]
     608:	4814      	ldr	r0, [pc, #80]	; (65c <main+0xe0>)
     60a:	490c      	ldr	r1, [pc, #48]	; (63c <main+0xc0>)
     60c:	4788      	blx	r1
			delay_ms(32);
     60e:	2020      	movs	r0, #32
     610:	4b13      	ldr	r3, [pc, #76]	; (660 <main+0xe4>)
     612:	4798      	blx	r3
     614:	e7d9      	b.n	5ca <main+0x4e>
     616:	46c0      	nop			; (mov r8, r8)
     618:	00001865 	.word	0x00001865
     61c:	000010d9 	.word	0x000010d9
     620:	00000ffd 	.word	0x00000ffd
     624:	00000469 	.word	0x00000469
     628:	00000555 	.word	0x00000555
     62c:	2000024c 	.word	0x2000024c
     630:	00000219 	.word	0x00000219
     634:	000001a1 	.word	0x000001a1
     638:	00006510 	.word	0x00006510
     63c:	0000227d 	.word	0x0000227d
     640:	0000651c 	.word	0x0000651c
     644:	00002371 	.word	0x00002371
     648:	00000271 	.word	0x00000271
     64c:	0000039d 	.word	0x0000039d
     650:	000003c5 	.word	0x000003c5
     654:	000003ed 	.word	0x000003ed
     658:	00006305 	.word	0x00006305
     65c:	0000652c 	.word	0x0000652c
     660:	0000103d 	.word	0x0000103d

00000664 <_GLOBAL__sub_I_usart_instance>:
		delay_ms(500);
		port_pin_set_output_level(LED_0_PIN, false);
		delay_ms(500);
		*/
    }
}
     664:	b510      	push	{r4, lr}
AIS328DQ _AIS328DQ(0x18);
     666:	2118      	movs	r1, #24
     668:	4802      	ldr	r0, [pc, #8]	; (674 <_GLOBAL__sub_I_usart_instance+0x10>)
     66a:	300c      	adds	r0, #12
     66c:	4b02      	ldr	r3, [pc, #8]	; (678 <_GLOBAL__sub_I_usart_instance+0x14>)
     66e:	4798      	blx	r3
}
     670:	bd10      	pop	{r4, pc}
     672:	46c0      	nop			; (mov r8, r8)
     674:	2000024c 	.word	0x2000024c
     678:	00000415 	.word	0x00000415

0000067c <_i2c_master_wait_for_sync>:
{
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_hw = &(module->hw->I2CM);
     67c:	6801      	ldr	r1, [r0, #0]

#if defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_1)
	return (i2c_hw->STATUS.reg & SERCOM_I2CM_STATUS_SYNCBUSY);
#elif defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_2)
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     67e:	2207      	movs	r2, #7
     680:	69cb      	ldr	r3, [r1, #28]
		const struct i2c_master_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (i2c_master_is_syncing(module)) {
     682:	421a      	tst	r2, r3
     684:	d1fc      	bne.n	680 <_i2c_master_wait_for_sync+0x4>
		/* Wait for I2C module to sync. */
	}
}
     686:	4770      	bx	lr

00000688 <i2c_master_init>:
 */
enum status_code i2c_master_init(
		struct i2c_master_module *const module,
		Sercom *const hw,
		const struct i2c_master_config *const config)
{
     688:	b5f0      	push	{r4, r5, r6, r7, lr}
     68a:	46d6      	mov	lr, sl
     68c:	464f      	mov	r7, r9
     68e:	4646      	mov	r6, r8
     690:	b5c0      	push	{r6, r7, lr}
     692:	b08a      	sub	sp, #40	; 0x28
     694:	0006      	movs	r6, r0
     696:	000f      	movs	r7, r1
     698:	0014      	movs	r4, r2
	Assert(module);
	Assert(hw);
	Assert(config);

	/* Initialize software module */
	module->hw = hw;
     69a:	6031      	str	r1, [r6, #0]

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     69c:	0008      	movs	r0, r1
     69e:	4b97      	ldr	r3, [pc, #604]	; (8fc <STACK_SIZE+0xfc>)
     6a0:	4798      	blx	r3
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
     6a2:	4a97      	ldr	r2, [pc, #604]	; (900 <STACK_SIZE+0x100>)
     6a4:	6a11      	ldr	r1, [r2, #32]
		gclk_index   = SERCOM5_GCLK_ID_CORE;
	} else {
		gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
	}
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     6a6:	1c85      	adds	r5, r0, #2
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBD, 1 << pm_index);
	} else {
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
	}
#else
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     6a8:	2301      	movs	r3, #1
     6aa:	40ab      	lsls	r3, r5
     6ac:	430b      	orrs	r3, r1
     6ae:	6213      	str	r3, [r2, #32]
#endif

	/* Set up the GCLK for the module */
	struct system_gclk_chan_config gclk_chan_conf;
	system_gclk_chan_get_config_defaults(&gclk_chan_conf);
	gclk_chan_conf.source_generator = config->generator_source;
     6b0:	a909      	add	r1, sp, #36	; 0x24
     6b2:	7b23      	ldrb	r3, [r4, #12]
     6b4:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     6b6:	3014      	adds	r0, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     6b8:	b2c5      	uxtb	r5, r0
     6ba:	0028      	movs	r0, r5
     6bc:	4b91      	ldr	r3, [pc, #580]	; (904 <STACK_SIZE+0x104>)
     6be:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     6c0:	0028      	movs	r0, r5
     6c2:	4b91      	ldr	r3, [pc, #580]	; (908 <STACK_SIZE+0x108>)
     6c4:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     6c6:	7b20      	ldrb	r0, [r4, #12]
     6c8:	2100      	movs	r1, #0
     6ca:	4b90      	ldr	r3, [pc, #576]	; (90c <STACK_SIZE+0x10c>)
     6cc:	4798      	blx	r3

	/* Check if module is enabled. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
     6ce:	683b      	ldr	r3, [r7, #0]
		return STATUS_ERR_DENIED;
     6d0:	201c      	movs	r0, #28
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
     6d2:	079b      	lsls	r3, r3, #30
     6d4:	d505      	bpl.n	6e2 <i2c_master_init+0x5a>
	/* Set sercom module to operate in I2C master mode. */
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);

	/* Set config and return status. */
	return _i2c_master_set_config(module, config);
}
     6d6:	b00a      	add	sp, #40	; 0x28
     6d8:	bc1c      	pop	{r2, r3, r4}
     6da:	4690      	mov	r8, r2
     6dc:	4699      	mov	r9, r3
     6de:	46a2      	mov	sl, r4
     6e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
     6e2:	683b      	ldr	r3, [r7, #0]
		return STATUS_BUSY;
     6e4:	3817      	subs	r0, #23
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
     6e6:	07db      	lsls	r3, r3, #31
     6e8:	d4f5      	bmi.n	6d6 <i2c_master_init+0x4e>
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);
     6ea:	2314      	movs	r3, #20
     6ec:	603b      	str	r3, [r7, #0]
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     6ee:	6833      	ldr	r3, [r6, #0]
     6f0:	4698      	mov	r8, r3
	uint8_t sercom_index = _sercom_get_sercom_inst_index(sercom_hw);
     6f2:	0018      	movs	r0, r3
     6f4:	4b81      	ldr	r3, [pc, #516]	; (8fc <STACK_SIZE+0xfc>)
     6f6:	4798      	blx	r3
     6f8:	0005      	movs	r5, r0
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
     6fa:	2380      	movs	r3, #128	; 0x80
     6fc:	aa08      	add	r2, sp, #32
     6fe:	7013      	strb	r3, [r2, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     700:	2300      	movs	r3, #0
     702:	7053      	strb	r3, [r2, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     704:	2201      	movs	r2, #1
     706:	a908      	add	r1, sp, #32
     708:	708a      	strb	r2, [r1, #2]
	config->powersave    = false;
     70a:	70cb      	strb	r3, [r1, #3]
	uint32_t pad0 = config->pinmux_pad0;
     70c:	69e0      	ldr	r0, [r4, #28]
	uint32_t pad1 = config->pinmux_pad1;
     70e:	6a27      	ldr	r7, [r4, #32]
	if (pad0 == PINMUX_DEFAULT) {
     710:	2800      	cmp	r0, #0
     712:	d100      	bne.n	716 <i2c_master_init+0x8e>
     714:	e0af      	b.n	876 <STACK_SIZE+0x76>
	pin_conf.mux_position = pad0 & 0xFFFF;
     716:	ab08      	add	r3, sp, #32
     718:	7018      	strb	r0, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     71a:	2302      	movs	r3, #2
     71c:	aa08      	add	r2, sp, #32
     71e:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad0 >> 16, &pin_conf);
     720:	0c00      	lsrs	r0, r0, #16
     722:	b2c0      	uxtb	r0, r0
     724:	0011      	movs	r1, r2
     726:	4b7a      	ldr	r3, [pc, #488]	; (910 <STACK_SIZE+0x110>)
     728:	4798      	blx	r3
	if (pad1 == PINMUX_DEFAULT) {
     72a:	2f00      	cmp	r7, #0
     72c:	d100      	bne.n	730 <i2c_master_init+0xa8>
     72e:	e0a7      	b.n	880 <STACK_SIZE+0x80>
	pin_conf.mux_position = pad1 & 0xFFFF;
     730:	ab08      	add	r3, sp, #32
     732:	701f      	strb	r7, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     734:	2302      	movs	r3, #2
     736:	aa08      	add	r2, sp, #32
     738:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad1 >> 16, &pin_conf);
     73a:	0c3f      	lsrs	r7, r7, #16
     73c:	b2f8      	uxtb	r0, r7
     73e:	0011      	movs	r1, r2
     740:	4b73      	ldr	r3, [pc, #460]	; (910 <STACK_SIZE+0x110>)
     742:	4798      	blx	r3
	module->unknown_bus_state_timeout = config->unknown_bus_state_timeout;
     744:	8aa3      	ldrh	r3, [r4, #20]
     746:	80f3      	strh	r3, [r6, #6]
	module->buffer_timeout = config->buffer_timeout;
     748:	8ae3      	ldrh	r3, [r4, #22]
     74a:	8133      	strh	r3, [r6, #8]
	if (config->run_in_standby || system_is_debugger_present()) {
     74c:	7e23      	ldrb	r3, [r4, #24]
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     74e:	2280      	movs	r2, #128	; 0x80
	if (config->run_in_standby || system_is_debugger_present()) {
     750:	2b00      	cmp	r3, #0
     752:	d104      	bne.n	75e <i2c_master_init+0xd6>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     754:	4b6f      	ldr	r3, [pc, #444]	; (914 <STACK_SIZE+0x114>)
     756:	789b      	ldrb	r3, [r3, #2]
     758:	079b      	lsls	r3, r3, #30
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     75a:	0fdb      	lsrs	r3, r3, #31
     75c:	01da      	lsls	r2, r3, #7
	tmp_ctrla |= config->transfer_speed;
     75e:	68a1      	ldr	r1, [r4, #8]
     760:	6923      	ldr	r3, [r4, #16]
     762:	430b      	orrs	r3, r1
     764:	4313      	orrs	r3, r2
	if (config->scl_low_timeout) {
     766:	2224      	movs	r2, #36	; 0x24
     768:	5ca2      	ldrb	r2, [r4, r2]
     76a:	2a00      	cmp	r2, #0
     76c:	d002      	beq.n	774 <i2c_master_init+0xec>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_LOWTOUTEN;
     76e:	2280      	movs	r2, #128	; 0x80
     770:	05d2      	lsls	r2, r2, #23
     772:	4313      	orrs	r3, r2
		tmp_ctrla |= config->inactive_timeout;
     774:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     776:	4313      	orrs	r3, r2
	if (config->scl_stretch_only_after_ack_bit || (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED)) {
     778:	222c      	movs	r2, #44	; 0x2c
     77a:	5ca2      	ldrb	r2, [r4, r2]
     77c:	2a00      	cmp	r2, #0
     77e:	d103      	bne.n	788 <i2c_master_init+0x100>
     780:	2280      	movs	r2, #128	; 0x80
     782:	0492      	lsls	r2, r2, #18
     784:	4291      	cmp	r1, r2
     786:	d102      	bne.n	78e <i2c_master_init+0x106>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SCLSM;
     788:	2280      	movs	r2, #128	; 0x80
     78a:	0512      	lsls	r2, r2, #20
     78c:	4313      	orrs	r3, r2
	if (config->slave_scl_low_extend_timeout) {
     78e:	222d      	movs	r2, #45	; 0x2d
     790:	5ca2      	ldrb	r2, [r4, r2]
     792:	2a00      	cmp	r2, #0
     794:	d002      	beq.n	79c <i2c_master_init+0x114>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SEXTTOEN;
     796:	2280      	movs	r2, #128	; 0x80
     798:	0412      	lsls	r2, r2, #16
     79a:	4313      	orrs	r3, r2
	if (config->master_scl_low_extend_timeout) {
     79c:	222e      	movs	r2, #46	; 0x2e
     79e:	5ca2      	ldrb	r2, [r4, r2]
     7a0:	2a00      	cmp	r2, #0
     7a2:	d002      	beq.n	7aa <i2c_master_init+0x122>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_MEXTTOEN;
     7a4:	2280      	movs	r2, #128	; 0x80
     7a6:	03d2      	lsls	r2, r2, #15
     7a8:	4313      	orrs	r3, r2
	i2c_module->CTRLA.reg |= tmp_ctrla;
     7aa:	4642      	mov	r2, r8
     7ac:	6812      	ldr	r2, [r2, #0]
     7ae:	4313      	orrs	r3, r2
     7b0:	4642      	mov	r2, r8
     7b2:	6013      	str	r3, [r2, #0]
	i2c_module->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
     7b4:	2380      	movs	r3, #128	; 0x80
     7b6:	005b      	lsls	r3, r3, #1
     7b8:	6053      	str	r3, [r2, #4]
	uint32_t fgclk       = system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + sercom_index);
     7ba:	0028      	movs	r0, r5
     7bc:	3014      	adds	r0, #20
     7be:	b2c0      	uxtb	r0, r0
     7c0:	4b55      	ldr	r3, [pc, #340]	; (918 <STACK_SIZE+0x118>)
     7c2:	4798      	blx	r3
     7c4:	9007      	str	r0, [sp, #28]
	uint32_t fscl        = 1000 * config->baud_rate;
     7c6:	23fa      	movs	r3, #250	; 0xfa
     7c8:	009b      	lsls	r3, r3, #2
     7ca:	6822      	ldr	r2, [r4, #0]
     7cc:	435a      	muls	r2, r3
     7ce:	4691      	mov	r9, r2
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     7d0:	6863      	ldr	r3, [r4, #4]
     7d2:	469a      	mov	sl, r3
	tmp_baud = (int32_t)(div_ceil(
     7d4:	4d51      	ldr	r5, [pc, #324]	; (91c <STACK_SIZE+0x11c>)
     7d6:	47a8      	blx	r5
     7d8:	9000      	str	r0, [sp, #0]
     7da:	9101      	str	r1, [sp, #4]
     7dc:	464b      	mov	r3, r9
     7de:	0058      	lsls	r0, r3, #1
     7e0:	47a8      	blx	r5
     7e2:	9002      	str	r0, [sp, #8]
     7e4:	9103      	str	r1, [sp, #12]
     7e6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
     7e8:	47a8      	blx	r5
     7ea:	9004      	str	r0, [sp, #16]
     7ec:	9105      	str	r1, [sp, #20]
     7ee:	4f4c      	ldr	r7, [pc, #304]	; (920 <STACK_SIZE+0x120>)
     7f0:	4a4c      	ldr	r2, [pc, #304]	; (924 <STACK_SIZE+0x124>)
     7f2:	4b4d      	ldr	r3, [pc, #308]	; (928 <STACK_SIZE+0x128>)
     7f4:	9800      	ldr	r0, [sp, #0]
     7f6:	9901      	ldr	r1, [sp, #4]
     7f8:	47b8      	blx	r7
     7fa:	0002      	movs	r2, r0
     7fc:	000b      	movs	r3, r1
     7fe:	9804      	ldr	r0, [sp, #16]
     800:	9905      	ldr	r1, [sp, #20]
     802:	47b8      	blx	r7
     804:	4e49      	ldr	r6, [pc, #292]	; (92c <STACK_SIZE+0x12c>)
     806:	2200      	movs	r2, #0
     808:	4b49      	ldr	r3, [pc, #292]	; (930 <STACK_SIZE+0x130>)
     80a:	47b0      	blx	r6
     80c:	9004      	str	r0, [sp, #16]
     80e:	9105      	str	r1, [sp, #20]
     810:	4648      	mov	r0, r9
     812:	47a8      	blx	r5
     814:	0002      	movs	r2, r0
     816:	000b      	movs	r3, r1
     818:	9804      	ldr	r0, [sp, #16]
     81a:	9905      	ldr	r1, [sp, #20]
     81c:	47b8      	blx	r7
     81e:	0002      	movs	r2, r0
     820:	000b      	movs	r3, r1
     822:	4d44      	ldr	r5, [pc, #272]	; (934 <STACK_SIZE+0x134>)
     824:	9800      	ldr	r0, [sp, #0]
     826:	9901      	ldr	r1, [sp, #4]
     828:	47a8      	blx	r5
     82a:	9a02      	ldr	r2, [sp, #8]
     82c:	9b03      	ldr	r3, [sp, #12]
     82e:	47b0      	blx	r6
     830:	2200      	movs	r2, #0
     832:	4b41      	ldr	r3, [pc, #260]	; (938 <STACK_SIZE+0x138>)
     834:	47a8      	blx	r5
     836:	9a02      	ldr	r2, [sp, #8]
     838:	9b03      	ldr	r3, [sp, #12]
     83a:	4d40      	ldr	r5, [pc, #256]	; (93c <STACK_SIZE+0x13c>)
     83c:	47a8      	blx	r5
     83e:	4b40      	ldr	r3, [pc, #256]	; (940 <STACK_SIZE+0x140>)
     840:	4798      	blx	r3
     842:	0005      	movs	r5, r0
	if (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED) {
     844:	2380      	movs	r3, #128	; 0x80
     846:	049b      	lsls	r3, r3, #18
     848:	68a2      	ldr	r2, [r4, #8]
     84a:	429a      	cmp	r2, r3
     84c:	d01e      	beq.n	88c <STACK_SIZE+0x8c>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     84e:	0003      	movs	r3, r0
     850:	2040      	movs	r0, #64	; 0x40
     852:	2dff      	cmp	r5, #255	; 0xff
     854:	d900      	bls.n	858 <STACK_SIZE+0x58>
     856:	e73e      	b.n	6d6 <i2c_master_init+0x4e>
	int32_t tmp_baudlow_hs = 0;
     858:	2400      	movs	r4, #0
	int32_t tmp_baud_hs = 0;
     85a:	2000      	movs	r0, #0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     85c:	25ff      	movs	r5, #255	; 0xff
     85e:	401d      	ands	r5, r3
			SERCOM_I2CM_BAUD_HSBAUD(tmp_baud_hs) | SERCOM_I2CM_BAUD_HSBAUDLOW(tmp_baudlow_hs);
     860:	0624      	lsls	r4, r4, #24
     862:	4325      	orrs	r5, r4
     864:	0400      	lsls	r0, r0, #16
     866:	23ff      	movs	r3, #255	; 0xff
     868:	041b      	lsls	r3, r3, #16
     86a:	4018      	ands	r0, r3
     86c:	4305      	orrs	r5, r0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     86e:	4643      	mov	r3, r8
     870:	60dd      	str	r5, [r3, #12]
	enum status_code tmp_status_code = STATUS_OK;
     872:	2000      	movs	r0, #0
     874:	e72f      	b.n	6d6 <i2c_master_init+0x4e>
		pad0 = _sercom_get_default_pad(sercom_hw, 0);
     876:	2100      	movs	r1, #0
     878:	4640      	mov	r0, r8
     87a:	4b32      	ldr	r3, [pc, #200]	; (944 <STACK_SIZE+0x144>)
     87c:	4798      	blx	r3
     87e:	e74a      	b.n	716 <i2c_master_init+0x8e>
		pad1 = _sercom_get_default_pad(sercom_hw, 1);
     880:	2101      	movs	r1, #1
     882:	4640      	mov	r0, r8
     884:	4b2f      	ldr	r3, [pc, #188]	; (944 <STACK_SIZE+0x144>)
     886:	4798      	blx	r3
     888:	0007      	movs	r7, r0
     88a:	e751      	b.n	730 <i2c_master_init+0xa8>
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     88c:	26fa      	movs	r6, #250	; 0xfa
     88e:	00b6      	lsls	r6, r6, #2
     890:	4653      	mov	r3, sl
     892:	435e      	muls	r6, r3
		tmp_baudlow_hs = (int32_t)((fgclk * 2.0) / (3.0 * fscl_hs) - 1);
     894:	9800      	ldr	r0, [sp, #0]
     896:	9901      	ldr	r1, [sp, #4]
     898:	0002      	movs	r2, r0
     89a:	000b      	movs	r3, r1
     89c:	4c23      	ldr	r4, [pc, #140]	; (92c <STACK_SIZE+0x12c>)
     89e:	47a0      	blx	r4
     8a0:	9000      	str	r0, [sp, #0]
     8a2:	9101      	str	r1, [sp, #4]
     8a4:	0030      	movs	r0, r6
     8a6:	4b1d      	ldr	r3, [pc, #116]	; (91c <STACK_SIZE+0x11c>)
     8a8:	4798      	blx	r3
     8aa:	2200      	movs	r2, #0
     8ac:	4b26      	ldr	r3, [pc, #152]	; (948 <STACK_SIZE+0x148>)
     8ae:	47b8      	blx	r7
     8b0:	0002      	movs	r2, r0
     8b2:	000b      	movs	r3, r1
     8b4:	9800      	ldr	r0, [sp, #0]
     8b6:	9901      	ldr	r1, [sp, #4]
     8b8:	4c20      	ldr	r4, [pc, #128]	; (93c <STACK_SIZE+0x13c>)
     8ba:	47a0      	blx	r4
     8bc:	2200      	movs	r2, #0
     8be:	4b1e      	ldr	r3, [pc, #120]	; (938 <STACK_SIZE+0x138>)
     8c0:	4c1c      	ldr	r4, [pc, #112]	; (934 <STACK_SIZE+0x134>)
     8c2:	47a0      	blx	r4
     8c4:	4b1e      	ldr	r3, [pc, #120]	; (940 <STACK_SIZE+0x140>)
     8c6:	4798      	blx	r3
     8c8:	1e04      	subs	r4, r0, #0
		if (tmp_baudlow_hs) {
     8ca:	d00c      	beq.n	8e6 <STACK_SIZE+0xe6>
			tmp_baud_hs = (int32_t)(fgclk / fscl_hs) - 2 - tmp_baudlow_hs;
     8cc:	0031      	movs	r1, r6
     8ce:	9807      	ldr	r0, [sp, #28]
     8d0:	4b1e      	ldr	r3, [pc, #120]	; (94c <STACK_SIZE+0x14c>)
     8d2:	4798      	blx	r3
     8d4:	3802      	subs	r0, #2
     8d6:	1b00      	subs	r0, r0, r4
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     8d8:	002b      	movs	r3, r5
     8da:	2dff      	cmp	r5, #255	; 0xff
     8dc:	d80c      	bhi.n	8f8 <STACK_SIZE+0xf8>
     8de:	28ff      	cmp	r0, #255	; 0xff
     8e0:	d9bc      	bls.n	85c <STACK_SIZE+0x5c>
     8e2:	2040      	movs	r0, #64	; 0x40
     8e4:	e6f7      	b.n	6d6 <i2c_master_init+0x4e>
			tmp_baud_hs = (int32_t)(div_ceil(fgclk, 2 * fscl_hs)) - 1;
     8e6:	0071      	lsls	r1, r6, #1
     8e8:	1e48      	subs	r0, r1, #1
     8ea:	9b07      	ldr	r3, [sp, #28]
     8ec:	469c      	mov	ip, r3
     8ee:	4460      	add	r0, ip
     8f0:	4b16      	ldr	r3, [pc, #88]	; (94c <STACK_SIZE+0x14c>)
     8f2:	4798      	blx	r3
     8f4:	3801      	subs	r0, #1
     8f6:	e7ef      	b.n	8d8 <STACK_SIZE+0xd8>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     8f8:	2040      	movs	r0, #64	; 0x40
     8fa:	e6ec      	b.n	6d6 <i2c_master_init+0x4e>
     8fc:	00000fc5 	.word	0x00000fc5
     900:	40000400 	.word	0x40000400
     904:	00001669 	.word	0x00001669
     908:	000015dd 	.word	0x000015dd
     90c:	00000e15 	.word	0x00000e15
     910:	00001761 	.word	0x00001761
     914:	41002000 	.word	0x41002000
     918:	00001685 	.word	0x00001685
     91c:	00006295 	.word	0x00006295
     920:	0000563d 	.word	0x0000563d
     924:	e826d695 	.word	0xe826d695
     928:	3e112e0b 	.word	0x3e112e0b
     92c:	000047b5 	.word	0x000047b5
     930:	40240000 	.word	0x40240000
     934:	00005b3d 	.word	0x00005b3d
     938:	3ff00000 	.word	0x3ff00000
     93c:	00004dd5 	.word	0x00004dd5
     940:	000061a9 	.word	0x000061a9
     944:	00000e61 	.word	0x00000e61
     948:	40080000 	.word	0x40080000
     94c:	00004359 	.word	0x00004359

00000950 <_i2c_master_address_response>:
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     950:	6803      	ldr	r3, [r0, #0]

	/* Check for error and ignore bus-error; workaround for BUSSTATE stuck in
	 * BUSY */
	if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB) {
     952:	7e1a      	ldrb	r2, [r3, #24]
     954:	0792      	lsls	r2, r2, #30
     956:	d507      	bpl.n	968 <_i2c_master_address_response+0x18>

		/* Clear write interrupt flag */
		i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     958:	2202      	movs	r2, #2
     95a:	761a      	strb	r2, [r3, #24]

		/* Check arbitration. */
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
     95c:	8b5b      	ldrh	r3, [r3, #26]
     95e:	079b      	lsls	r3, r3, #30
			/* Return packet collision. */
			return STATUS_ERR_PACKET_COLLISION;
     960:	2041      	movs	r0, #65	; 0x41

		/* Return bad address value. */
		return STATUS_ERR_BAD_ADDRESS;
	}

	return STATUS_OK;
     962:	17db      	asrs	r3, r3, #31
     964:	4018      	ands	r0, r3
}
     966:	4770      	bx	lr
	} else if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     968:	8b5a      	ldrh	r2, [r3, #26]
     96a:	0752      	lsls	r2, r2, #29
     96c:	d506      	bpl.n	97c <_i2c_master_address_response+0x2c>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     96e:	6859      	ldr	r1, [r3, #4]
     970:	22c0      	movs	r2, #192	; 0xc0
     972:	0292      	lsls	r2, r2, #10
     974:	430a      	orrs	r2, r1
     976:	605a      	str	r2, [r3, #4]
		return STATUS_ERR_BAD_ADDRESS;
     978:	2018      	movs	r0, #24
     97a:	e7f4      	b.n	966 <_i2c_master_address_response+0x16>
	return STATUS_OK;
     97c:	2000      	movs	r0, #0
     97e:	e7f2      	b.n	966 <_i2c_master_address_response+0x16>

00000980 <_i2c_master_wait_for_bus>:
 * \retval STATUS_ERR_TIMEOUT  If no response was given within specified timeout
 *                             period
 */
enum status_code _i2c_master_wait_for_bus(
		struct i2c_master_module *const module)
{
     980:	b530      	push	{r4, r5, lr}
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     982:	6802      	ldr	r2, [r0, #0]

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
     984:	2300      	movs	r3, #0
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
     986:	2401      	movs	r4, #1
     988:	2502      	movs	r5, #2
     98a:	7e11      	ldrb	r1, [r2, #24]
     98c:	4221      	tst	r1, r4
     98e:	d10b      	bne.n	9a8 <_i2c_master_wait_for_bus+0x28>
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {
     990:	7e11      	ldrb	r1, [r2, #24]
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
     992:	4229      	tst	r1, r5
     994:	d106      	bne.n	9a4 <_i2c_master_wait_for_bus+0x24>

		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
     996:	3301      	adds	r3, #1
     998:	b29b      	uxth	r3, r3
     99a:	8901      	ldrh	r1, [r0, #8]
     99c:	4299      	cmp	r1, r3
     99e:	d8f4      	bhi.n	98a <_i2c_master_wait_for_bus+0xa>
			return STATUS_ERR_TIMEOUT;
     9a0:	2012      	movs	r0, #18
     9a2:	e002      	b.n	9aa <_i2c_master_wait_for_bus+0x2a>
		}
	}
	return STATUS_OK;
     9a4:	2000      	movs	r0, #0
     9a6:	e000      	b.n	9aa <_i2c_master_wait_for_bus+0x2a>
     9a8:	2000      	movs	r0, #0
}
     9aa:	bd30      	pop	{r4, r5, pc}

000009ac <_i2c_master_send_hs_master_code>:
 * \retval STATUS_OK           No error happen
 */
enum status_code _i2c_master_send_hs_master_code(
		struct i2c_master_module *const module,
		uint8_t hs_master_code)
{
     9ac:	b510      	push	{r4, lr}
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     9ae:	6804      	ldr	r4, [r0, #0]
	/* Return value. */
	enum status_code tmp_status;

	/* Set NACK for high speed code */
	i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     9b0:	6862      	ldr	r2, [r4, #4]
     9b2:	2380      	movs	r3, #128	; 0x80
     9b4:	02db      	lsls	r3, r3, #11
     9b6:	4313      	orrs	r3, r2
     9b8:	6063      	str	r3, [r4, #4]
	/* Send high speed code */
	i2c_module->ADDR.reg = hs_master_code;
     9ba:	6261      	str	r1, [r4, #36]	; 0x24
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     9bc:	4b02      	ldr	r3, [pc, #8]	; (9c8 <_i2c_master_send_hs_master_code+0x1c>)
     9be:	4798      	blx	r3
	/* Clear write interrupt flag */
	i2c_module->INTFLAG.reg = SERCOM_I2CM_INTENCLR_MB;
     9c0:	2301      	movs	r3, #1
     9c2:	7623      	strb	r3, [r4, #24]

	return tmp_status;
}
     9c4:	bd10      	pop	{r4, pc}
     9c6:	46c0      	nop			; (mov r8, r8)
     9c8:	00000981 	.word	0x00000981

000009cc <_i2c_master_read_packet>:
 *
 */
static enum status_code _i2c_master_read_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     9cc:	b5f0      	push	{r4, r5, r6, r7, lr}
     9ce:	46de      	mov	lr, fp
     9d0:	4657      	mov	r7, sl
     9d2:	464e      	mov	r6, r9
     9d4:	4645      	mov	r5, r8
     9d6:	b5e0      	push	{r5, r6, r7, lr}
     9d8:	b083      	sub	sp, #12
     9da:	0006      	movs	r6, r0
     9dc:	4689      	mov	r9, r1
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     9de:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
     9e0:	884c      	ldrh	r4, [r1, #2]

	/* Written buffer counter. */
	uint16_t counter = 0;

	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
     9e2:	682b      	ldr	r3, [r5, #0]
     9e4:	011b      	lsls	r3, r3, #4
     9e6:	0fdb      	lsrs	r3, r3, #31
     9e8:	469a      	mov	sl, r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
     9ea:	7a4b      	ldrb	r3, [r1, #9]
     9ec:	2b00      	cmp	r3, #0
     9ee:	d12b      	bne.n	a48 <_i2c_master_read_packet+0x7c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     9f0:	686b      	ldr	r3, [r5, #4]
     9f2:	4a58      	ldr	r2, [pc, #352]	; (b54 <_i2c_master_read_packet+0x188>)
     9f4:	4013      	ands	r3, r2
     9f6:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
     9f8:	464b      	mov	r3, r9
     9fa:	7a1b      	ldrb	r3, [r3, #8]
     9fc:	2b00      	cmp	r3, #0
     9fe:	d127      	bne.n	a50 <_i2c_master_read_packet+0x84>
				I2C_TRANSFER_READ;
		} else {
			return tmp_status;
		}
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
     a00:	464b      	mov	r3, r9
     a02:	881b      	ldrh	r3, [r3, #0]
     a04:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
     a06:	464a      	mov	r2, r9
     a08:	7a52      	ldrb	r2, [r2, #9]
     a0a:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
     a0c:	4313      	orrs	r3, r2
     a0e:	2201      	movs	r2, #1
     a10:	4313      	orrs	r3, r2
     a12:	626b      	str	r3, [r5, #36]	; 0x24
	}

	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     a14:	0030      	movs	r0, r6
     a16:	4b50      	ldr	r3, [pc, #320]	; (b58 <_i2c_master_read_packet+0x18c>)
     a18:	4798      	blx	r3
     a1a:	9001      	str	r0, [sp, #4]

	/* Set action to ack or nack. */
	if ((sclsm_flag) && (packet->data_length == 1)) {
     a1c:	4653      	mov	r3, sl
     a1e:	2b00      	cmp	r3, #0
     a20:	d003      	beq.n	a2a <_i2c_master_read_packet+0x5e>
     a22:	464b      	mov	r3, r9
     a24:	885b      	ldrh	r3, [r3, #2]
     a26:	2b01      	cmp	r3, #1
     a28:	d03b      	beq.n	aa2 <_i2c_master_read_packet+0xd6>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
	} else {
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;	
     a2a:	686b      	ldr	r3, [r5, #4]
     a2c:	4a49      	ldr	r2, [pc, #292]	; (b54 <_i2c_master_read_packet+0x188>)
     a2e:	4013      	ands	r3, r2
     a30:	606b      	str	r3, [r5, #4]
	}

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
     a32:	9b01      	ldr	r3, [sp, #4]
     a34:	2b00      	cmp	r3, #0
     a36:	d03a      	beq.n	aae <_i2c_master_read_packet+0xe2>
		_i2c_master_wait_for_sync(module);
		packet->data[counter] = i2c_module->DATA.reg;
	}

	return tmp_status;
}
     a38:	9801      	ldr	r0, [sp, #4]
     a3a:	b003      	add	sp, #12
     a3c:	bc3c      	pop	{r2, r3, r4, r5}
     a3e:	4690      	mov	r8, r2
     a40:	4699      	mov	r9, r3
     a42:	46a2      	mov	sl, r4
     a44:	46ab      	mov	fp, r5
     a46:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
     a48:	7a89      	ldrb	r1, [r1, #10]
     a4a:	4b44      	ldr	r3, [pc, #272]	; (b5c <_i2c_master_read_packet+0x190>)
     a4c:	4798      	blx	r3
     a4e:	e7cf      	b.n	9f0 <_i2c_master_read_packet+0x24>
		i2c_module->ADDR.reg = (packet->address << 1) |
     a50:	464b      	mov	r3, r9
     a52:	881b      	ldrh	r3, [r3, #0]
     a54:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     a56:	464a      	mov	r2, r9
     a58:	7a52      	ldrb	r2, [r2, #9]
     a5a:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) |
     a5c:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     a5e:	2280      	movs	r2, #128	; 0x80
     a60:	0212      	lsls	r2, r2, #8
     a62:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) |
     a64:	626b      	str	r3, [r5, #36]	; 0x24
		tmp_status = _i2c_master_wait_for_bus(module);
     a66:	0030      	movs	r0, r6
     a68:	4b3b      	ldr	r3, [pc, #236]	; (b58 <_i2c_master_read_packet+0x18c>)
     a6a:	4798      	blx	r3
     a6c:	9001      	str	r0, [sp, #4]
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     a6e:	686b      	ldr	r3, [r5, #4]
     a70:	4a38      	ldr	r2, [pc, #224]	; (b54 <_i2c_master_read_packet+0x188>)
     a72:	4013      	ands	r3, r2
     a74:	606b      	str	r3, [r5, #4]
		if (tmp_status == STATUS_OK) {
     a76:	2800      	cmp	r0, #0
     a78:	d1de      	bne.n	a38 <_i2c_master_read_packet+0x6c>
			tmp_status = _i2c_master_address_response(module);
     a7a:	0030      	movs	r0, r6
     a7c:	4b38      	ldr	r3, [pc, #224]	; (b60 <_i2c_master_read_packet+0x194>)
     a7e:	4798      	blx	r3
     a80:	9001      	str	r0, [sp, #4]
		if (tmp_status == STATUS_OK) {
     a82:	2800      	cmp	r0, #0
     a84:	d1d8      	bne.n	a38 <_i2c_master_read_packet+0x6c>
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
     a86:	464b      	mov	r3, r9
     a88:	881b      	ldrh	r3, [r3, #0]
     a8a:	0a1b      	lsrs	r3, r3, #8
     a8c:	2278      	movs	r2, #120	; 0x78
     a8e:	4313      	orrs	r3, r2
     a90:	005b      	lsls	r3, r3, #1
				(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     a92:	464a      	mov	r2, r9
     a94:	7a52      	ldrb	r2, [r2, #9]
     a96:	0392      	lsls	r2, r2, #14
     a98:	2101      	movs	r1, #1
     a9a:	430a      	orrs	r2, r1
     a9c:	4313      	orrs	r3, r2
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
     a9e:	626b      	str	r3, [r5, #36]	; 0x24
     aa0:	e7b8      	b.n	a14 <_i2c_master_read_packet+0x48>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     aa2:	686a      	ldr	r2, [r5, #4]
     aa4:	2380      	movs	r3, #128	; 0x80
     aa6:	02db      	lsls	r3, r3, #11
     aa8:	4313      	orrs	r3, r2
     aaa:	606b      	str	r3, [r5, #4]
     aac:	e7c1      	b.n	a32 <_i2c_master_read_packet+0x66>
		tmp_status = _i2c_master_address_response(module);
     aae:	0030      	movs	r0, r6
     ab0:	4b2b      	ldr	r3, [pc, #172]	; (b60 <_i2c_master_read_packet+0x194>)
     ab2:	4798      	blx	r3
     ab4:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
     ab6:	2800      	cmp	r0, #0
     ab8:	d1be      	bne.n	a38 <_i2c_master_read_packet+0x6c>
     aba:	3c01      	subs	r4, #1
     abc:	b2a4      	uxth	r4, r4
     abe:	4680      	mov	r8, r0
		while (tmp_data_length--) {
     ac0:	4b28      	ldr	r3, [pc, #160]	; (b64 <_i2c_master_read_packet+0x198>)
     ac2:	469b      	mov	fp, r3
     ac4:	e015      	b.n	af2 <_i2c_master_read_packet+0x126>
					((sclsm_flag) && (tmp_data_length == 1)))) {
     ac6:	2c01      	cmp	r4, #1
     ac8:	d020      	beq.n	b0c <_i2c_master_read_packet+0x140>
				_i2c_master_wait_for_sync(module);
     aca:	0030      	movs	r0, r6
     acc:	4b26      	ldr	r3, [pc, #152]	; (b68 <_i2c_master_read_packet+0x19c>)
     ace:	4798      	blx	r3
				packet->data[counter++] = i2c_module->DATA.reg;
     ad0:	4643      	mov	r3, r8
     ad2:	1c5f      	adds	r7, r3, #1
     ad4:	b2bf      	uxth	r7, r7
     ad6:	2328      	movs	r3, #40	; 0x28
     ad8:	5ceb      	ldrb	r3, [r5, r3]
     ada:	464a      	mov	r2, r9
     adc:	6852      	ldr	r2, [r2, #4]
     ade:	4641      	mov	r1, r8
     ae0:	5453      	strb	r3, [r2, r1]
				tmp_status = _i2c_master_wait_for_bus(module);
     ae2:	0030      	movs	r0, r6
     ae4:	4b1c      	ldr	r3, [pc, #112]	; (b58 <_i2c_master_read_packet+0x18c>)
     ae6:	4798      	blx	r3
     ae8:	3c01      	subs	r4, #1
     aea:	b2a4      	uxth	r4, r4
			if (tmp_status != STATUS_OK) {
     aec:	2800      	cmp	r0, #0
     aee:	d115      	bne.n	b1c <_i2c_master_read_packet+0x150>
				packet->data[counter++] = i2c_module->DATA.reg;
     af0:	46b8      	mov	r8, r7
		while (tmp_data_length--) {
     af2:	455c      	cmp	r4, fp
     af4:	d014      	beq.n	b20 <_i2c_master_read_packet+0x154>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     af6:	8b6b      	ldrh	r3, [r5, #26]
     af8:	069b      	lsls	r3, r3, #26
     afa:	d527      	bpl.n	b4c <_i2c_master_read_packet+0x180>
			if (module->send_nack && (((!sclsm_flag) && (tmp_data_length == 0)) ||
     afc:	7af3      	ldrb	r3, [r6, #11]
     afe:	2b00      	cmp	r3, #0
     b00:	d0e3      	beq.n	aca <_i2c_master_read_packet+0xfe>
     b02:	4653      	mov	r3, sl
     b04:	2b00      	cmp	r3, #0
     b06:	d1de      	bne.n	ac6 <_i2c_master_read_packet+0xfa>
     b08:	2c00      	cmp	r4, #0
     b0a:	d1de      	bne.n	aca <_i2c_master_read_packet+0xfe>
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     b0c:	686a      	ldr	r2, [r5, #4]
     b0e:	2380      	movs	r3, #128	; 0x80
     b10:	02db      	lsls	r3, r3, #11
     b12:	4313      	orrs	r3, r2
     b14:	606b      	str	r3, [r5, #4]
     b16:	3c01      	subs	r4, #1
     b18:	b2a4      	uxth	r4, r4
     b1a:	e7ea      	b.n	af2 <_i2c_master_read_packet+0x126>
				packet->data[counter++] = i2c_module->DATA.reg;
     b1c:	46b8      	mov	r8, r7
				tmp_status = _i2c_master_wait_for_bus(module);
     b1e:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
     b20:	7ab3      	ldrb	r3, [r6, #10]
     b22:	2b00      	cmp	r3, #0
     b24:	d109      	bne.n	b3a <_i2c_master_read_packet+0x16e>
		_i2c_master_wait_for_sync(module);
     b26:	0030      	movs	r0, r6
     b28:	4b0f      	ldr	r3, [pc, #60]	; (b68 <_i2c_master_read_packet+0x19c>)
     b2a:	4798      	blx	r3
		packet->data[counter] = i2c_module->DATA.reg;
     b2c:	2328      	movs	r3, #40	; 0x28
     b2e:	5cea      	ldrb	r2, [r5, r3]
     b30:	464b      	mov	r3, r9
     b32:	685b      	ldr	r3, [r3, #4]
     b34:	4641      	mov	r1, r8
     b36:	545a      	strb	r2, [r3, r1]
     b38:	e77e      	b.n	a38 <_i2c_master_read_packet+0x6c>
			_i2c_master_wait_for_sync(module);
     b3a:	0030      	movs	r0, r6
     b3c:	4b0a      	ldr	r3, [pc, #40]	; (b68 <_i2c_master_read_packet+0x19c>)
     b3e:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     b40:	686a      	ldr	r2, [r5, #4]
     b42:	23c0      	movs	r3, #192	; 0xc0
     b44:	029b      	lsls	r3, r3, #10
     b46:	4313      	orrs	r3, r2
     b48:	606b      	str	r3, [r5, #4]
     b4a:	e7ec      	b.n	b26 <_i2c_master_read_packet+0x15a>
				return STATUS_ERR_PACKET_COLLISION;
     b4c:	2341      	movs	r3, #65	; 0x41
     b4e:	9301      	str	r3, [sp, #4]
     b50:	e772      	b.n	a38 <_i2c_master_read_packet+0x6c>
     b52:	46c0      	nop			; (mov r8, r8)
     b54:	fffbffff 	.word	0xfffbffff
     b58:	00000981 	.word	0x00000981
     b5c:	000009ad 	.word	0x000009ad
     b60:	00000951 	.word	0x00000951
     b64:	0000ffff 	.word	0x0000ffff
     b68:	0000067d 	.word	0x0000067d

00000b6c <_i2c_master_write_packet>:
 *                                      acknowledged the address
 */
static enum status_code _i2c_master_write_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
     b6e:	46de      	mov	lr, fp
     b70:	4657      	mov	r7, sl
     b72:	464e      	mov	r6, r9
     b74:	4645      	mov	r5, r8
     b76:	b5e0      	push	{r5, r6, r7, lr}
     b78:	b083      	sub	sp, #12
     b7a:	0006      	movs	r6, r0
     b7c:	000f      	movs	r7, r1
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     b7e:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
     b80:	884c      	ldrh	r4, [r1, #2]

	_i2c_master_wait_for_sync(module);
     b82:	4b32      	ldr	r3, [pc, #200]	; (c4c <_i2c_master_write_packet+0xe0>)
     b84:	4798      	blx	r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
     b86:	7a7b      	ldrb	r3, [r7, #9]
     b88:	2b00      	cmp	r3, #0
     b8a:	d11d      	bne.n	bc8 <_i2c_master_write_packet+0x5c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     b8c:	686b      	ldr	r3, [r5, #4]
     b8e:	4a30      	ldr	r2, [pc, #192]	; (c50 <_i2c_master_write_packet+0xe4>)
     b90:	4013      	ands	r3, r2
     b92:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
     b94:	7a3b      	ldrb	r3, [r7, #8]
     b96:	2b00      	cmp	r3, #0
     b98:	d01b      	beq.n	bd2 <_i2c_master_write_packet+0x66>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     b9a:	883b      	ldrh	r3, [r7, #0]
     b9c:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     b9e:	7a7a      	ldrb	r2, [r7, #9]
     ba0:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     ba2:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     ba4:	2280      	movs	r2, #128	; 0x80
     ba6:	0212      	lsls	r2, r2, #8
     ba8:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     baa:	626b      	str	r3, [r5, #36]	; 0x24
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     bac:	0030      	movs	r0, r6
     bae:	4b29      	ldr	r3, [pc, #164]	; (c54 <_i2c_master_write_packet+0xe8>)
     bb0:	4798      	blx	r3
     bb2:	9001      	str	r0, [sp, #4]

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
     bb4:	2800      	cmp	r0, #0
     bb6:	d013      	beq.n	be0 <_i2c_master_write_packet+0x74>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}
	}

	return tmp_status;
}
     bb8:	9801      	ldr	r0, [sp, #4]
     bba:	b003      	add	sp, #12
     bbc:	bc3c      	pop	{r2, r3, r4, r5}
     bbe:	4690      	mov	r8, r2
     bc0:	4699      	mov	r9, r3
     bc2:	46a2      	mov	sl, r4
     bc4:	46ab      	mov	fp, r5
     bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
     bc8:	7ab9      	ldrb	r1, [r7, #10]
     bca:	0030      	movs	r0, r6
     bcc:	4b22      	ldr	r3, [pc, #136]	; (c58 <_i2c_master_write_packet+0xec>)
     bce:	4798      	blx	r3
     bd0:	e7dc      	b.n	b8c <_i2c_master_write_packet+0x20>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     bd2:	883b      	ldrh	r3, [r7, #0]
     bd4:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
     bd6:	7a7a      	ldrb	r2, [r7, #9]
     bd8:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     bda:	4313      	orrs	r3, r2
     bdc:	626b      	str	r3, [r5, #36]	; 0x24
     bde:	e7e5      	b.n	bac <_i2c_master_write_packet+0x40>
		tmp_status = _i2c_master_address_response(module);
     be0:	0030      	movs	r0, r6
     be2:	4b1e      	ldr	r3, [pc, #120]	; (c5c <_i2c_master_write_packet+0xf0>)
     be4:	4798      	blx	r3
     be6:	1e03      	subs	r3, r0, #0
     be8:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
     bea:	d1e5      	bne.n	bb8 <_i2c_master_write_packet+0x4c>
     bec:	46a0      	mov	r8, r4
     bee:	2400      	movs	r4, #0
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     bf0:	3320      	adds	r3, #32
     bf2:	4699      	mov	r9, r3
			_i2c_master_wait_for_sync(module);
     bf4:	4b15      	ldr	r3, [pc, #84]	; (c4c <_i2c_master_write_packet+0xe0>)
     bf6:	469b      	mov	fp, r3
			tmp_status = _i2c_master_wait_for_bus(module);
     bf8:	4b16      	ldr	r3, [pc, #88]	; (c54 <_i2c_master_write_packet+0xe8>)
     bfa:	469a      	mov	sl, r3
		while (tmp_data_length--) {
     bfc:	4544      	cmp	r4, r8
     bfe:	d015      	beq.n	c2c <_i2c_master_write_packet+0xc0>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     c00:	8b6b      	ldrh	r3, [r5, #26]
     c02:	464a      	mov	r2, r9
     c04:	4213      	tst	r3, r2
     c06:	d01d      	beq.n	c44 <_i2c_master_write_packet+0xd8>
			_i2c_master_wait_for_sync(module);
     c08:	0030      	movs	r0, r6
     c0a:	47d8      	blx	fp
			i2c_module->DATA.reg = packet->data[buffer_counter++];
     c0c:	687b      	ldr	r3, [r7, #4]
     c0e:	5d1a      	ldrb	r2, [r3, r4]
     c10:	2328      	movs	r3, #40	; 0x28
     c12:	54ea      	strb	r2, [r5, r3]
			tmp_status = _i2c_master_wait_for_bus(module);
     c14:	0030      	movs	r0, r6
     c16:	47d0      	blx	sl
			if (tmp_status != STATUS_OK) {
     c18:	2800      	cmp	r0, #0
     c1a:	d106      	bne.n	c2a <_i2c_master_write_packet+0xbe>
			if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     c1c:	8b6b      	ldrh	r3, [r5, #26]
     c1e:	3401      	adds	r4, #1
     c20:	075b      	lsls	r3, r3, #29
     c22:	d5eb      	bpl.n	bfc <_i2c_master_write_packet+0x90>
				tmp_status = STATUS_ERR_OVERFLOW;
     c24:	231e      	movs	r3, #30
     c26:	9301      	str	r3, [sp, #4]
     c28:	e000      	b.n	c2c <_i2c_master_write_packet+0xc0>
			tmp_status = _i2c_master_wait_for_bus(module);
     c2a:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
     c2c:	7ab3      	ldrb	r3, [r6, #10]
     c2e:	2b00      	cmp	r3, #0
     c30:	d0c2      	beq.n	bb8 <_i2c_master_write_packet+0x4c>
			_i2c_master_wait_for_sync(module);
     c32:	0030      	movs	r0, r6
     c34:	4b05      	ldr	r3, [pc, #20]	; (c4c <_i2c_master_write_packet+0xe0>)
     c36:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     c38:	686a      	ldr	r2, [r5, #4]
     c3a:	23c0      	movs	r3, #192	; 0xc0
     c3c:	029b      	lsls	r3, r3, #10
     c3e:	4313      	orrs	r3, r2
     c40:	606b      	str	r3, [r5, #4]
     c42:	e7b9      	b.n	bb8 <_i2c_master_write_packet+0x4c>
				return STATUS_ERR_PACKET_COLLISION;
     c44:	2341      	movs	r3, #65	; 0x41
     c46:	9301      	str	r3, [sp, #4]
     c48:	e7b6      	b.n	bb8 <_i2c_master_write_packet+0x4c>
     c4a:	46c0      	nop			; (mov r8, r8)
     c4c:	0000067d 	.word	0x0000067d
     c50:	fffbffff 	.word	0xfffbffff
     c54:	00000981 	.word	0x00000981
     c58:	000009ad 	.word	0x000009ad
     c5c:	00000951 	.word	0x00000951

00000c60 <i2c_master_read_packet_wait>:
{
     c60:	b510      	push	{r4, lr}
	module->send_stop = true;
     c62:	2301      	movs	r3, #1
     c64:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     c66:	72c3      	strb	r3, [r0, #11]
	return _i2c_master_read_packet(module, packet);
     c68:	4b01      	ldr	r3, [pc, #4]	; (c70 <i2c_master_read_packet_wait+0x10>)
     c6a:	4798      	blx	r3
}
     c6c:	bd10      	pop	{r4, pc}
     c6e:	46c0      	nop			; (mov r8, r8)
     c70:	000009cd 	.word	0x000009cd

00000c74 <i2c_master_write_packet_wait>:
 *                                      last data sent
 */
enum status_code i2c_master_write_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     c74:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
		return STATUS_BUSY;
	}
#endif

	module->send_stop = true;
     c76:	2301      	movs	r3, #1
     c78:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     c7a:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
     c7c:	4b01      	ldr	r3, [pc, #4]	; (c84 <i2c_master_write_packet_wait+0x10>)
     c7e:	4798      	blx	r3
}
     c80:	bd10      	pop	{r4, pc}
     c82:	46c0      	nop			; (mov r8, r8)
     c84:	00000b6d 	.word	0x00000b6d

00000c88 <i2c_master_write_packet_wait_no_stop>:
 *                                      more data
 */
enum status_code i2c_master_write_packet_wait_no_stop(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     c88:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
		return STATUS_BUSY;
	}
#endif

	module->send_stop = false;
     c8a:	2300      	movs	r3, #0
     c8c:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     c8e:	3301      	adds	r3, #1
     c90:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
     c92:	4b01      	ldr	r3, [pc, #4]	; (c98 <i2c_master_write_packet_wait_no_stop+0x10>)
     c94:	4798      	blx	r3
}
     c96:	bd10      	pop	{r4, pc}
     c98:	00000b6d 	.word	0x00000b6d

00000c9c <long_division>:
/**
 * \internal Calculate 64 bit division, ref can be found in
 * http://en.wikipedia.org/wiki/Division_algorithm#Long_division
 */
static uint64_t long_division(uint64_t n, uint64_t d)
{
     c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
     c9e:	46de      	mov	lr, fp
     ca0:	4657      	mov	r7, sl
     ca2:	464e      	mov	r6, r9
     ca4:	4645      	mov	r5, r8
     ca6:	b5e0      	push	{r5, r6, r7, lr}
     ca8:	b087      	sub	sp, #28
     caa:	4680      	mov	r8, r0
     cac:	9104      	str	r1, [sp, #16]
     cae:	0016      	movs	r6, r2
     cb0:	001f      	movs	r7, r3
	int32_t i;
	uint64_t q = 0, r = 0, bit_shift;
     cb2:	2200      	movs	r2, #0
     cb4:	2300      	movs	r3, #0
     cb6:	2100      	movs	r1, #0
     cb8:	468b      	mov	fp, r1
	for (i = 63; i >= 0; i--) {
     cba:	243f      	movs	r4, #63	; 0x3f
		bit_shift = (uint64_t)1 << i;
     cbc:	2001      	movs	r0, #1
     cbe:	0021      	movs	r1, r4
     cc0:	9600      	str	r6, [sp, #0]
     cc2:	9701      	str	r7, [sp, #4]
     cc4:	465c      	mov	r4, fp
     cc6:	9403      	str	r4, [sp, #12]
     cc8:	4644      	mov	r4, r8
     cca:	9405      	str	r4, [sp, #20]
     ccc:	e013      	b.n	cf6 <long_division+0x5a>
     cce:	2420      	movs	r4, #32
     cd0:	1a64      	subs	r4, r4, r1
     cd2:	0005      	movs	r5, r0
     cd4:	40e5      	lsrs	r5, r4
     cd6:	46a8      	mov	r8, r5
     cd8:	e014      	b.n	d04 <long_division+0x68>
		if (n & bit_shift) {
			r |= 0x01;
		}

		if (r >= d) {
			r = r - d;
     cda:	9c00      	ldr	r4, [sp, #0]
     cdc:	9d01      	ldr	r5, [sp, #4]
     cde:	1b12      	subs	r2, r2, r4
     ce0:	41ab      	sbcs	r3, r5
			q |= bit_shift;
     ce2:	465c      	mov	r4, fp
     ce4:	464d      	mov	r5, r9
     ce6:	432c      	orrs	r4, r5
     ce8:	46a3      	mov	fp, r4
     cea:	9c03      	ldr	r4, [sp, #12]
     cec:	4645      	mov	r5, r8
     cee:	432c      	orrs	r4, r5
     cf0:	9403      	str	r4, [sp, #12]
	for (i = 63; i >= 0; i--) {
     cf2:	3901      	subs	r1, #1
     cf4:	d325      	bcc.n	d42 <long_division+0xa6>
		bit_shift = (uint64_t)1 << i;
     cf6:	2420      	movs	r4, #32
     cf8:	4264      	negs	r4, r4
     cfa:	190c      	adds	r4, r1, r4
     cfc:	d4e7      	bmi.n	cce <long_division+0x32>
     cfe:	0005      	movs	r5, r0
     d00:	40a5      	lsls	r5, r4
     d02:	46a8      	mov	r8, r5
     d04:	0004      	movs	r4, r0
     d06:	408c      	lsls	r4, r1
     d08:	46a1      	mov	r9, r4
		r = r << 1;
     d0a:	1892      	adds	r2, r2, r2
     d0c:	415b      	adcs	r3, r3
     d0e:	0014      	movs	r4, r2
     d10:	001d      	movs	r5, r3
		if (n & bit_shift) {
     d12:	9e05      	ldr	r6, [sp, #20]
     d14:	464f      	mov	r7, r9
     d16:	403e      	ands	r6, r7
     d18:	46b4      	mov	ip, r6
     d1a:	9e04      	ldr	r6, [sp, #16]
     d1c:	4647      	mov	r7, r8
     d1e:	403e      	ands	r6, r7
     d20:	46b2      	mov	sl, r6
     d22:	4666      	mov	r6, ip
     d24:	4657      	mov	r7, sl
     d26:	433e      	orrs	r6, r7
     d28:	d003      	beq.n	d32 <long_division+0x96>
			r |= 0x01;
     d2a:	0006      	movs	r6, r0
     d2c:	4326      	orrs	r6, r4
     d2e:	0032      	movs	r2, r6
     d30:	002b      	movs	r3, r5
		if (r >= d) {
     d32:	9c00      	ldr	r4, [sp, #0]
     d34:	9d01      	ldr	r5, [sp, #4]
     d36:	429d      	cmp	r5, r3
     d38:	d8db      	bhi.n	cf2 <long_division+0x56>
     d3a:	d1ce      	bne.n	cda <long_division+0x3e>
     d3c:	4294      	cmp	r4, r2
     d3e:	d8d8      	bhi.n	cf2 <long_division+0x56>
     d40:	e7cb      	b.n	cda <long_division+0x3e>
     d42:	9b03      	ldr	r3, [sp, #12]
		}
	}

	return q;
}
     d44:	4658      	mov	r0, fp
     d46:	0019      	movs	r1, r3
     d48:	b007      	add	sp, #28
     d4a:	bc3c      	pop	{r2, r3, r4, r5}
     d4c:	4690      	mov	r8, r2
     d4e:	4699      	mov	r9, r3
     d50:	46a2      	mov	sl, r4
     d52:	46ab      	mov	fp, r5
     d54:	bdf0      	pop	{r4, r5, r6, r7, pc}

00000d56 <_sercom_get_sync_baud_val>:
 */
enum status_code _sercom_get_sync_baud_val(
		const uint32_t baudrate,
		const uint32_t external_clock,
		uint16_t *const baudvalue)
{
     d56:	b510      	push	{r4, lr}
	uint16_t baud_calculated = 0;
	uint32_t clock_value = external_clock;


	/* Check if baudrate is outside of valid range */
	if (baudrate > (external_clock / 2)) {
     d58:	0849      	lsrs	r1, r1, #1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     d5a:	2340      	movs	r3, #64	; 0x40
     d5c:	2400      	movs	r4, #0
	if (baudrate > (external_clock / 2)) {
     d5e:	4281      	cmp	r1, r0
     d60:	d202      	bcs.n	d68 <_sercom_get_sync_baud_val+0x12>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		*baudvalue = baud_calculated;
		return STATUS_OK;
	}
}
     d62:	0018      	movs	r0, r3
     d64:	bd10      	pop	{r4, pc}
		baud_calculated++;
     d66:	001c      	movs	r4, r3
		clock_value = clock_value - baudrate;
     d68:	1a09      	subs	r1, r1, r0
		baud_calculated++;
     d6a:	1c63      	adds	r3, r4, #1
     d6c:	b29b      	uxth	r3, r3
	while (clock_value >= baudrate) {
     d6e:	4288      	cmp	r0, r1
     d70:	d9f9      	bls.n	d66 <_sercom_get_sync_baud_val+0x10>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     d72:	2340      	movs	r3, #64	; 0x40
	if (baud_calculated > 0xFF) {
     d74:	2cff      	cmp	r4, #255	; 0xff
     d76:	d8f4      	bhi.n	d62 <_sercom_get_sync_baud_val+0xc>
		*baudvalue = baud_calculated;
     d78:	8014      	strh	r4, [r2, #0]
		return STATUS_OK;
     d7a:	2300      	movs	r3, #0
     d7c:	e7f1      	b.n	d62 <_sercom_get_sync_baud_val+0xc>
	...

00000d80 <_sercom_get_async_baud_val>:
		const uint32_t baudrate,
		const uint32_t peripheral_clock,
		uint16_t *const baudval,
		enum sercom_asynchronous_operation_mode mode,
		enum sercom_asynchronous_sample_num sample_num)
{
     d80:	b5f0      	push	{r4, r5, r6, r7, lr}
     d82:	b083      	sub	sp, #12
     d84:	000f      	movs	r7, r1
     d86:	0016      	movs	r6, r2
     d88:	aa08      	add	r2, sp, #32
     d8a:	7811      	ldrb	r1, [r2, #0]
	uint8_t baud_fp;
	uint32_t baud_int = 0;
	uint64_t temp1;

	/* Check if the baudrate is outside of valid range */
	if ((baudrate * sample_num) > peripheral_clock) {
     d8c:	0004      	movs	r4, r0
     d8e:	434c      	muls	r4, r1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     d90:	2240      	movs	r2, #64	; 0x40
	if ((baudrate * sample_num) > peripheral_clock) {
     d92:	42bc      	cmp	r4, r7
     d94:	d902      	bls.n	d9c <_sercom_get_async_baud_val+0x1c>
		baud_calculated = baud_int | (baud_fp << 13);
	}

	*baudval = baud_calculated;
	return STATUS_OK;
}
     d96:	0010      	movs	r0, r2
     d98:	b003      	add	sp, #12
     d9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(mode == SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC) {
     d9c:	2b00      	cmp	r3, #0
     d9e:	d114      	bne.n	dca <_sercom_get_async_baud_val+0x4a>
		temp1 = ((sample_num * (uint64_t)baudrate) << SHIFT);
     da0:	0002      	movs	r2, r0
     da2:	0008      	movs	r0, r1
     da4:	2100      	movs	r1, #0
     da6:	4c19      	ldr	r4, [pc, #100]	; (e0c <_sercom_get_async_baud_val+0x8c>)
     da8:	47a0      	blx	r4
     daa:	0001      	movs	r1, r0
		ratio = long_division(temp1, peripheral_clock);
     dac:	003a      	movs	r2, r7
     dae:	2300      	movs	r3, #0
     db0:	2000      	movs	r0, #0
     db2:	4c17      	ldr	r4, [pc, #92]	; (e10 <_sercom_get_async_baud_val+0x90>)
     db4:	47a0      	blx	r4
		scale = ((uint64_t)1 << SHIFT) - ratio;
     db6:	2200      	movs	r2, #0
     db8:	2301      	movs	r3, #1
     dba:	1a12      	subs	r2, r2, r0
     dbc:	418b      	sbcs	r3, r1
		baud_calculated = (65536 * scale) >> SHIFT;
     dbe:	0c12      	lsrs	r2, r2, #16
     dc0:	041b      	lsls	r3, r3, #16
     dc2:	431a      	orrs	r2, r3
	*baudval = baud_calculated;
     dc4:	8032      	strh	r2, [r6, #0]
	return STATUS_OK;
     dc6:	2200      	movs	r2, #0
     dc8:	e7e5      	b.n	d96 <_sercom_get_async_baud_val+0x16>
	uint64_t baud_calculated = 0;
     dca:	2200      	movs	r2, #0
	} else if(mode == SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL) {
     dcc:	2b01      	cmp	r3, #1
     dce:	d1f9      	bne.n	dc4 <_sercom_get_async_baud_val+0x44>
		temp1 = ((uint64_t)baudrate * sample_num);
     dd0:	000a      	movs	r2, r1
     dd2:	2300      	movs	r3, #0
     dd4:	2100      	movs	r1, #0
     dd6:	4c0d      	ldr	r4, [pc, #52]	; (e0c <_sercom_get_async_baud_val+0x8c>)
     dd8:	47a0      	blx	r4
     dda:	0002      	movs	r2, r0
     ddc:	000b      	movs	r3, r1
     dde:	9200      	str	r2, [sp, #0]
     de0:	9301      	str	r3, [sp, #4]
		baud_int = long_division( peripheral_clock, temp1);
     de2:	0038      	movs	r0, r7
     de4:	2100      	movs	r1, #0
     de6:	4c0a      	ldr	r4, [pc, #40]	; (e10 <_sercom_get_async_baud_val+0x90>)
     de8:	47a0      	blx	r4
     dea:	0005      	movs	r5, r0
		if(baud_int > BAUD_INT_MAX) {
     dec:	2380      	movs	r3, #128	; 0x80
     dee:	019b      	lsls	r3, r3, #6
				return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     df0:	2240      	movs	r2, #64	; 0x40
		if(baud_int > BAUD_INT_MAX) {
     df2:	4298      	cmp	r0, r3
     df4:	d8cf      	bhi.n	d96 <_sercom_get_async_baud_val+0x16>
		temp1 = long_division( 8 * (uint64_t)peripheral_clock, temp1);
     df6:	0f79      	lsrs	r1, r7, #29
     df8:	00f8      	lsls	r0, r7, #3
     dfa:	9a00      	ldr	r2, [sp, #0]
     dfc:	9b01      	ldr	r3, [sp, #4]
     dfe:	47a0      	blx	r4
		baud_fp = temp1 - 8 * baud_int;
     e00:	00ea      	lsls	r2, r5, #3
     e02:	1a82      	subs	r2, r0, r2
		baud_calculated = baud_int | (baud_fp << 13);
     e04:	b2d2      	uxtb	r2, r2
     e06:	0352      	lsls	r2, r2, #13
     e08:	432a      	orrs	r2, r5
     e0a:	e7db      	b.n	dc4 <_sercom_get_async_baud_val+0x44>
     e0c:	000046c1 	.word	0x000046c1
     e10:	00000c9d 	.word	0x00000c9d

00000e14 <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
     e14:	b510      	push	{r4, lr}
     e16:	b082      	sub	sp, #8
     e18:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
     e1a:	4b0e      	ldr	r3, [pc, #56]	; (e54 <sercom_set_gclk_generator+0x40>)
     e1c:	781b      	ldrb	r3, [r3, #0]
     e1e:	2b00      	cmp	r3, #0
     e20:	d007      	beq.n	e32 <sercom_set_gclk_generator+0x1e>
     e22:	2900      	cmp	r1, #0
     e24:	d105      	bne.n	e32 <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
     e26:	4b0b      	ldr	r3, [pc, #44]	; (e54 <sercom_set_gclk_generator+0x40>)
     e28:	785b      	ldrb	r3, [r3, #1]
     e2a:	4283      	cmp	r3, r0
     e2c:	d010      	beq.n	e50 <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
     e2e:	201d      	movs	r0, #29
     e30:	e00c      	b.n	e4c <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
     e32:	a901      	add	r1, sp, #4
     e34:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
     e36:	2013      	movs	r0, #19
     e38:	4b07      	ldr	r3, [pc, #28]	; (e58 <sercom_set_gclk_generator+0x44>)
     e3a:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
     e3c:	2013      	movs	r0, #19
     e3e:	4b07      	ldr	r3, [pc, #28]	; (e5c <sercom_set_gclk_generator+0x48>)
     e40:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
     e42:	4b04      	ldr	r3, [pc, #16]	; (e54 <sercom_set_gclk_generator+0x40>)
     e44:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
     e46:	2201      	movs	r2, #1
     e48:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
     e4a:	2000      	movs	r0, #0
}
     e4c:	b002      	add	sp, #8
     e4e:	bd10      	pop	{r4, pc}
		return STATUS_OK;
     e50:	2000      	movs	r0, #0
     e52:	e7fb      	b.n	e4c <sercom_set_gclk_generator+0x38>
     e54:	2000026c 	.word	0x2000026c
     e58:	00001669 	.word	0x00001669
     e5c:	000015dd 	.word	0x000015dd

00000e60 <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
     e60:	4b3c      	ldr	r3, [pc, #240]	; (f54 <_sercom_get_default_pad+0xf4>)
     e62:	4298      	cmp	r0, r3
     e64:	d031      	beq.n	eca <_sercom_get_default_pad+0x6a>
     e66:	d90a      	bls.n	e7e <_sercom_get_default_pad+0x1e>
     e68:	4b3b      	ldr	r3, [pc, #236]	; (f58 <_sercom_get_default_pad+0xf8>)
     e6a:	4298      	cmp	r0, r3
     e6c:	d04d      	beq.n	f0a <_sercom_get_default_pad+0xaa>
     e6e:	4b3b      	ldr	r3, [pc, #236]	; (f5c <_sercom_get_default_pad+0xfc>)
     e70:	4298      	cmp	r0, r3
     e72:	d054      	beq.n	f1e <_sercom_get_default_pad+0xbe>
     e74:	4b3a      	ldr	r3, [pc, #232]	; (f60 <_sercom_get_default_pad+0x100>)
     e76:	4298      	cmp	r0, r3
     e78:	d037      	beq.n	eea <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
     e7a:	2000      	movs	r0, #0
}
     e7c:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
     e7e:	4b39      	ldr	r3, [pc, #228]	; (f64 <_sercom_get_default_pad+0x104>)
     e80:	4298      	cmp	r0, r3
     e82:	d00c      	beq.n	e9e <_sercom_get_default_pad+0x3e>
     e84:	4b38      	ldr	r3, [pc, #224]	; (f68 <_sercom_get_default_pad+0x108>)
     e86:	4298      	cmp	r0, r3
     e88:	d1f7      	bne.n	e7a <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     e8a:	2901      	cmp	r1, #1
     e8c:	d017      	beq.n	ebe <_sercom_get_default_pad+0x5e>
     e8e:	2900      	cmp	r1, #0
     e90:	d057      	beq.n	f42 <_sercom_get_default_pad+0xe2>
     e92:	2902      	cmp	r1, #2
     e94:	d015      	beq.n	ec2 <_sercom_get_default_pad+0x62>
     e96:	2903      	cmp	r1, #3
     e98:	d015      	beq.n	ec6 <_sercom_get_default_pad+0x66>
	return 0;
     e9a:	2000      	movs	r0, #0
     e9c:	e7ee      	b.n	e7c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     e9e:	2901      	cmp	r1, #1
     ea0:	d007      	beq.n	eb2 <_sercom_get_default_pad+0x52>
     ea2:	2900      	cmp	r1, #0
     ea4:	d04b      	beq.n	f3e <_sercom_get_default_pad+0xde>
     ea6:	2902      	cmp	r1, #2
     ea8:	d005      	beq.n	eb6 <_sercom_get_default_pad+0x56>
     eaa:	2903      	cmp	r1, #3
     eac:	d005      	beq.n	eba <_sercom_get_default_pad+0x5a>
	return 0;
     eae:	2000      	movs	r0, #0
     eb0:	e7e4      	b.n	e7c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     eb2:	482e      	ldr	r0, [pc, #184]	; (f6c <_sercom_get_default_pad+0x10c>)
     eb4:	e7e2      	b.n	e7c <_sercom_get_default_pad+0x1c>
     eb6:	482e      	ldr	r0, [pc, #184]	; (f70 <_sercom_get_default_pad+0x110>)
     eb8:	e7e0      	b.n	e7c <_sercom_get_default_pad+0x1c>
     eba:	482e      	ldr	r0, [pc, #184]	; (f74 <_sercom_get_default_pad+0x114>)
     ebc:	e7de      	b.n	e7c <_sercom_get_default_pad+0x1c>
     ebe:	482e      	ldr	r0, [pc, #184]	; (f78 <_sercom_get_default_pad+0x118>)
     ec0:	e7dc      	b.n	e7c <_sercom_get_default_pad+0x1c>
     ec2:	482e      	ldr	r0, [pc, #184]	; (f7c <_sercom_get_default_pad+0x11c>)
     ec4:	e7da      	b.n	e7c <_sercom_get_default_pad+0x1c>
     ec6:	482e      	ldr	r0, [pc, #184]	; (f80 <_sercom_get_default_pad+0x120>)
     ec8:	e7d8      	b.n	e7c <_sercom_get_default_pad+0x1c>
     eca:	2901      	cmp	r1, #1
     ecc:	d007      	beq.n	ede <_sercom_get_default_pad+0x7e>
     ece:	2900      	cmp	r1, #0
     ed0:	d039      	beq.n	f46 <_sercom_get_default_pad+0xe6>
     ed2:	2902      	cmp	r1, #2
     ed4:	d005      	beq.n	ee2 <_sercom_get_default_pad+0x82>
     ed6:	2903      	cmp	r1, #3
     ed8:	d005      	beq.n	ee6 <_sercom_get_default_pad+0x86>
	return 0;
     eda:	2000      	movs	r0, #0
     edc:	e7ce      	b.n	e7c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     ede:	4829      	ldr	r0, [pc, #164]	; (f84 <_sercom_get_default_pad+0x124>)
     ee0:	e7cc      	b.n	e7c <_sercom_get_default_pad+0x1c>
     ee2:	4829      	ldr	r0, [pc, #164]	; (f88 <_sercom_get_default_pad+0x128>)
     ee4:	e7ca      	b.n	e7c <_sercom_get_default_pad+0x1c>
     ee6:	4829      	ldr	r0, [pc, #164]	; (f8c <_sercom_get_default_pad+0x12c>)
     ee8:	e7c8      	b.n	e7c <_sercom_get_default_pad+0x1c>
     eea:	2901      	cmp	r1, #1
     eec:	d007      	beq.n	efe <_sercom_get_default_pad+0x9e>
     eee:	2900      	cmp	r1, #0
     ef0:	d02b      	beq.n	f4a <_sercom_get_default_pad+0xea>
     ef2:	2902      	cmp	r1, #2
     ef4:	d005      	beq.n	f02 <_sercom_get_default_pad+0xa2>
     ef6:	2903      	cmp	r1, #3
     ef8:	d005      	beq.n	f06 <_sercom_get_default_pad+0xa6>
	return 0;
     efa:	2000      	movs	r0, #0
     efc:	e7be      	b.n	e7c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     efe:	4824      	ldr	r0, [pc, #144]	; (f90 <_sercom_get_default_pad+0x130>)
     f00:	e7bc      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f02:	4824      	ldr	r0, [pc, #144]	; (f94 <_sercom_get_default_pad+0x134>)
     f04:	e7ba      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f06:	4824      	ldr	r0, [pc, #144]	; (f98 <_sercom_get_default_pad+0x138>)
     f08:	e7b8      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f0a:	2902      	cmp	r1, #2
     f0c:	d003      	beq.n	f16 <_sercom_get_default_pad+0xb6>
     f0e:	2903      	cmp	r1, #3
     f10:	d003      	beq.n	f1a <_sercom_get_default_pad+0xba>
     f12:	2000      	movs	r0, #0
     f14:	e7b2      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f16:	4821      	ldr	r0, [pc, #132]	; (f9c <_sercom_get_default_pad+0x13c>)
     f18:	e7b0      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f1a:	4821      	ldr	r0, [pc, #132]	; (fa0 <_sercom_get_default_pad+0x140>)
     f1c:	e7ae      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f1e:	2901      	cmp	r1, #1
     f20:	d007      	beq.n	f32 <_sercom_get_default_pad+0xd2>
     f22:	2900      	cmp	r1, #0
     f24:	d013      	beq.n	f4e <_sercom_get_default_pad+0xee>
     f26:	2902      	cmp	r1, #2
     f28:	d005      	beq.n	f36 <_sercom_get_default_pad+0xd6>
     f2a:	2903      	cmp	r1, #3
     f2c:	d005      	beq.n	f3a <_sercom_get_default_pad+0xda>
	return 0;
     f2e:	2000      	movs	r0, #0
     f30:	e7a4      	b.n	e7c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     f32:	481c      	ldr	r0, [pc, #112]	; (fa4 <_sercom_get_default_pad+0x144>)
     f34:	e7a2      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f36:	481c      	ldr	r0, [pc, #112]	; (fa8 <_sercom_get_default_pad+0x148>)
     f38:	e7a0      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f3a:	481c      	ldr	r0, [pc, #112]	; (fac <_sercom_get_default_pad+0x14c>)
     f3c:	e79e      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f3e:	481c      	ldr	r0, [pc, #112]	; (fb0 <_sercom_get_default_pad+0x150>)
     f40:	e79c      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f42:	481c      	ldr	r0, [pc, #112]	; (fb4 <_sercom_get_default_pad+0x154>)
     f44:	e79a      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f46:	481c      	ldr	r0, [pc, #112]	; (fb8 <_sercom_get_default_pad+0x158>)
     f48:	e798      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f4a:	481c      	ldr	r0, [pc, #112]	; (fbc <_sercom_get_default_pad+0x15c>)
     f4c:	e796      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f4e:	481c      	ldr	r0, [pc, #112]	; (fc0 <_sercom_get_default_pad+0x160>)
     f50:	e794      	b.n	e7c <_sercom_get_default_pad+0x1c>
     f52:	46c0      	nop			; (mov r8, r8)
     f54:	42001000 	.word	0x42001000
     f58:	42001800 	.word	0x42001800
     f5c:	42001c00 	.word	0x42001c00
     f60:	42001400 	.word	0x42001400
     f64:	42000800 	.word	0x42000800
     f68:	42000c00 	.word	0x42000c00
     f6c:	00050003 	.word	0x00050003
     f70:	000a0002 	.word	0x000a0002
     f74:	000b0002 	.word	0x000b0002
     f78:	00110002 	.word	0x00110002
     f7c:	00120002 	.word	0x00120002
     f80:	00130002 	.word	0x00130002
     f84:	00090003 	.word	0x00090003
     f88:	000e0002 	.word	0x000e0002
     f8c:	000f0002 	.word	0x000f0002
     f90:	00110003 	.word	0x00110003
     f94:	00120003 	.word	0x00120003
     f98:	00130003 	.word	0x00130003
     f9c:	002a0003 	.word	0x002a0003
     fa0:	002b0003 	.word	0x002b0003
     fa4:	00310002 	.word	0x00310002
     fa8:	00140002 	.word	0x00140002
     fac:	00150002 	.word	0x00150002
     fb0:	00040003 	.word	0x00040003
     fb4:	00100002 	.word	0x00100002
     fb8:	00080003 	.word	0x00080003
     fbc:	00100003 	.word	0x00100003
     fc0:	00300002 	.word	0x00300002

00000fc4 <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
     fc4:	b530      	push	{r4, r5, lr}
     fc6:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
     fc8:	4b0b      	ldr	r3, [pc, #44]	; (ff8 <_sercom_get_sercom_inst_index+0x34>)
     fca:	466a      	mov	r2, sp
     fcc:	cb32      	ldmia	r3!, {r1, r4, r5}
     fce:	c232      	stmia	r2!, {r1, r4, r5}
     fd0:	cb32      	ldmia	r3!, {r1, r4, r5}
     fd2:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
     fd4:	9b00      	ldr	r3, [sp, #0]
     fd6:	4283      	cmp	r3, r0
     fd8:	d00b      	beq.n	ff2 <_sercom_get_sercom_inst_index+0x2e>
     fda:	2301      	movs	r3, #1
     fdc:	009a      	lsls	r2, r3, #2
     fde:	4669      	mov	r1, sp
     fe0:	5852      	ldr	r2, [r2, r1]
     fe2:	4282      	cmp	r2, r0
     fe4:	d006      	beq.n	ff4 <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     fe6:	3301      	adds	r3, #1
     fe8:	2b06      	cmp	r3, #6
     fea:	d1f7      	bne.n	fdc <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
     fec:	2000      	movs	r0, #0
}
     fee:	b007      	add	sp, #28
     ff0:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     ff2:	2300      	movs	r3, #0
			return i;
     ff4:	b2d8      	uxtb	r0, r3
     ff6:	e7fa      	b.n	fee <_sercom_get_sercom_inst_index+0x2a>
     ff8:	00006554 	.word	0x00006554

00000ffc <delay_init>:
 *
 * This must be called during start up to initialize the delay routine with
 * the current used main clock. It must run any time the main CPU clock is changed.
 */
void delay_init(void)
{
     ffc:	b570      	push	{r4, r5, r6, lr}
	cycles_per_ms = system_gclk_gen_get_hz(0);
     ffe:	2000      	movs	r0, #0
    1000:	4b08      	ldr	r3, [pc, #32]	; (1024 <delay_init+0x28>)
    1002:	4798      	blx	r3
    1004:	0005      	movs	r5, r0
	cycles_per_ms /= 1000;
    1006:	4c08      	ldr	r4, [pc, #32]	; (1028 <delay_init+0x2c>)
    1008:	21fa      	movs	r1, #250	; 0xfa
    100a:	0089      	lsls	r1, r1, #2
    100c:	47a0      	blx	r4
    100e:	4b07      	ldr	r3, [pc, #28]	; (102c <delay_init+0x30>)
    1010:	6018      	str	r0, [r3, #0]
	cycles_per_us = cycles_per_ms / 1000;
    1012:	4907      	ldr	r1, [pc, #28]	; (1030 <delay_init+0x34>)
    1014:	0028      	movs	r0, r5
    1016:	47a0      	blx	r4
    1018:	4b06      	ldr	r3, [pc, #24]	; (1034 <delay_init+0x38>)
    101a:	6018      	str	r0, [r3, #0]

	SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
    101c:	2205      	movs	r2, #5
    101e:	4b06      	ldr	r3, [pc, #24]	; (1038 <delay_init+0x3c>)
    1020:	601a      	str	r2, [r3, #0]
}
    1022:	bd70      	pop	{r4, r5, r6, pc}
    1024:	00001551 	.word	0x00001551
    1028:	00004359 	.word	0x00004359
    102c:	20000008 	.word	0x20000008
    1030:	000f4240 	.word	0x000f4240
    1034:	2000000c 	.word	0x2000000c
    1038:	e000e010 	.word	0xe000e010

0000103c <delay_cycles_ms>:
 *
 * \param n  Number of milliseconds to wait
 */
void delay_cycles_ms(
		uint32_t n)
{
    103c:	b530      	push	{r4, r5, lr}
	while (n--) {
		/* Devide up to blocks of 1ms */
		delay_cycles(cycles_per_ms);
    103e:	4b08      	ldr	r3, [pc, #32]	; (1060 <delay_cycles_ms+0x24>)
    1040:	681c      	ldr	r4, [r3, #0]
 */
static inline void delay_cycles(
		const uint32_t n)
{
	if (n > 0) {
		SysTick->LOAD = n;
    1042:	4a08      	ldr	r2, [pc, #32]	; (1064 <delay_cycles_ms+0x28>)
		SysTick->VAL = 0;
    1044:	2500      	movs	r5, #0

		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
    1046:	2180      	movs	r1, #128	; 0x80
    1048:	0249      	lsls	r1, r1, #9
	while (n--) {
    104a:	3801      	subs	r0, #1
    104c:	d307      	bcc.n	105e <delay_cycles_ms+0x22>
	if (n > 0) {
    104e:	2c00      	cmp	r4, #0
    1050:	d0fb      	beq.n	104a <delay_cycles_ms+0xe>
		SysTick->LOAD = n;
    1052:	6054      	str	r4, [r2, #4]
		SysTick->VAL = 0;
    1054:	6095      	str	r5, [r2, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
    1056:	6813      	ldr	r3, [r2, #0]
    1058:	420b      	tst	r3, r1
    105a:	d0fc      	beq.n	1056 <delay_cycles_ms+0x1a>
    105c:	e7f5      	b.n	104a <delay_cycles_ms+0xe>
	}
}
    105e:	bd30      	pop	{r4, r5, pc}
    1060:	20000008 	.word	0x20000008
    1064:	e000e010 	.word	0xe000e010

00001068 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
    1068:	4b0c      	ldr	r3, [pc, #48]	; (109c <cpu_irq_enter_critical+0x34>)
    106a:	681b      	ldr	r3, [r3, #0]
    106c:	2b00      	cmp	r3, #0
    106e:	d106      	bne.n	107e <cpu_irq_enter_critical+0x16>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    1070:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
    1074:	2b00      	cmp	r3, #0
    1076:	d007      	beq.n	1088 <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
    1078:	2200      	movs	r2, #0
    107a:	4b09      	ldr	r3, [pc, #36]	; (10a0 <cpu_irq_enter_critical+0x38>)
    107c:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
    107e:	4a07      	ldr	r2, [pc, #28]	; (109c <cpu_irq_enter_critical+0x34>)
    1080:	6813      	ldr	r3, [r2, #0]
    1082:	3301      	adds	r3, #1
    1084:	6013      	str	r3, [r2, #0]
}
    1086:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
    1088:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    108a:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
    108e:	2200      	movs	r2, #0
    1090:	4b04      	ldr	r3, [pc, #16]	; (10a4 <cpu_irq_enter_critical+0x3c>)
    1092:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
    1094:	3201      	adds	r2, #1
    1096:	4b02      	ldr	r3, [pc, #8]	; (10a0 <cpu_irq_enter_critical+0x38>)
    1098:	701a      	strb	r2, [r3, #0]
    109a:	e7f0      	b.n	107e <cpu_irq_enter_critical+0x16>
    109c:	20000270 	.word	0x20000270
    10a0:	20000274 	.word	0x20000274
    10a4:	20000010 	.word	0x20000010

000010a8 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
    10a8:	4b08      	ldr	r3, [pc, #32]	; (10cc <cpu_irq_leave_critical+0x24>)
    10aa:	681a      	ldr	r2, [r3, #0]
    10ac:	3a01      	subs	r2, #1
    10ae:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
    10b0:	681b      	ldr	r3, [r3, #0]
    10b2:	2b00      	cmp	r3, #0
    10b4:	d109      	bne.n	10ca <cpu_irq_leave_critical+0x22>
    10b6:	4b06      	ldr	r3, [pc, #24]	; (10d0 <cpu_irq_leave_critical+0x28>)
    10b8:	781b      	ldrb	r3, [r3, #0]
    10ba:	2b00      	cmp	r3, #0
    10bc:	d005      	beq.n	10ca <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
    10be:	2201      	movs	r2, #1
    10c0:	4b04      	ldr	r3, [pc, #16]	; (10d4 <cpu_irq_leave_critical+0x2c>)
    10c2:	701a      	strb	r2, [r3, #0]
    10c4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    10c8:	b662      	cpsie	i
	}
}
    10ca:	4770      	bx	lr
    10cc:	20000270 	.word	0x20000270
    10d0:	20000274 	.word	0x20000274
    10d4:	20000010 	.word	0x20000010

000010d8 <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
    10d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    10da:	b083      	sub	sp, #12
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
    10dc:	ac01      	add	r4, sp, #4
    10de:	2501      	movs	r5, #1
    10e0:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
    10e2:	2700      	movs	r7, #0
    10e4:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
    10e6:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
    10e8:	0021      	movs	r1, r4
    10ea:	2000      	movs	r0, #0
    10ec:	4e05      	ldr	r6, [pc, #20]	; (1104 <system_board_init+0x2c>)
    10ee:	47b0      	blx	r6
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
    10f0:	4b05      	ldr	r3, [pc, #20]	; (1108 <system_board_init+0x30>)
    10f2:	619d      	str	r5, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
    10f4:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
    10f6:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
    10f8:	0021      	movs	r1, r4
    10fa:	2023      	movs	r0, #35	; 0x23
    10fc:	47b0      	blx	r6
}
    10fe:	b003      	add	sp, #12
    1100:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1102:	46c0      	nop			; (mov r8, r8)
    1104:	0000110d 	.word	0x0000110d
    1108:	41004400 	.word	0x41004400

0000110c <port_pin_set_config>:
 *  \param[in] config    Configuration settings for the pin
 */
void port_pin_set_config(
		const uint8_t gpio_pin,
		const struct port_config *const config)
{
    110c:	b500      	push	{lr}
    110e:	b083      	sub	sp, #12
	config->mux_position = SYSTEM_PINMUX_GPIO;
    1110:	ab01      	add	r3, sp, #4
    1112:	2280      	movs	r2, #128	; 0x80
    1114:	701a      	strb	r2, [r3, #0]

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = SYSTEM_PINMUX_GPIO;
	pinmux_config.direction    = (enum system_pinmux_pin_dir)config->direction;
    1116:	780a      	ldrb	r2, [r1, #0]
    1118:	705a      	strb	r2, [r3, #1]
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->input_pull;
    111a:	784a      	ldrb	r2, [r1, #1]
    111c:	709a      	strb	r2, [r3, #2]
	pinmux_config.powersave    = config->powersave;
    111e:	788a      	ldrb	r2, [r1, #2]
    1120:	70da      	strb	r2, [r3, #3]

	system_pinmux_pin_set_config(gpio_pin, &pinmux_config);
    1122:	0019      	movs	r1, r3
    1124:	4b01      	ldr	r3, [pc, #4]	; (112c <port_pin_set_config+0x20>)
    1126:	4798      	blx	r3
}
    1128:	b003      	add	sp, #12
    112a:	bd00      	pop	{pc}
    112c:	00001761 	.word	0x00001761

00001130 <usart_init>:
 */
enum status_code usart_init(
		struct usart_module *const module,
		Sercom *const hw,
		const struct usart_config *const config)
{
    1130:	b5f0      	push	{r4, r5, r6, r7, lr}
    1132:	46de      	mov	lr, fp
    1134:	4657      	mov	r7, sl
    1136:	464e      	mov	r6, r9
    1138:	4645      	mov	r5, r8
    113a:	b5e0      	push	{r5, r6, r7, lr}
    113c:	b091      	sub	sp, #68	; 0x44
    113e:	0005      	movs	r5, r0
    1140:	000c      	movs	r4, r1
    1142:	0016      	movs	r6, r2
	Assert(config);

	enum status_code status_code = STATUS_OK;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
    1144:	6029      	str	r1, [r5, #0]

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
    1146:	0008      	movs	r0, r1
    1148:	4bad      	ldr	r3, [pc, #692]	; (1400 <usart_init+0x2d0>)
    114a:	4798      	blx	r3
    114c:	0002      	movs	r2, r0
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
#endif

	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
    114e:	6823      	ldr	r3, [r4, #0]
		/* The module is busy resetting itself */
		return STATUS_BUSY;
    1150:	2005      	movs	r0, #5
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
    1152:	07db      	lsls	r3, r3, #31
    1154:	d506      	bpl.n	1164 <usart_init+0x34>
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
	_sercom_instances[instance_index] = module;
#endif

	return status_code;
}
    1156:	b011      	add	sp, #68	; 0x44
    1158:	bc3c      	pop	{r2, r3, r4, r5}
    115a:	4690      	mov	r8, r2
    115c:	4699      	mov	r9, r3
    115e:	46a2      	mov	sl, r4
    1160:	46ab      	mov	fp, r5
    1162:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
    1164:	6823      	ldr	r3, [r4, #0]
		return STATUS_ERR_DENIED;
    1166:	3017      	adds	r0, #23
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
    1168:	079b      	lsls	r3, r3, #30
    116a:	d4f4      	bmi.n	1156 <usart_init+0x26>
    116c:	49a5      	ldr	r1, [pc, #660]	; (1404 <usart_init+0x2d4>)
    116e:	6a08      	ldr	r0, [r1, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
    1170:	1c97      	adds	r7, r2, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
    1172:	2301      	movs	r3, #1
    1174:	40bb      	lsls	r3, r7
    1176:	4303      	orrs	r3, r0
    1178:	620b      	str	r3, [r1, #32]
	gclk_chan_conf.source_generator = config->generator_source;
    117a:	a90f      	add	r1, sp, #60	; 0x3c
    117c:	272d      	movs	r7, #45	; 0x2d
    117e:	5df3      	ldrb	r3, [r6, r7]
    1180:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
    1182:	3214      	adds	r2, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
    1184:	b2d3      	uxtb	r3, r2
    1186:	9302      	str	r3, [sp, #8]
    1188:	0018      	movs	r0, r3
    118a:	4b9f      	ldr	r3, [pc, #636]	; (1408 <usart_init+0x2d8>)
    118c:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
    118e:	9802      	ldr	r0, [sp, #8]
    1190:	4b9e      	ldr	r3, [pc, #632]	; (140c <usart_init+0x2dc>)
    1192:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
    1194:	5df0      	ldrb	r0, [r6, r7]
    1196:	2100      	movs	r1, #0
    1198:	4b9d      	ldr	r3, [pc, #628]	; (1410 <usart_init+0x2e0>)
    119a:	4798      	blx	r3
	module->character_size = config->character_size;
    119c:	7af3      	ldrb	r3, [r6, #11]
    119e:	716b      	strb	r3, [r5, #5]
	module->receiver_enabled = config->receiver_enable;
    11a0:	2324      	movs	r3, #36	; 0x24
    11a2:	5cf3      	ldrb	r3, [r6, r3]
    11a4:	71ab      	strb	r3, [r5, #6]
	module->transmitter_enabled = config->transmitter_enable;
    11a6:	2325      	movs	r3, #37	; 0x25
    11a8:	5cf3      	ldrb	r3, [r6, r3]
    11aa:	71eb      	strb	r3, [r5, #7]
	module->lin_slave_enabled = config->lin_slave_enable;
    11ac:	7ef3      	ldrb	r3, [r6, #27]
    11ae:	722b      	strb	r3, [r5, #8]
	module->start_frame_detection_enabled = config->start_frame_detection_enable;
    11b0:	7f33      	ldrb	r3, [r6, #28]
    11b2:	726b      	strb	r3, [r5, #9]
	SercomUsart *const usart_hw = &(module->hw->USART);
    11b4:	682b      	ldr	r3, [r5, #0]
    11b6:	4698      	mov	r8, r3
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
    11b8:	0018      	movs	r0, r3
    11ba:	4b91      	ldr	r3, [pc, #580]	; (1400 <usart_init+0x2d0>)
    11bc:	4798      	blx	r3
	uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
    11be:	3014      	adds	r0, #20
	uint16_t baud  = 0;
    11c0:	2200      	movs	r2, #0
    11c2:	230e      	movs	r3, #14
    11c4:	a906      	add	r1, sp, #24
    11c6:	468c      	mov	ip, r1
    11c8:	4463      	add	r3, ip
    11ca:	801a      	strh	r2, [r3, #0]
	switch (config->sample_rate) {
    11cc:	8a32      	ldrh	r2, [r6, #16]
    11ce:	9202      	str	r2, [sp, #8]
    11d0:	2380      	movs	r3, #128	; 0x80
    11d2:	01db      	lsls	r3, r3, #7
    11d4:	429a      	cmp	r2, r3
    11d6:	d100      	bne.n	11da <usart_init+0xaa>
    11d8:	e09f      	b.n	131a <usart_init+0x1ea>
    11da:	d90f      	bls.n	11fc <usart_init+0xcc>
    11dc:	23c0      	movs	r3, #192	; 0xc0
    11de:	01db      	lsls	r3, r3, #7
    11e0:	9a02      	ldr	r2, [sp, #8]
    11e2:	429a      	cmp	r2, r3
    11e4:	d100      	bne.n	11e8 <usart_init+0xb8>
    11e6:	e093      	b.n	1310 <usart_init+0x1e0>
    11e8:	2380      	movs	r3, #128	; 0x80
    11ea:	021b      	lsls	r3, r3, #8
    11ec:	429a      	cmp	r2, r3
    11ee:	d000      	beq.n	11f2 <usart_init+0xc2>
    11f0:	e101      	b.n	13f6 <usart_init+0x2c6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_3;
    11f2:	2303      	movs	r3, #3
    11f4:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
    11f6:	2300      	movs	r3, #0
    11f8:	9307      	str	r3, [sp, #28]
    11fa:	e008      	b.n	120e <usart_init+0xde>
	switch (config->sample_rate) {
    11fc:	2380      	movs	r3, #128	; 0x80
    11fe:	019b      	lsls	r3, r3, #6
    1200:	429a      	cmp	r2, r3
    1202:	d000      	beq.n	1206 <usart_init+0xd6>
    1204:	e0f7      	b.n	13f6 <usart_init+0x2c6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
    1206:	2310      	movs	r3, #16
    1208:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
    120a:	3b0f      	subs	r3, #15
    120c:	9307      	str	r3, [sp, #28]
	ctrla = (uint32_t)config->data_order |
    120e:	6833      	ldr	r3, [r6, #0]
    1210:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
    1212:	68f3      	ldr	r3, [r6, #12]
    1214:	9304      	str	r3, [sp, #16]
		config->sample_adjustment |
    1216:	6973      	ldr	r3, [r6, #20]
    1218:	469a      	mov	sl, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
    121a:	7e33      	ldrb	r3, [r6, #24]
    121c:	9305      	str	r3, [sp, #20]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
    121e:	2326      	movs	r3, #38	; 0x26
    1220:	5cf3      	ldrb	r3, [r6, r3]
    1222:	9303      	str	r3, [sp, #12]
	transfer_mode = (uint32_t)config->transfer_mode;
    1224:	6873      	ldr	r3, [r6, #4]
    1226:	4699      	mov	r9, r3
	switch (transfer_mode)
    1228:	2b00      	cmp	r3, #0
    122a:	d100      	bne.n	122e <usart_init+0xfe>
    122c:	e0a1      	b.n	1372 <usart_init+0x242>
    122e:	2380      	movs	r3, #128	; 0x80
    1230:	055b      	lsls	r3, r3, #21
    1232:	4599      	cmp	r9, r3
    1234:	d100      	bne.n	1238 <usart_init+0x108>
    1236:	e085      	b.n	1344 <usart_init+0x214>
	if(config->encoding_format_enable) {
    1238:	7e73      	ldrb	r3, [r6, #25]
    123a:	2b00      	cmp	r3, #0
    123c:	d002      	beq.n	1244 <usart_init+0x114>
		usart_hw->RXPL.reg = config->receive_pulse_length;
    123e:	7eb3      	ldrb	r3, [r6, #26]
    1240:	4642      	mov	r2, r8
    1242:	7393      	strb	r3, [r2, #14]
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomUsart *const usart_hw = &(module->hw->USART);
    1244:	682a      	ldr	r2, [r5, #0]
    1246:	9f02      	ldr	r7, [sp, #8]

#ifdef FEATURE_USART_SYNC_SCHEME_V2
	return (usart_hw->SYNCBUSY.reg);
    1248:	69d3      	ldr	r3, [r2, #28]
		const struct usart_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (usart_is_syncing(module)) {
    124a:	2b00      	cmp	r3, #0
    124c:	d1fc      	bne.n	1248 <usart_init+0x118>
	usart_hw->BAUD.reg = baud;
    124e:	330e      	adds	r3, #14
    1250:	aa06      	add	r2, sp, #24
    1252:	4694      	mov	ip, r2
    1254:	4463      	add	r3, ip
    1256:	881b      	ldrh	r3, [r3, #0]
    1258:	4642      	mov	r2, r8
    125a:	8193      	strh	r3, [r2, #12]
	ctrla |= transfer_mode;
    125c:	465b      	mov	r3, fp
    125e:	9a04      	ldr	r2, [sp, #16]
    1260:	4313      	orrs	r3, r2
    1262:	4652      	mov	r2, sl
    1264:	4313      	orrs	r3, r2
    1266:	464a      	mov	r2, r9
    1268:	4313      	orrs	r3, r2
    126a:	431f      	orrs	r7, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
    126c:	9b05      	ldr	r3, [sp, #20]
    126e:	021b      	lsls	r3, r3, #8
	ctrla |= transfer_mode;
    1270:	431f      	orrs	r7, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
    1272:	9b03      	ldr	r3, [sp, #12]
    1274:	075b      	lsls	r3, r3, #29
	ctrla |= transfer_mode;
    1276:	431f      	orrs	r7, r3
	if (config->use_external_clock == false) {
    1278:	2327      	movs	r3, #39	; 0x27
    127a:	5cf3      	ldrb	r3, [r6, r3]
    127c:	2b00      	cmp	r3, #0
    127e:	d101      	bne.n	1284 <usart_init+0x154>
		ctrla |= SERCOM_USART_CTRLA_MODE(0x1);
    1280:	3304      	adds	r3, #4
    1282:	431f      	orrs	r7, r3
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
    1284:	7e73      	ldrb	r3, [r6, #25]
    1286:	029b      	lsls	r3, r3, #10
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
    1288:	7f32      	ldrb	r2, [r6, #28]
    128a:	0252      	lsls	r2, r2, #9
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
    128c:	4313      	orrs	r3, r2
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
    128e:	7f72      	ldrb	r2, [r6, #29]
    1290:	0212      	lsls	r2, r2, #8
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
    1292:	4313      	orrs	r3, r2
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
    1294:	2224      	movs	r2, #36	; 0x24
    1296:	5cb2      	ldrb	r2, [r6, r2]
    1298:	0452      	lsls	r2, r2, #17
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
    129a:	4313      	orrs	r3, r2
			(config->transmitter_enable << SERCOM_USART_CTRLB_TXEN_Pos);
    129c:	2225      	movs	r2, #37	; 0x25
    129e:	5cb2      	ldrb	r2, [r6, r2]
    12a0:	0412      	lsls	r2, r2, #16
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
    12a2:	4313      	orrs	r3, r2
	ctrlb |= (uint32_t)config->character_size;
    12a4:	7ab1      	ldrb	r1, [r6, #10]
    12a6:	7af2      	ldrb	r2, [r6, #11]
    12a8:	4311      	orrs	r1, r2
    12aa:	4319      	orrs	r1, r3
	if (config->parity != USART_PARITY_NONE) {
    12ac:	8933      	ldrh	r3, [r6, #8]
    12ae:	2bff      	cmp	r3, #255	; 0xff
    12b0:	d100      	bne.n	12b4 <usart_init+0x184>
    12b2:	e082      	b.n	13ba <usart_init+0x28a>
		ctrla |= SERCOM_USART_CTRLA_FORM(1);
    12b4:	2280      	movs	r2, #128	; 0x80
    12b6:	0452      	lsls	r2, r2, #17
    12b8:	4317      	orrs	r7, r2
		ctrlb |= config->parity;
    12ba:	4319      	orrs	r1, r3
	if (config->run_in_standby || system_is_debugger_present()) {
    12bc:	232c      	movs	r3, #44	; 0x2c
    12be:	5cf3      	ldrb	r3, [r6, r3]
    12c0:	2b00      	cmp	r3, #0
    12c2:	d103      	bne.n	12cc <usart_init+0x19c>
    12c4:	4b53      	ldr	r3, [pc, #332]	; (1414 <usart_init+0x2e4>)
    12c6:	789b      	ldrb	r3, [r3, #2]
    12c8:	079b      	lsls	r3, r3, #30
    12ca:	d501      	bpl.n	12d0 <usart_init+0x1a0>
		ctrla |= SERCOM_USART_CTRLA_RUNSTDBY;
    12cc:	2380      	movs	r3, #128	; 0x80
    12ce:	431f      	orrs	r7, r3
	SercomUsart *const usart_hw = &(module->hw->USART);
    12d0:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    12d2:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    12d4:	2b00      	cmp	r3, #0
    12d6:	d1fc      	bne.n	12d2 <usart_init+0x1a2>
	usart_hw->CTRLB.reg = ctrlb;
    12d8:	4643      	mov	r3, r8
    12da:	6059      	str	r1, [r3, #4]
	SercomUsart *const usart_hw = &(module->hw->USART);
    12dc:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    12de:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    12e0:	2b00      	cmp	r3, #0
    12e2:	d1fc      	bne.n	12de <usart_init+0x1ae>
	usart_hw->CTRLA.reg = ctrla;
    12e4:	4643      	mov	r3, r8
    12e6:	601f      	str	r7, [r3, #0]
    12e8:	ab0e      	add	r3, sp, #56	; 0x38
    12ea:	2280      	movs	r2, #128	; 0x80
    12ec:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
    12ee:	2200      	movs	r2, #0
    12f0:	705a      	strb	r2, [r3, #1]
	config->powersave    = false;
    12f2:	70da      	strb	r2, [r3, #3]
	pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
    12f4:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
    12f6:	6b33      	ldr	r3, [r6, #48]	; 0x30
    12f8:	930a      	str	r3, [sp, #40]	; 0x28
    12fa:	6b73      	ldr	r3, [r6, #52]	; 0x34
    12fc:	930b      	str	r3, [sp, #44]	; 0x2c
    12fe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    1300:	930c      	str	r3, [sp, #48]	; 0x30
    1302:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    1304:	9302      	str	r3, [sp, #8]
    1306:	930d      	str	r3, [sp, #52]	; 0x34
    1308:	2700      	movs	r7, #0
		uint32_t current_pinmux = pad_pinmuxes[pad];
    130a:	ad0a      	add	r5, sp, #40	; 0x28
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
    130c:	4e42      	ldr	r6, [pc, #264]	; (1418 <usart_init+0x2e8>)
    130e:	e063      	b.n	13d8 <usart_init+0x2a8>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
    1310:	2308      	movs	r3, #8
    1312:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
    1314:	3b07      	subs	r3, #7
    1316:	9307      	str	r3, [sp, #28]
    1318:	e779      	b.n	120e <usart_init+0xde>
	ctrla = (uint32_t)config->data_order |
    131a:	6833      	ldr	r3, [r6, #0]
    131c:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
    131e:	68f3      	ldr	r3, [r6, #12]
    1320:	9304      	str	r3, [sp, #16]
		config->sample_adjustment |
    1322:	6973      	ldr	r3, [r6, #20]
    1324:	469a      	mov	sl, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
    1326:	7e33      	ldrb	r3, [r6, #24]
    1328:	9305      	str	r3, [sp, #20]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
    132a:	2326      	movs	r3, #38	; 0x26
    132c:	5cf3      	ldrb	r3, [r6, r3]
    132e:	9303      	str	r3, [sp, #12]
	transfer_mode = (uint32_t)config->transfer_mode;
    1330:	6873      	ldr	r3, [r6, #4]
    1332:	4699      	mov	r9, r3
	switch (transfer_mode)
    1334:	2b00      	cmp	r3, #0
    1336:	d018      	beq.n	136a <usart_init+0x23a>
    1338:	2380      	movs	r3, #128	; 0x80
    133a:	055b      	lsls	r3, r3, #21
    133c:	4599      	cmp	r9, r3
    133e:	d001      	beq.n	1344 <usart_init+0x214>
	enum status_code status_code = STATUS_OK;
    1340:	2000      	movs	r0, #0
    1342:	e025      	b.n	1390 <usart_init+0x260>
			if (!config->use_external_clock) {
    1344:	2327      	movs	r3, #39	; 0x27
    1346:	5cf3      	ldrb	r3, [r6, r3]
    1348:	2b00      	cmp	r3, #0
    134a:	d000      	beq.n	134e <usart_init+0x21e>
    134c:	e774      	b.n	1238 <usart_init+0x108>
				status_code = _sercom_get_sync_baud_val(config->baudrate,
    134e:	6a33      	ldr	r3, [r6, #32]
    1350:	001f      	movs	r7, r3
    1352:	b2c0      	uxtb	r0, r0
    1354:	4b31      	ldr	r3, [pc, #196]	; (141c <usart_init+0x2ec>)
    1356:	4798      	blx	r3
    1358:	0001      	movs	r1, r0
    135a:	220e      	movs	r2, #14
    135c:	ab06      	add	r3, sp, #24
    135e:	469c      	mov	ip, r3
    1360:	4462      	add	r2, ip
    1362:	0038      	movs	r0, r7
    1364:	4b2e      	ldr	r3, [pc, #184]	; (1420 <usart_init+0x2f0>)
    1366:	4798      	blx	r3
    1368:	e012      	b.n	1390 <usart_init+0x260>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
    136a:	2308      	movs	r3, #8
    136c:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
    136e:	2300      	movs	r3, #0
    1370:	9307      	str	r3, [sp, #28]
			if (config->use_external_clock) {
    1372:	2327      	movs	r3, #39	; 0x27
    1374:	5cf3      	ldrb	r3, [r6, r3]
    1376:	2b00      	cmp	r3, #0
    1378:	d00e      	beq.n	1398 <usart_init+0x268>
				status_code =
    137a:	9b06      	ldr	r3, [sp, #24]
    137c:	9300      	str	r3, [sp, #0]
    137e:	9b07      	ldr	r3, [sp, #28]
    1380:	220e      	movs	r2, #14
    1382:	a906      	add	r1, sp, #24
    1384:	468c      	mov	ip, r1
    1386:	4462      	add	r2, ip
    1388:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    138a:	6a30      	ldr	r0, [r6, #32]
    138c:	4f25      	ldr	r7, [pc, #148]	; (1424 <usart_init+0x2f4>)
    138e:	47b8      	blx	r7
	if (status_code != STATUS_OK) {
    1390:	2800      	cmp	r0, #0
    1392:	d000      	beq.n	1396 <usart_init+0x266>
    1394:	e6df      	b.n	1156 <usart_init+0x26>
    1396:	e74f      	b.n	1238 <usart_init+0x108>
						_sercom_get_async_baud_val(config->baudrate,
    1398:	6a33      	ldr	r3, [r6, #32]
    139a:	001f      	movs	r7, r3
    139c:	b2c0      	uxtb	r0, r0
    139e:	4b1f      	ldr	r3, [pc, #124]	; (141c <usart_init+0x2ec>)
    13a0:	4798      	blx	r3
    13a2:	0001      	movs	r1, r0
				status_code =
    13a4:	9b06      	ldr	r3, [sp, #24]
    13a6:	9300      	str	r3, [sp, #0]
    13a8:	9b07      	ldr	r3, [sp, #28]
    13aa:	220e      	movs	r2, #14
    13ac:	a806      	add	r0, sp, #24
    13ae:	4684      	mov	ip, r0
    13b0:	4462      	add	r2, ip
    13b2:	0038      	movs	r0, r7
    13b4:	4f1b      	ldr	r7, [pc, #108]	; (1424 <usart_init+0x2f4>)
    13b6:	47b8      	blx	r7
    13b8:	e7ea      	b.n	1390 <usart_init+0x260>
		if(config->lin_slave_enable) {
    13ba:	7ef3      	ldrb	r3, [r6, #27]
    13bc:	2b00      	cmp	r3, #0
    13be:	d100      	bne.n	13c2 <usart_init+0x292>
    13c0:	e77c      	b.n	12bc <usart_init+0x18c>
			ctrla |= SERCOM_USART_CTRLA_FORM(0x4);
    13c2:	2380      	movs	r3, #128	; 0x80
    13c4:	04db      	lsls	r3, r3, #19
    13c6:	431f      	orrs	r7, r3
    13c8:	e778      	b.n	12bc <usart_init+0x18c>
			current_pinmux = _sercom_get_default_pad(hw, pad);
    13ca:	0020      	movs	r0, r4
    13cc:	4b16      	ldr	r3, [pc, #88]	; (1428 <usart_init+0x2f8>)
    13ce:	4798      	blx	r3
    13d0:	e007      	b.n	13e2 <usart_init+0x2b2>
    13d2:	3701      	adds	r7, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
    13d4:	2f04      	cmp	r7, #4
    13d6:	d00c      	beq.n	13f2 <usart_init+0x2c2>
    13d8:	b2f9      	uxtb	r1, r7
		uint32_t current_pinmux = pad_pinmuxes[pad];
    13da:	00bb      	lsls	r3, r7, #2
    13dc:	5958      	ldr	r0, [r3, r5]
		if (current_pinmux == PINMUX_DEFAULT) {
    13de:	2800      	cmp	r0, #0
    13e0:	d0f3      	beq.n	13ca <usart_init+0x29a>
		if (current_pinmux != PINMUX_UNUSED) {
    13e2:	1c43      	adds	r3, r0, #1
    13e4:	d0f5      	beq.n	13d2 <usart_init+0x2a2>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
    13e6:	a90e      	add	r1, sp, #56	; 0x38
    13e8:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
    13ea:	0c00      	lsrs	r0, r0, #16
    13ec:	b2c0      	uxtb	r0, r0
    13ee:	47b0      	blx	r6
    13f0:	e7ef      	b.n	13d2 <usart_init+0x2a2>
	return status_code;
    13f2:	2000      	movs	r0, #0
    13f4:	e6af      	b.n	1156 <usart_init+0x26>
	enum sercom_asynchronous_sample_num sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
    13f6:	2310      	movs	r3, #16
    13f8:	9306      	str	r3, [sp, #24]
	enum sercom_asynchronous_operation_mode mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
    13fa:	2300      	movs	r3, #0
    13fc:	9307      	str	r3, [sp, #28]
    13fe:	e706      	b.n	120e <usart_init+0xde>
    1400:	00000fc5 	.word	0x00000fc5
    1404:	40000400 	.word	0x40000400
    1408:	00001669 	.word	0x00001669
    140c:	000015dd 	.word	0x000015dd
    1410:	00000e15 	.word	0x00000e15
    1414:	41002000 	.word	0x41002000
    1418:	00001761 	.word	0x00001761
    141c:	00001685 	.word	0x00001685
    1420:	00000d57 	.word	0x00000d57
    1424:	00000d81 	.word	0x00000d81
    1428:	00000e61 	.word	0x00000e61

0000142c <usart_write_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the transmitter is enabled */
	if (!(module->transmitter_enabled)) {
    142c:	79c3      	ldrb	r3, [r0, #7]
		return STATUS_ERR_DENIED;
    142e:	221c      	movs	r2, #28
	if (!(module->transmitter_enabled)) {
    1430:	2b00      	cmp	r3, #0
    1432:	d101      	bne.n	1438 <usart_write_wait+0xc>
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
		/* Wait until data is sent */
	}

	return STATUS_OK;
}
    1434:	0010      	movs	r0, r2
    1436:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
    1438:	6803      	ldr	r3, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
    143a:	7e18      	ldrb	r0, [r3, #24]
		return STATUS_BUSY;
    143c:	3a17      	subs	r2, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
    143e:	07c0      	lsls	r0, r0, #31
    1440:	d5f8      	bpl.n	1434 <usart_write_wait+0x8>
	return (usart_hw->SYNCBUSY.reg);
    1442:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    1444:	2a00      	cmp	r2, #0
    1446:	d1fc      	bne.n	1442 <usart_write_wait+0x16>
	usart_hw->DATA.reg = tx_data;
    1448:	8519      	strh	r1, [r3, #40]	; 0x28
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
    144a:	2102      	movs	r1, #2
    144c:	7e1a      	ldrb	r2, [r3, #24]
    144e:	420a      	tst	r2, r1
    1450:	d0fc      	beq.n	144c <usart_write_wait+0x20>
	return STATUS_OK;
    1452:	2200      	movs	r2, #0
    1454:	e7ee      	b.n	1434 <usart_write_wait+0x8>

00001456 <usart_read_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the receiver is enabled */
	if (!(module->receiver_enabled)) {
    1456:	7982      	ldrb	r2, [r0, #6]
		return STATUS_ERR_DENIED;
    1458:	231c      	movs	r3, #28
	if (!(module->receiver_enabled)) {
    145a:	2a00      	cmp	r2, #0
    145c:	d101      	bne.n	1462 <usart_read_wait+0xc>

	/* Read data from USART module */
	*rx_data = usart_hw->DATA.reg;

	return STATUS_OK;
}
    145e:	0018      	movs	r0, r3
    1460:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
    1462:	6802      	ldr	r2, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
    1464:	7e10      	ldrb	r0, [r2, #24]
		return STATUS_BUSY;
    1466:	3b17      	subs	r3, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
    1468:	0740      	lsls	r0, r0, #29
    146a:	d5f8      	bpl.n	145e <usart_read_wait+0x8>
	return (usart_hw->SYNCBUSY.reg);
    146c:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    146e:	2b00      	cmp	r3, #0
    1470:	d1fc      	bne.n	146c <usart_read_wait+0x16>
	error_code = (uint8_t)(usart_hw->STATUS.reg & SERCOM_USART_STATUS_MASK);
    1472:	8b53      	ldrh	r3, [r2, #26]
    1474:	b2db      	uxtb	r3, r3
	if (error_code) {
    1476:	0698      	lsls	r0, r3, #26
    1478:	d01d      	beq.n	14b6 <usart_read_wait+0x60>
		if (error_code & SERCOM_USART_STATUS_FERR) {
    147a:	0798      	lsls	r0, r3, #30
    147c:	d503      	bpl.n	1486 <usart_read_wait+0x30>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_FERR;
    147e:	2302      	movs	r3, #2
    1480:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_FORMAT;
    1482:	3318      	adds	r3, #24
    1484:	e7eb      	b.n	145e <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_BUFOVF) {
    1486:	0758      	lsls	r0, r3, #29
    1488:	d503      	bpl.n	1492 <usart_read_wait+0x3c>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_BUFOVF;
    148a:	2304      	movs	r3, #4
    148c:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_OVERFLOW;
    148e:	331a      	adds	r3, #26
    1490:	e7e5      	b.n	145e <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_PERR) {
    1492:	07d8      	lsls	r0, r3, #31
    1494:	d503      	bpl.n	149e <usart_read_wait+0x48>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_PERR;
    1496:	2301      	movs	r3, #1
    1498:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_DATA;
    149a:	3312      	adds	r3, #18
    149c:	e7df      	b.n	145e <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_ISF) {
    149e:	06d8      	lsls	r0, r3, #27
    14a0:	d503      	bpl.n	14aa <usart_read_wait+0x54>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_ISF;
    14a2:	2310      	movs	r3, #16
    14a4:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PROTOCOL;
    14a6:	3332      	adds	r3, #50	; 0x32
    14a8:	e7d9      	b.n	145e <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_COLL) {
    14aa:	069b      	lsls	r3, r3, #26
    14ac:	d503      	bpl.n	14b6 <usart_read_wait+0x60>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_COLL;
    14ae:	2320      	movs	r3, #32
    14b0:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PACKET_COLLISION;
    14b2:	3321      	adds	r3, #33	; 0x21
    14b4:	e7d3      	b.n	145e <usart_read_wait+0x8>
	*rx_data = usart_hw->DATA.reg;
    14b6:	8d13      	ldrh	r3, [r2, #40]	; 0x28
    14b8:	800b      	strh	r3, [r1, #0]
	return STATUS_OK;
    14ba:	2300      	movs	r3, #0
    14bc:	e7cf      	b.n	145e <usart_read_wait+0x8>
	...

000014c0 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
    14c0:	b510      	push	{r4, lr}
	switch (clock_source) {
    14c2:	2808      	cmp	r0, #8
    14c4:	d803      	bhi.n	14ce <system_clock_source_get_hz+0xe>
    14c6:	0080      	lsls	r0, r0, #2
    14c8:	4b1b      	ldr	r3, [pc, #108]	; (1538 <system_clock_source_get_hz+0x78>)
    14ca:	581b      	ldr	r3, [r3, r0]
    14cc:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
    14ce:	2000      	movs	r0, #0
    14d0:	e030      	b.n	1534 <system_clock_source_get_hz+0x74>
		return _system_clock_inst.xosc.frequency;
    14d2:	4b1a      	ldr	r3, [pc, #104]	; (153c <system_clock_source_get_hz+0x7c>)
    14d4:	6918      	ldr	r0, [r3, #16]
    14d6:	e02d      	b.n	1534 <system_clock_source_get_hz+0x74>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
    14d8:	4b19      	ldr	r3, [pc, #100]	; (1540 <system_clock_source_get_hz+0x80>)
    14da:	6a1b      	ldr	r3, [r3, #32]
    14dc:	059b      	lsls	r3, r3, #22
    14de:	0f9b      	lsrs	r3, r3, #30
    14e0:	4818      	ldr	r0, [pc, #96]	; (1544 <system_clock_source_get_hz+0x84>)
    14e2:	40d8      	lsrs	r0, r3
    14e4:	e026      	b.n	1534 <system_clock_source_get_hz+0x74>
		return _system_clock_inst.xosc32k.frequency;
    14e6:	4b15      	ldr	r3, [pc, #84]	; (153c <system_clock_source_get_hz+0x7c>)
    14e8:	6958      	ldr	r0, [r3, #20]
    14ea:	e023      	b.n	1534 <system_clock_source_get_hz+0x74>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    14ec:	4b13      	ldr	r3, [pc, #76]	; (153c <system_clock_source_get_hz+0x7c>)
    14ee:	681b      	ldr	r3, [r3, #0]
			return 0;
    14f0:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    14f2:	079b      	lsls	r3, r3, #30
    14f4:	d51e      	bpl.n	1534 <system_clock_source_get_hz+0x74>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    14f6:	4912      	ldr	r1, [pc, #72]	; (1540 <system_clock_source_get_hz+0x80>)
    14f8:	2210      	movs	r2, #16
    14fa:	68cb      	ldr	r3, [r1, #12]
    14fc:	421a      	tst	r2, r3
    14fe:	d0fc      	beq.n	14fa <system_clock_source_get_hz+0x3a>
		if (_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_MODE) {
    1500:	4b0e      	ldr	r3, [pc, #56]	; (153c <system_clock_source_get_hz+0x7c>)
    1502:	681b      	ldr	r3, [r3, #0]
    1504:	075b      	lsls	r3, r3, #29
    1506:	d401      	bmi.n	150c <system_clock_source_get_hz+0x4c>
		return 48000000UL;
    1508:	480f      	ldr	r0, [pc, #60]	; (1548 <system_clock_source_get_hz+0x88>)
    150a:	e013      	b.n	1534 <system_clock_source_get_hz+0x74>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    150c:	2000      	movs	r0, #0
    150e:	4b0f      	ldr	r3, [pc, #60]	; (154c <system_clock_source_get_hz+0x8c>)
    1510:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
    1512:	4b0a      	ldr	r3, [pc, #40]	; (153c <system_clock_source_get_hz+0x7c>)
    1514:	689b      	ldr	r3, [r3, #8]
    1516:	041b      	lsls	r3, r3, #16
    1518:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    151a:	4358      	muls	r0, r3
    151c:	e00a      	b.n	1534 <system_clock_source_get_hz+0x74>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    151e:	2350      	movs	r3, #80	; 0x50
    1520:	4a07      	ldr	r2, [pc, #28]	; (1540 <system_clock_source_get_hz+0x80>)
    1522:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
    1524:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    1526:	075b      	lsls	r3, r3, #29
    1528:	d504      	bpl.n	1534 <system_clock_source_get_hz+0x74>
		return _system_clock_inst.dpll.frequency;
    152a:	4b04      	ldr	r3, [pc, #16]	; (153c <system_clock_source_get_hz+0x7c>)
    152c:	68d8      	ldr	r0, [r3, #12]
    152e:	e001      	b.n	1534 <system_clock_source_get_hz+0x74>
		return 32768UL;
    1530:	2080      	movs	r0, #128	; 0x80
    1532:	0200      	lsls	r0, r0, #8
	}
}
    1534:	bd10      	pop	{r4, pc}
    1536:	46c0      	nop			; (mov r8, r8)
    1538:	0000656c 	.word	0x0000656c
    153c:	20000278 	.word	0x20000278
    1540:	40000800 	.word	0x40000800
    1544:	007a1200 	.word	0x007a1200
    1548:	02dc6c00 	.word	0x02dc6c00
    154c:	00001685 	.word	0x00001685

00001550 <system_gclk_gen_get_hz>:
 *
 * \return The frequency of the generic clock generator, in Hz.
 */
uint32_t system_gclk_gen_get_hz(
		const uint8_t generator)
{
    1550:	b570      	push	{r4, r5, r6, lr}
    1552:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    1554:	4a1a      	ldr	r2, [pc, #104]	; (15c0 <system_gclk_gen_get_hz+0x70>)
    1556:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    1558:	b25b      	sxtb	r3, r3
    155a:	2b00      	cmp	r3, #0
    155c:	dbfb      	blt.n	1556 <system_gclk_gen_get_hz+0x6>
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_enter_critical_section(void)
{
	cpu_irq_enter_critical();
    155e:	4b19      	ldr	r3, [pc, #100]	; (15c4 <system_gclk_gen_get_hz+0x74>)
    1560:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the appropriate generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    1562:	4b19      	ldr	r3, [pc, #100]	; (15c8 <system_gclk_gen_get_hz+0x78>)
    1564:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    1566:	4a16      	ldr	r2, [pc, #88]	; (15c0 <system_gclk_gen_get_hz+0x70>)
    1568:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    156a:	b25b      	sxtb	r3, r3
    156c:	2b00      	cmp	r3, #0
    156e:	dbfb      	blt.n	1568 <system_gclk_gen_get_hz+0x18>
		/* Wait for synchronization */
	};

	/* Get the frequency of the source connected to the GCLK generator */
	uint32_t gen_input_hz = system_clock_source_get_hz(
			(enum system_clock_source)GCLK->GENCTRL.bit.SRC);
    1570:	4e13      	ldr	r6, [pc, #76]	; (15c0 <system_gclk_gen_get_hz+0x70>)
    1572:	6870      	ldr	r0, [r6, #4]
    1574:	04c0      	lsls	r0, r0, #19
    1576:	0ec0      	lsrs	r0, r0, #27
	uint32_t gen_input_hz = system_clock_source_get_hz(
    1578:	4b14      	ldr	r3, [pc, #80]	; (15cc <system_gclk_gen_get_hz+0x7c>)
    157a:	4798      	blx	r3
    157c:	0005      	movs	r5, r0

	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    157e:	4b12      	ldr	r3, [pc, #72]	; (15c8 <system_gclk_gen_get_hz+0x78>)
    1580:	701c      	strb	r4, [r3, #0]

	uint8_t divsel = GCLK->GENCTRL.bit.DIVSEL;
    1582:	6876      	ldr	r6, [r6, #4]
    1584:	02f6      	lsls	r6, r6, #11
    1586:	0ff6      	lsrs	r6, r6, #31

	/* Select the appropriate generator division register */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    1588:	4b11      	ldr	r3, [pc, #68]	; (15d0 <system_gclk_gen_get_hz+0x80>)
    158a:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    158c:	4a0c      	ldr	r2, [pc, #48]	; (15c0 <system_gclk_gen_get_hz+0x70>)
    158e:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    1590:	b25b      	sxtb	r3, r3
    1592:	2b00      	cmp	r3, #0
    1594:	dbfb      	blt.n	158e <system_gclk_gen_get_hz+0x3e>
		/* Wait for synchronization */
	};

	uint32_t divider = GCLK->GENDIV.bit.DIV;
    1596:	4b0a      	ldr	r3, [pc, #40]	; (15c0 <system_gclk_gen_get_hz+0x70>)
    1598:	689c      	ldr	r4, [r3, #8]
    159a:	0224      	lsls	r4, r4, #8
    159c:	0c24      	lsrs	r4, r4, #16
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_leave_critical_section(void)
{
	cpu_irq_leave_critical();
    159e:	4b0d      	ldr	r3, [pc, #52]	; (15d4 <system_gclk_gen_get_hz+0x84>)
    15a0:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Check if the generator is using fractional or binary division */
	if (!divsel && divider > 1) {
    15a2:	2e00      	cmp	r6, #0
    15a4:	d107      	bne.n	15b6 <system_gclk_gen_get_hz+0x66>
    15a6:	2c01      	cmp	r4, #1
    15a8:	d907      	bls.n	15ba <system_gclk_gen_get_hz+0x6a>
		gen_input_hz /= divider;
    15aa:	0021      	movs	r1, r4
    15ac:	0028      	movs	r0, r5
    15ae:	4b0a      	ldr	r3, [pc, #40]	; (15d8 <system_gclk_gen_get_hz+0x88>)
    15b0:	4798      	blx	r3
    15b2:	0005      	movs	r5, r0
    15b4:	e001      	b.n	15ba <system_gclk_gen_get_hz+0x6a>
	} else if (divsel) {
		gen_input_hz >>= (divider+1);
    15b6:	3401      	adds	r4, #1
    15b8:	40e5      	lsrs	r5, r4
	}

	return gen_input_hz;
}
    15ba:	0028      	movs	r0, r5
    15bc:	bd70      	pop	{r4, r5, r6, pc}
    15be:	46c0      	nop			; (mov r8, r8)
    15c0:	40000c00 	.word	0x40000c00
    15c4:	00001069 	.word	0x00001069
    15c8:	40000c04 	.word	0x40000c04
    15cc:	000014c1 	.word	0x000014c1
    15d0:	40000c08 	.word	0x40000c08
    15d4:	000010a9 	.word	0x000010a9
    15d8:	00004359 	.word	0x00004359

000015dc <system_gclk_chan_enable>:
 *
 * \param[in] channel   Generic Clock channel to enable
 */
void system_gclk_chan_enable(
		const uint8_t channel)
{
    15dc:	b510      	push	{r4, lr}
    15de:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    15e0:	4b06      	ldr	r3, [pc, #24]	; (15fc <system_gclk_chan_enable+0x20>)
    15e2:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    15e4:	4b06      	ldr	r3, [pc, #24]	; (1600 <system_gclk_chan_enable+0x24>)
    15e6:	701c      	strb	r4, [r3, #0]

	/* Enable the generic clock */
	GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_CLKEN;
    15e8:	4a06      	ldr	r2, [pc, #24]	; (1604 <system_gclk_chan_enable+0x28>)
    15ea:	8853      	ldrh	r3, [r2, #2]
    15ec:	2180      	movs	r1, #128	; 0x80
    15ee:	01c9      	lsls	r1, r1, #7
    15f0:	430b      	orrs	r3, r1
    15f2:	8053      	strh	r3, [r2, #2]
	cpu_irq_leave_critical();
    15f4:	4b04      	ldr	r3, [pc, #16]	; (1608 <system_gclk_chan_enable+0x2c>)
    15f6:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    15f8:	bd10      	pop	{r4, pc}
    15fa:	46c0      	nop			; (mov r8, r8)
    15fc:	00001069 	.word	0x00001069
    1600:	40000c02 	.word	0x40000c02
    1604:	40000c00 	.word	0x40000c00
    1608:	000010a9 	.word	0x000010a9

0000160c <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
    160c:	b510      	push	{r4, lr}
    160e:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1610:	4b0f      	ldr	r3, [pc, #60]	; (1650 <system_gclk_chan_disable+0x44>)
    1612:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    1614:	4b0f      	ldr	r3, [pc, #60]	; (1654 <system_gclk_chan_disable+0x48>)
    1616:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
    1618:	4a0f      	ldr	r2, [pc, #60]	; (1658 <system_gclk_chan_disable+0x4c>)
    161a:	8853      	ldrh	r3, [r2, #2]
    161c:	051b      	lsls	r3, r3, #20
    161e:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
    1620:	8853      	ldrh	r3, [r2, #2]
    1622:	490e      	ldr	r1, [pc, #56]	; (165c <system_gclk_chan_disable+0x50>)
    1624:	400b      	ands	r3, r1
    1626:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
    1628:	8853      	ldrh	r3, [r2, #2]
    162a:	490d      	ldr	r1, [pc, #52]	; (1660 <system_gclk_chan_disable+0x54>)
    162c:	400b      	ands	r3, r1
    162e:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    1630:	0011      	movs	r1, r2
    1632:	2280      	movs	r2, #128	; 0x80
    1634:	01d2      	lsls	r2, r2, #7
    1636:	884b      	ldrh	r3, [r1, #2]
    1638:	4213      	tst	r3, r2
    163a:	d1fc      	bne.n	1636 <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    163c:	4906      	ldr	r1, [pc, #24]	; (1658 <system_gclk_chan_disable+0x4c>)
    163e:	884a      	ldrh	r2, [r1, #2]
    1640:	0203      	lsls	r3, r0, #8
    1642:	4806      	ldr	r0, [pc, #24]	; (165c <system_gclk_chan_disable+0x50>)
    1644:	4002      	ands	r2, r0
    1646:	4313      	orrs	r3, r2
    1648:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
    164a:	4b06      	ldr	r3, [pc, #24]	; (1664 <system_gclk_chan_disable+0x58>)
    164c:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    164e:	bd10      	pop	{r4, pc}
    1650:	00001069 	.word	0x00001069
    1654:	40000c02 	.word	0x40000c02
    1658:	40000c00 	.word	0x40000c00
    165c:	fffff0ff 	.word	0xfffff0ff
    1660:	ffffbfff 	.word	0xffffbfff
    1664:	000010a9 	.word	0x000010a9

00001668 <system_gclk_chan_set_config>:
{
    1668:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    166a:	780c      	ldrb	r4, [r1, #0]
    166c:	0224      	lsls	r4, r4, #8
    166e:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
    1670:	4b02      	ldr	r3, [pc, #8]	; (167c <system_gclk_chan_set_config+0x14>)
    1672:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    1674:	b2a4      	uxth	r4, r4
    1676:	4b02      	ldr	r3, [pc, #8]	; (1680 <system_gclk_chan_set_config+0x18>)
    1678:	805c      	strh	r4, [r3, #2]
}
    167a:	bd10      	pop	{r4, pc}
    167c:	0000160d 	.word	0x0000160d
    1680:	40000c00 	.word	0x40000c00

00001684 <system_gclk_chan_get_hz>:
 *
 * \return The frequency of the generic clock channel, in Hz.
 */
uint32_t system_gclk_chan_get_hz(
		const uint8_t channel)
{
    1684:	b510      	push	{r4, lr}
    1686:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1688:	4b06      	ldr	r3, [pc, #24]	; (16a4 <system_gclk_chan_get_hz+0x20>)
    168a:	4798      	blx	r3
	uint8_t gen_id;

	system_interrupt_enter_critical_section();

	/* Select the requested generic clock channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    168c:	4b06      	ldr	r3, [pc, #24]	; (16a8 <system_gclk_chan_get_hz+0x24>)
    168e:	701c      	strb	r4, [r3, #0]
	gen_id = GCLK->CLKCTRL.bit.GEN;
    1690:	4b06      	ldr	r3, [pc, #24]	; (16ac <system_gclk_chan_get_hz+0x28>)
    1692:	885c      	ldrh	r4, [r3, #2]
    1694:	0524      	lsls	r4, r4, #20
    1696:	0f24      	lsrs	r4, r4, #28
	cpu_irq_leave_critical();
    1698:	4b05      	ldr	r3, [pc, #20]	; (16b0 <system_gclk_chan_get_hz+0x2c>)
    169a:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Return the clock speed of the associated GCLK generator */
	return system_gclk_gen_get_hz(gen_id);
    169c:	0020      	movs	r0, r4
    169e:	4b05      	ldr	r3, [pc, #20]	; (16b4 <system_gclk_chan_get_hz+0x30>)
    16a0:	4798      	blx	r3
}
    16a2:	bd10      	pop	{r4, pc}
    16a4:	00001069 	.word	0x00001069
    16a8:	40000c02 	.word	0x40000c02
    16ac:	40000c00 	.word	0x40000c00
    16b0:	000010a9 	.word	0x000010a9
    16b4:	00001551 	.word	0x00001551

000016b8 <_system_pinmux_config>:
 */
static void _system_pinmux_config(
		PortGroup *const port,
		const uint32_t pin_mask,
		const struct system_pinmux_config *const config)
{
    16b8:	b530      	push	{r4, r5, lr}

	/* Track the configuration bits into a temporary variable before writing */
	uint32_t pin_cfg = 0;

	/* Enabled powersave mode, don't create configuration */
	if (!config->powersave) {
    16ba:	78d3      	ldrb	r3, [r2, #3]
    16bc:	2b00      	cmp	r3, #0
    16be:	d135      	bne.n	172c <_system_pinmux_config+0x74>
		/* Enable the pin peripheral MUX flag if non-GPIO selected (pinmux will
		 * be written later) and store the new MUX mask */
		if (config->mux_position != SYSTEM_PINMUX_GPIO) {
    16c0:	7813      	ldrb	r3, [r2, #0]
    16c2:	2b80      	cmp	r3, #128	; 0x80
    16c4:	d029      	beq.n	171a <_system_pinmux_config+0x62>
			pin_cfg |= PORT_WRCONFIG_PMUXEN;
			pin_cfg |= (config->mux_position << PORT_WRCONFIG_PMUX_Pos);
    16c6:	061b      	lsls	r3, r3, #24
    16c8:	2480      	movs	r4, #128	; 0x80
    16ca:	0264      	lsls	r4, r4, #9
    16cc:	4323      	orrs	r3, r4
		}

		/* Check if the user has requested that the input buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_INPUT) ||
    16ce:	7854      	ldrb	r4, [r2, #1]
    16d0:	2502      	movs	r5, #2
    16d2:	43ac      	bics	r4, r5
    16d4:	d106      	bne.n	16e4 <_system_pinmux_config+0x2c>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Enable input buffer flag */
			pin_cfg |= PORT_WRCONFIG_INEN;

			/* Enable pull-up/pull-down control flag if requested */
			if (config->input_pull != SYSTEM_PINMUX_PIN_PULL_NONE) {
    16d6:	7894      	ldrb	r4, [r2, #2]
    16d8:	2c00      	cmp	r4, #0
    16da:	d120      	bne.n	171e <_system_pinmux_config+0x66>
			pin_cfg |= PORT_WRCONFIG_INEN;
    16dc:	2480      	movs	r4, #128	; 0x80
    16de:	02a4      	lsls	r4, r4, #10
    16e0:	4323      	orrs	r3, r4
				pin_cfg |= PORT_WRCONFIG_PULLEN;
			}

			/* Clear the port DIR bits to disable the output buffer */
			port->DIRCLR.reg = pin_mask;
    16e2:	6041      	str	r1, [r0, #4]
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    16e4:	7854      	ldrb	r4, [r2, #1]
    16e6:	3c01      	subs	r4, #1
    16e8:	2c01      	cmp	r4, #1
    16ea:	d91c      	bls.n	1726 <_system_pinmux_config+0x6e>
		port->DIRCLR.reg = pin_mask;
	}

	/* The Write Configuration register (WRCONFIG) requires the
	 * pins to to grouped into two 16-bit half-words - split them out here */
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    16ec:	040d      	lsls	r5, r1, #16
    16ee:	0c2d      	lsrs	r5, r5, #16

	/* Configure the lower 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    16f0:	24a0      	movs	r4, #160	; 0xa0
    16f2:	05e4      	lsls	r4, r4, #23
    16f4:	432c      	orrs	r4, r5
    16f6:	431c      	orrs	r4, r3
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    16f8:	6284      	str	r4, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    16fa:	0c0d      	lsrs	r5, r1, #16

	/* Configure the upper 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    16fc:	24d0      	movs	r4, #208	; 0xd0
    16fe:	0624      	lsls	r4, r4, #24
    1700:	432c      	orrs	r4, r5
    1702:	431c      	orrs	r4, r3
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1704:	6284      	str	r4, [r0, #40]	; 0x28
			PORT_WRCONFIG_HWSEL;

	if(!config->powersave) {
    1706:	78d4      	ldrb	r4, [r2, #3]
    1708:	2c00      	cmp	r4, #0
    170a:	d122      	bne.n	1752 <_system_pinmux_config+0x9a>
		/* Set the pull-up state once the port pins are configured if one was
		 * requested and it does not violate the valid set of port
		 * configurations */
		if (pin_cfg & PORT_WRCONFIG_PULLEN) {
    170c:	035b      	lsls	r3, r3, #13
    170e:	d51c      	bpl.n	174a <_system_pinmux_config+0x92>
			/* Set the OUT register bits to enable the pull-up if requested,
			 * clear to enable pull-down */
			if (config->input_pull == SYSTEM_PINMUX_PIN_PULL_UP) {
    1710:	7893      	ldrb	r3, [r2, #2]
    1712:	2b01      	cmp	r3, #1
    1714:	d01e      	beq.n	1754 <_system_pinmux_config+0x9c>
				port->OUTSET.reg = pin_mask;
			} else {
				port->OUTCLR.reg = pin_mask;
    1716:	6141      	str	r1, [r0, #20]
    1718:	e017      	b.n	174a <_system_pinmux_config+0x92>
	uint32_t pin_cfg = 0;
    171a:	2300      	movs	r3, #0
    171c:	e7d7      	b.n	16ce <_system_pinmux_config+0x16>
				pin_cfg |= PORT_WRCONFIG_PULLEN;
    171e:	24c0      	movs	r4, #192	; 0xc0
    1720:	02e4      	lsls	r4, r4, #11
    1722:	4323      	orrs	r3, r4
    1724:	e7dd      	b.n	16e2 <_system_pinmux_config+0x2a>
			pin_cfg &= ~PORT_WRCONFIG_PULLEN;
    1726:	4c0d      	ldr	r4, [pc, #52]	; (175c <_system_pinmux_config+0xa4>)
    1728:	4023      	ands	r3, r4
    172a:	e7df      	b.n	16ec <_system_pinmux_config+0x34>
		port->DIRCLR.reg = pin_mask;
    172c:	6041      	str	r1, [r0, #4]
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    172e:	040c      	lsls	r4, r1, #16
    1730:	0c24      	lsrs	r4, r4, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1732:	23a0      	movs	r3, #160	; 0xa0
    1734:	05db      	lsls	r3, r3, #23
    1736:	4323      	orrs	r3, r4
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1738:	6283      	str	r3, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    173a:	0c0c      	lsrs	r4, r1, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    173c:	23d0      	movs	r3, #208	; 0xd0
    173e:	061b      	lsls	r3, r3, #24
    1740:	4323      	orrs	r3, r4
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1742:	6283      	str	r3, [r0, #40]	; 0x28
	if(!config->powersave) {
    1744:	78d3      	ldrb	r3, [r2, #3]
    1746:	2b00      	cmp	r3, #0
    1748:	d103      	bne.n	1752 <_system_pinmux_config+0x9a>
			}
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    174a:	7853      	ldrb	r3, [r2, #1]
    174c:	3b01      	subs	r3, #1
    174e:	2b01      	cmp	r3, #1
    1750:	d902      	bls.n	1758 <_system_pinmux_config+0xa0>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Set the port DIR bits to enable the output buffer */
			port->DIRSET.reg = pin_mask;
		}
	}
}
    1752:	bd30      	pop	{r4, r5, pc}
				port->OUTSET.reg = pin_mask;
    1754:	6181      	str	r1, [r0, #24]
    1756:	e7f8      	b.n	174a <_system_pinmux_config+0x92>
			port->DIRSET.reg = pin_mask;
    1758:	6081      	str	r1, [r0, #8]
}
    175a:	e7fa      	b.n	1752 <_system_pinmux_config+0x9a>
    175c:	fffbffff 	.word	0xfffbffff

00001760 <system_pinmux_pin_set_config>:
 * \param[in] config    Configuration settings for the pin
 */
void system_pinmux_pin_set_config(
		const uint8_t gpio_pin,
		const struct system_pinmux_config *const config)
{
    1760:	b510      	push	{r4, lr}
    1762:	000a      	movs	r2, r1
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    1764:	09c1      	lsrs	r1, r0, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    1766:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
    1768:	2900      	cmp	r1, #0
    176a:	d104      	bne.n	1776 <system_pinmux_pin_set_config+0x16>
		return &(ports[port_index]->Group[group_index]);
    176c:	0943      	lsrs	r3, r0, #5
    176e:	01db      	lsls	r3, r3, #7
    1770:	4905      	ldr	r1, [pc, #20]	; (1788 <system_pinmux_pin_set_config+0x28>)
    1772:	468c      	mov	ip, r1
    1774:	4463      	add	r3, ip
	PortGroup *const port = system_pinmux_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask = (1UL << (gpio_pin % 32));
    1776:	241f      	movs	r4, #31
    1778:	4020      	ands	r0, r4
    177a:	2101      	movs	r1, #1
    177c:	4081      	lsls	r1, r0

	_system_pinmux_config(port, pin_mask, config);
    177e:	0018      	movs	r0, r3
    1780:	4b02      	ldr	r3, [pc, #8]	; (178c <system_pinmux_pin_set_config+0x2c>)
    1782:	4798      	blx	r3
}
    1784:	bd10      	pop	{r4, pc}
    1786:	46c0      	nop			; (mov r8, r8)
    1788:	41004400 	.word	0x41004400
    178c:	000016b9 	.word	0x000016b9

00001790 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    1790:	e7fe      	b.n	1790 <Dummy_Handler>
	...

00001794 <Reset_Handler>:
{
    1794:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
    1796:	4a26      	ldr	r2, [pc, #152]	; (1830 <Reset_Handler+0x9c>)
    1798:	4b26      	ldr	r3, [pc, #152]	; (1834 <Reset_Handler+0xa0>)
    179a:	429a      	cmp	r2, r3
    179c:	d011      	beq.n	17c2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
    179e:	001a      	movs	r2, r3
    17a0:	4b25      	ldr	r3, [pc, #148]	; (1838 <Reset_Handler+0xa4>)
    17a2:	429a      	cmp	r2, r3
    17a4:	d20d      	bcs.n	17c2 <Reset_Handler+0x2e>
    17a6:	4a25      	ldr	r2, [pc, #148]	; (183c <Reset_Handler+0xa8>)
    17a8:	3303      	adds	r3, #3
    17aa:	1a9b      	subs	r3, r3, r2
    17ac:	089b      	lsrs	r3, r3, #2
    17ae:	3301      	adds	r3, #1
    17b0:	009b      	lsls	r3, r3, #2
    17b2:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
    17b4:	481f      	ldr	r0, [pc, #124]	; (1834 <Reset_Handler+0xa0>)
    17b6:	491e      	ldr	r1, [pc, #120]	; (1830 <Reset_Handler+0x9c>)
    17b8:	588c      	ldr	r4, [r1, r2]
    17ba:	5084      	str	r4, [r0, r2]
    17bc:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    17be:	429a      	cmp	r2, r3
    17c0:	d1fa      	bne.n	17b8 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
    17c2:	4a1f      	ldr	r2, [pc, #124]	; (1840 <Reset_Handler+0xac>)
    17c4:	4b1f      	ldr	r3, [pc, #124]	; (1844 <Reset_Handler+0xb0>)
    17c6:	429a      	cmp	r2, r3
    17c8:	d20a      	bcs.n	17e0 <Reset_Handler+0x4c>
    17ca:	43d3      	mvns	r3, r2
    17cc:	491d      	ldr	r1, [pc, #116]	; (1844 <Reset_Handler+0xb0>)
    17ce:	185b      	adds	r3, r3, r1
    17d0:	2103      	movs	r1, #3
    17d2:	438b      	bics	r3, r1
    17d4:	3304      	adds	r3, #4
    17d6:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
    17d8:	2100      	movs	r1, #0
    17da:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
    17dc:	4293      	cmp	r3, r2
    17de:	d1fc      	bne.n	17da <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    17e0:	4a19      	ldr	r2, [pc, #100]	; (1848 <Reset_Handler+0xb4>)
    17e2:	21ff      	movs	r1, #255	; 0xff
    17e4:	4b19      	ldr	r3, [pc, #100]	; (184c <Reset_Handler+0xb8>)
    17e6:	438b      	bics	r3, r1
    17e8:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    17ea:	39fd      	subs	r1, #253	; 0xfd
    17ec:	2390      	movs	r3, #144	; 0x90
    17ee:	005b      	lsls	r3, r3, #1
    17f0:	4a17      	ldr	r2, [pc, #92]	; (1850 <Reset_Handler+0xbc>)
    17f2:	50d1      	str	r1, [r2, r3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    17f4:	4b17      	ldr	r3, [pc, #92]	; (1854 <Reset_Handler+0xc0>)
    17f6:	7b9a      	ldrb	r2, [r3, #14]
    17f8:	312e      	adds	r1, #46	; 0x2e
    17fa:	438a      	bics	r2, r1
    17fc:	2120      	movs	r1, #32
    17fe:	430a      	orrs	r2, r1
    1800:	739a      	strb	r2, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    1802:	7b9a      	ldrb	r2, [r3, #14]
    1804:	210c      	movs	r1, #12
    1806:	438a      	bics	r2, r1
    1808:	2108      	movs	r1, #8
    180a:	430a      	orrs	r2, r1
    180c:	739a      	strb	r2, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    180e:	7b9a      	ldrb	r2, [r3, #14]
    1810:	2103      	movs	r1, #3
    1812:	438a      	bics	r2, r1
    1814:	2102      	movs	r1, #2
    1816:	430a      	orrs	r2, r1
    1818:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    181a:	4a0f      	ldr	r2, [pc, #60]	; (1858 <Reset_Handler+0xc4>)
    181c:	6853      	ldr	r3, [r2, #4]
    181e:	2180      	movs	r1, #128	; 0x80
    1820:	430b      	orrs	r3, r1
    1822:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    1824:	4b0d      	ldr	r3, [pc, #52]	; (185c <Reset_Handler+0xc8>)
    1826:	4798      	blx	r3
        main();
    1828:	4b0d      	ldr	r3, [pc, #52]	; (1860 <Reset_Handler+0xcc>)
    182a:	4798      	blx	r3
    182c:	e7fe      	b.n	182c <Reset_Handler+0x98>
    182e:	46c0      	nop			; (mov r8, r8)
    1830:	000068f4 	.word	0x000068f4
    1834:	20000000 	.word	0x20000000
    1838:	200001e8 	.word	0x200001e8
    183c:	20000004 	.word	0x20000004
    1840:	200001e8 	.word	0x200001e8
    1844:	200002ac 	.word	0x200002ac
    1848:	e000ed00 	.word	0xe000ed00
    184c:	00000000 	.word	0x00000000
    1850:	41007000 	.word	0x41007000
    1854:	41004800 	.word	0x41004800
    1858:	41004000 	.word	0x41004000
    185c:	00001945 	.word	0x00001945
    1860:	0000057d 	.word	0x0000057d

00001864 <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
	// Keep the default device state after reset
	SystemCoreClock = __SYSTEM_CLOCK;
    1864:	4a01      	ldr	r2, [pc, #4]	; (186c <SystemInit+0x8>)
    1866:	4b02      	ldr	r3, [pc, #8]	; (1870 <SystemInit+0xc>)
    1868:	601a      	str	r2, [r3, #0]
	return;
}
    186a:	4770      	bx	lr
    186c:	000f4240 	.word	0x000f4240
    1870:	20000014 	.word	0x20000014

00001874 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
    1874:	b5f0      	push	{r4, r5, r6, r7, lr}
    1876:	46c6      	mov	lr, r8
    1878:	b500      	push	{lr}
    187a:	000c      	movs	r4, r1
    187c:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
    187e:	2800      	cmp	r0, #0
    1880:	d10f      	bne.n	18a2 <_read+0x2e>
		return -1;
	}

	for (; len > 0; --len) {
    1882:	2a00      	cmp	r2, #0
    1884:	dd11      	ble.n	18aa <_read+0x36>
    1886:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
    1888:	4e09      	ldr	r6, [pc, #36]	; (18b0 <_read+0x3c>)
    188a:	4d0a      	ldr	r5, [pc, #40]	; (18b4 <_read+0x40>)
    188c:	6830      	ldr	r0, [r6, #0]
    188e:	0021      	movs	r1, r4
    1890:	682b      	ldr	r3, [r5, #0]
    1892:	4798      	blx	r3
		ptr++;
    1894:	3401      	adds	r4, #1
	for (; len > 0; --len) {
    1896:	42bc      	cmp	r4, r7
    1898:	d1f8      	bne.n	188c <_read+0x18>
		nChars++;
	}
	return nChars;
}
    189a:	4640      	mov	r0, r8
    189c:	bc04      	pop	{r2}
    189e:	4690      	mov	r8, r2
    18a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -1;
    18a2:	2301      	movs	r3, #1
    18a4:	425b      	negs	r3, r3
    18a6:	4698      	mov	r8, r3
    18a8:	e7f7      	b.n	189a <_read+0x26>
	for (; len > 0; --len) {
    18aa:	4680      	mov	r8, r0
    18ac:	e7f5      	b.n	189a <_read+0x26>
    18ae:	46c0      	nop			; (mov r8, r8)
    18b0:	200002a4 	.word	0x200002a4
    18b4:	2000029c 	.word	0x2000029c

000018b8 <_write>:
int __attribute__((weak))
_write (int file, char * ptr, int len);

int __attribute__((weak))
_write (int file, char * ptr, int len)
{
    18b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    18ba:	46c6      	mov	lr, r8
    18bc:	b500      	push	{lr}
    18be:	000e      	movs	r6, r1
    18c0:	0015      	movs	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
    18c2:	3801      	subs	r0, #1
    18c4:	2802      	cmp	r0, #2
    18c6:	d810      	bhi.n	18ea <_write+0x32>
		return -1;
	}

	for (; len != 0; --len) {
    18c8:	2a00      	cmp	r2, #0
    18ca:	d011      	beq.n	18f0 <_write+0x38>
    18cc:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
    18ce:	4b0c      	ldr	r3, [pc, #48]	; (1900 <_write+0x48>)
    18d0:	4698      	mov	r8, r3
    18d2:	4f0c      	ldr	r7, [pc, #48]	; (1904 <_write+0x4c>)
    18d4:	4643      	mov	r3, r8
    18d6:	6818      	ldr	r0, [r3, #0]
    18d8:	5d31      	ldrb	r1, [r6, r4]
    18da:	683b      	ldr	r3, [r7, #0]
    18dc:	4798      	blx	r3
    18de:	2800      	cmp	r0, #0
    18e0:	db08      	blt.n	18f4 <_write+0x3c>
			return -1;
		}
		++nChars;
    18e2:	3401      	adds	r4, #1
	for (; len != 0; --len) {
    18e4:	42a5      	cmp	r5, r4
    18e6:	d1f5      	bne.n	18d4 <_write+0x1c>
    18e8:	e006      	b.n	18f8 <_write+0x40>
		return -1;
    18ea:	2401      	movs	r4, #1
    18ec:	4264      	negs	r4, r4
    18ee:	e003      	b.n	18f8 <_write+0x40>
	for (; len != 0; --len) {
    18f0:	0014      	movs	r4, r2
    18f2:	e001      	b.n	18f8 <_write+0x40>
			return -1;
    18f4:	2401      	movs	r4, #1
    18f6:	4264      	negs	r4, r4
	}
	return nChars;
}
    18f8:	0020      	movs	r0, r4
    18fa:	bc04      	pop	{r2}
    18fc:	4690      	mov	r8, r2
    18fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1900:	200002a4 	.word	0x200002a4
    1904:	200002a0 	.word	0x200002a0

00001908 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    1908:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    190a:	4a06      	ldr	r2, [pc, #24]	; (1924 <_sbrk+0x1c>)
    190c:	6812      	ldr	r2, [r2, #0]
    190e:	2a00      	cmp	r2, #0
    1910:	d004      	beq.n	191c <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1912:	4a04      	ldr	r2, [pc, #16]	; (1924 <_sbrk+0x1c>)
    1914:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    1916:	18c3      	adds	r3, r0, r3
    1918:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    191a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    191c:	4902      	ldr	r1, [pc, #8]	; (1928 <_sbrk+0x20>)
    191e:	4a01      	ldr	r2, [pc, #4]	; (1924 <_sbrk+0x1c>)
    1920:	6011      	str	r1, [r2, #0]
    1922:	e7f6      	b.n	1912 <_sbrk+0xa>
    1924:	20000290 	.word	0x20000290
    1928:	20000ab0 	.word	0x20000ab0

0000192c <_close>:
}

extern int _close(int file)
{
	return -1;
}
    192c:	2001      	movs	r0, #1
    192e:	4240      	negs	r0, r0
    1930:	4770      	bx	lr

00001932 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
    1932:	2380      	movs	r3, #128	; 0x80
    1934:	019b      	lsls	r3, r3, #6
    1936:	604b      	str	r3, [r1, #4]

	return 0;
}
    1938:	2000      	movs	r0, #0
    193a:	4770      	bx	lr

0000193c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
    193c:	2001      	movs	r0, #1
    193e:	4770      	bx	lr

00001940 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
    1940:	2000      	movs	r0, #0
    1942:	4770      	bx	lr

00001944 <__libc_init_array>:
    1944:	b570      	push	{r4, r5, r6, lr}
    1946:	2600      	movs	r6, #0
    1948:	4d0c      	ldr	r5, [pc, #48]	; (197c <__libc_init_array+0x38>)
    194a:	4c0d      	ldr	r4, [pc, #52]	; (1980 <__libc_init_array+0x3c>)
    194c:	1b64      	subs	r4, r4, r5
    194e:	10a4      	asrs	r4, r4, #2
    1950:	42a6      	cmp	r6, r4
    1952:	d109      	bne.n	1968 <__libc_init_array+0x24>
    1954:	2600      	movs	r6, #0
    1956:	f004 ffbb 	bl	68d0 <_init>
    195a:	4d0a      	ldr	r5, [pc, #40]	; (1984 <__libc_init_array+0x40>)
    195c:	4c0a      	ldr	r4, [pc, #40]	; (1988 <__libc_init_array+0x44>)
    195e:	1b64      	subs	r4, r4, r5
    1960:	10a4      	asrs	r4, r4, #2
    1962:	42a6      	cmp	r6, r4
    1964:	d105      	bne.n	1972 <__libc_init_array+0x2e>
    1966:	bd70      	pop	{r4, r5, r6, pc}
    1968:	00b3      	lsls	r3, r6, #2
    196a:	58eb      	ldr	r3, [r5, r3]
    196c:	4798      	blx	r3
    196e:	3601      	adds	r6, #1
    1970:	e7ee      	b.n	1950 <__libc_init_array+0xc>
    1972:	00b3      	lsls	r3, r6, #2
    1974:	58eb      	ldr	r3, [r5, r3]
    1976:	4798      	blx	r3
    1978:	3601      	adds	r6, #1
    197a:	e7f2      	b.n	1962 <__libc_init_array+0x1e>
    197c:	000068dc 	.word	0x000068dc
    1980:	000068dc 	.word	0x000068dc
    1984:	000068dc 	.word	0x000068dc
    1988:	000068e4 	.word	0x000068e4

0000198c <memset>:
    198c:	0003      	movs	r3, r0
    198e:	1882      	adds	r2, r0, r2
    1990:	4293      	cmp	r3, r2
    1992:	d100      	bne.n	1996 <memset+0xa>
    1994:	4770      	bx	lr
    1996:	7019      	strb	r1, [r3, #0]
    1998:	3301      	adds	r3, #1
    199a:	e7f9      	b.n	1990 <memset+0x4>

0000199c <__cvt>:
    199c:	b5f0      	push	{r4, r5, r6, r7, lr}
    199e:	b08b      	sub	sp, #44	; 0x2c
    19a0:	0014      	movs	r4, r2
    19a2:	1e1d      	subs	r5, r3, #0
    19a4:	9912      	ldr	r1, [sp, #72]	; 0x48
    19a6:	da53      	bge.n	1a50 <__cvt+0xb4>
    19a8:	2480      	movs	r4, #128	; 0x80
    19aa:	0624      	lsls	r4, r4, #24
    19ac:	191b      	adds	r3, r3, r4
    19ae:	001d      	movs	r5, r3
    19b0:	0014      	movs	r4, r2
    19b2:	232d      	movs	r3, #45	; 0x2d
    19b4:	700b      	strb	r3, [r1, #0]
    19b6:	2320      	movs	r3, #32
    19b8:	9e14      	ldr	r6, [sp, #80]	; 0x50
    19ba:	2203      	movs	r2, #3
    19bc:	439e      	bics	r6, r3
    19be:	2e46      	cmp	r6, #70	; 0x46
    19c0:	d007      	beq.n	19d2 <__cvt+0x36>
    19c2:	0033      	movs	r3, r6
    19c4:	3b45      	subs	r3, #69	; 0x45
    19c6:	4259      	negs	r1, r3
    19c8:	414b      	adcs	r3, r1
    19ca:	9910      	ldr	r1, [sp, #64]	; 0x40
    19cc:	3a01      	subs	r2, #1
    19ce:	18cb      	adds	r3, r1, r3
    19d0:	9310      	str	r3, [sp, #64]	; 0x40
    19d2:	ab09      	add	r3, sp, #36	; 0x24
    19d4:	9304      	str	r3, [sp, #16]
    19d6:	ab08      	add	r3, sp, #32
    19d8:	9303      	str	r3, [sp, #12]
    19da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    19dc:	9200      	str	r2, [sp, #0]
    19de:	9302      	str	r3, [sp, #8]
    19e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    19e2:	0022      	movs	r2, r4
    19e4:	9301      	str	r3, [sp, #4]
    19e6:	002b      	movs	r3, r5
    19e8:	f000 feda 	bl	27a0 <_dtoa_r>
    19ec:	0007      	movs	r7, r0
    19ee:	2e47      	cmp	r6, #71	; 0x47
    19f0:	d102      	bne.n	19f8 <__cvt+0x5c>
    19f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    19f4:	07db      	lsls	r3, r3, #31
    19f6:	d524      	bpl.n	1a42 <__cvt+0xa6>
    19f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    19fa:	18fb      	adds	r3, r7, r3
    19fc:	9307      	str	r3, [sp, #28]
    19fe:	2e46      	cmp	r6, #70	; 0x46
    1a00:	d114      	bne.n	1a2c <__cvt+0x90>
    1a02:	783b      	ldrb	r3, [r7, #0]
    1a04:	2b30      	cmp	r3, #48	; 0x30
    1a06:	d10c      	bne.n	1a22 <__cvt+0x86>
    1a08:	2200      	movs	r2, #0
    1a0a:	2300      	movs	r3, #0
    1a0c:	0020      	movs	r0, r4
    1a0e:	0029      	movs	r1, r5
    1a10:	f002 fe28 	bl	4664 <__aeabi_dcmpeq>
    1a14:	2800      	cmp	r0, #0
    1a16:	d104      	bne.n	1a22 <__cvt+0x86>
    1a18:	2301      	movs	r3, #1
    1a1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    1a1c:	1a9b      	subs	r3, r3, r2
    1a1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    1a20:	6013      	str	r3, [r2, #0]
    1a22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1a24:	9a07      	ldr	r2, [sp, #28]
    1a26:	681b      	ldr	r3, [r3, #0]
    1a28:	18d3      	adds	r3, r2, r3
    1a2a:	9307      	str	r3, [sp, #28]
    1a2c:	2200      	movs	r2, #0
    1a2e:	2300      	movs	r3, #0
    1a30:	0020      	movs	r0, r4
    1a32:	0029      	movs	r1, r5
    1a34:	f002 fe16 	bl	4664 <__aeabi_dcmpeq>
    1a38:	2230      	movs	r2, #48	; 0x30
    1a3a:	2800      	cmp	r0, #0
    1a3c:	d00d      	beq.n	1a5a <__cvt+0xbe>
    1a3e:	9b07      	ldr	r3, [sp, #28]
    1a40:	9309      	str	r3, [sp, #36]	; 0x24
    1a42:	0038      	movs	r0, r7
    1a44:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1a46:	9a15      	ldr	r2, [sp, #84]	; 0x54
    1a48:	1bdb      	subs	r3, r3, r7
    1a4a:	6013      	str	r3, [r2, #0]
    1a4c:	b00b      	add	sp, #44	; 0x2c
    1a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1a50:	2300      	movs	r3, #0
    1a52:	e7af      	b.n	19b4 <__cvt+0x18>
    1a54:	1c59      	adds	r1, r3, #1
    1a56:	9109      	str	r1, [sp, #36]	; 0x24
    1a58:	701a      	strb	r2, [r3, #0]
    1a5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1a5c:	9907      	ldr	r1, [sp, #28]
    1a5e:	4299      	cmp	r1, r3
    1a60:	d8f8      	bhi.n	1a54 <__cvt+0xb8>
    1a62:	e7ee      	b.n	1a42 <__cvt+0xa6>

00001a64 <__exponent>:
    1a64:	b5f0      	push	{r4, r5, r6, r7, lr}
    1a66:	232b      	movs	r3, #43	; 0x2b
    1a68:	b085      	sub	sp, #20
    1a6a:	0007      	movs	r7, r0
    1a6c:	000c      	movs	r4, r1
    1a6e:	7002      	strb	r2, [r0, #0]
    1a70:	1c86      	adds	r6, r0, #2
    1a72:	2900      	cmp	r1, #0
    1a74:	da01      	bge.n	1a7a <__exponent+0x16>
    1a76:	232d      	movs	r3, #45	; 0x2d
    1a78:	424c      	negs	r4, r1
    1a7a:	707b      	strb	r3, [r7, #1]
    1a7c:	2c09      	cmp	r4, #9
    1a7e:	dd23      	ble.n	1ac8 <__exponent+0x64>
    1a80:	ab02      	add	r3, sp, #8
    1a82:	1ddd      	adds	r5, r3, #7
    1a84:	1e6b      	subs	r3, r5, #1
    1a86:	0020      	movs	r0, r4
    1a88:	210a      	movs	r1, #10
    1a8a:	9301      	str	r3, [sp, #4]
    1a8c:	f002 fdd4 	bl	4638 <__aeabi_idivmod>
    1a90:	1e6b      	subs	r3, r5, #1
    1a92:	3130      	adds	r1, #48	; 0x30
    1a94:	7019      	strb	r1, [r3, #0]
    1a96:	0020      	movs	r0, r4
    1a98:	210a      	movs	r1, #10
    1a9a:	f002 fce7 	bl	446c <__divsi3>
    1a9e:	0004      	movs	r4, r0
    1aa0:	2809      	cmp	r0, #9
    1aa2:	dc0a      	bgt.n	1aba <__exponent+0x56>
    1aa4:	3d02      	subs	r5, #2
    1aa6:	3430      	adds	r4, #48	; 0x30
    1aa8:	702c      	strb	r4, [r5, #0]
    1aaa:	ab02      	add	r3, sp, #8
    1aac:	3307      	adds	r3, #7
    1aae:	0030      	movs	r0, r6
    1ab0:	42ab      	cmp	r3, r5
    1ab2:	d804      	bhi.n	1abe <__exponent+0x5a>
    1ab4:	1bc0      	subs	r0, r0, r7
    1ab6:	b005      	add	sp, #20
    1ab8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1aba:	9d01      	ldr	r5, [sp, #4]
    1abc:	e7e2      	b.n	1a84 <__exponent+0x20>
    1abe:	782b      	ldrb	r3, [r5, #0]
    1ac0:	3501      	adds	r5, #1
    1ac2:	7033      	strb	r3, [r6, #0]
    1ac4:	3601      	adds	r6, #1
    1ac6:	e7f0      	b.n	1aaa <__exponent+0x46>
    1ac8:	2330      	movs	r3, #48	; 0x30
    1aca:	18e4      	adds	r4, r4, r3
    1acc:	7033      	strb	r3, [r6, #0]
    1ace:	1cb0      	adds	r0, r6, #2
    1ad0:	7074      	strb	r4, [r6, #1]
    1ad2:	e7ef      	b.n	1ab4 <__exponent+0x50>

00001ad4 <_printf_float>:
    1ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ad6:	b095      	sub	sp, #84	; 0x54
    1ad8:	000c      	movs	r4, r1
    1ada:	920a      	str	r2, [sp, #40]	; 0x28
    1adc:	930b      	str	r3, [sp, #44]	; 0x2c
    1ade:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    1ae0:	9009      	str	r0, [sp, #36]	; 0x24
    1ae2:	f001 fdd3 	bl	368c <_localeconv_r>
    1ae6:	6803      	ldr	r3, [r0, #0]
    1ae8:	0018      	movs	r0, r3
    1aea:	930d      	str	r3, [sp, #52]	; 0x34
    1aec:	f000 fd00 	bl	24f0 <strlen>
    1af0:	2300      	movs	r3, #0
    1af2:	9312      	str	r3, [sp, #72]	; 0x48
    1af4:	6823      	ldr	r3, [r4, #0]
    1af6:	900e      	str	r0, [sp, #56]	; 0x38
    1af8:	930c      	str	r3, [sp, #48]	; 0x30
    1afa:	990c      	ldr	r1, [sp, #48]	; 0x30
    1afc:	7e27      	ldrb	r7, [r4, #24]
    1afe:	682b      	ldr	r3, [r5, #0]
    1b00:	2207      	movs	r2, #7
    1b02:	05c9      	lsls	r1, r1, #23
    1b04:	d547      	bpl.n	1b96 <_printf_float+0xc2>
    1b06:	189b      	adds	r3, r3, r2
    1b08:	4393      	bics	r3, r2
    1b0a:	001a      	movs	r2, r3
    1b0c:	3208      	adds	r2, #8
    1b0e:	602a      	str	r2, [r5, #0]
    1b10:	681a      	ldr	r2, [r3, #0]
    1b12:	685b      	ldr	r3, [r3, #4]
    1b14:	64a2      	str	r2, [r4, #72]	; 0x48
    1b16:	64e3      	str	r3, [r4, #76]	; 0x4c
    1b18:	2201      	movs	r2, #1
    1b1a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
    1b1c:	6ca6      	ldr	r6, [r4, #72]	; 0x48
    1b1e:	006b      	lsls	r3, r5, #1
    1b20:	085b      	lsrs	r3, r3, #1
    1b22:	930f      	str	r3, [sp, #60]	; 0x3c
    1b24:	4252      	negs	r2, r2
    1b26:	4ba7      	ldr	r3, [pc, #668]	; (1dc4 <_printf_float+0x2f0>)
    1b28:	0030      	movs	r0, r6
    1b2a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    1b2c:	f004 fb1c 	bl	6168 <__aeabi_dcmpun>
    1b30:	2800      	cmp	r0, #0
    1b32:	d000      	beq.n	1b36 <_printf_float+0x62>
    1b34:	e206      	b.n	1f44 <_printf_float+0x470>
    1b36:	2201      	movs	r2, #1
    1b38:	4ba2      	ldr	r3, [pc, #648]	; (1dc4 <_printf_float+0x2f0>)
    1b3a:	4252      	negs	r2, r2
    1b3c:	0030      	movs	r0, r6
    1b3e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    1b40:	f002 fda0 	bl	4684 <__aeabi_dcmple>
    1b44:	2800      	cmp	r0, #0
    1b46:	d000      	beq.n	1b4a <_printf_float+0x76>
    1b48:	e1fc      	b.n	1f44 <_printf_float+0x470>
    1b4a:	2200      	movs	r2, #0
    1b4c:	2300      	movs	r3, #0
    1b4e:	0030      	movs	r0, r6
    1b50:	0029      	movs	r1, r5
    1b52:	f002 fd8d 	bl	4670 <__aeabi_dcmplt>
    1b56:	2800      	cmp	r0, #0
    1b58:	d003      	beq.n	1b62 <_printf_float+0x8e>
    1b5a:	0023      	movs	r3, r4
    1b5c:	222d      	movs	r2, #45	; 0x2d
    1b5e:	3343      	adds	r3, #67	; 0x43
    1b60:	701a      	strb	r2, [r3, #0]
    1b62:	4d99      	ldr	r5, [pc, #612]	; (1dc8 <_printf_float+0x2f4>)
    1b64:	2f47      	cmp	r7, #71	; 0x47
    1b66:	d800      	bhi.n	1b6a <_printf_float+0x96>
    1b68:	4d98      	ldr	r5, [pc, #608]	; (1dcc <_printf_float+0x2f8>)
    1b6a:	2303      	movs	r3, #3
    1b6c:	2600      	movs	r6, #0
    1b6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1b70:	6123      	str	r3, [r4, #16]
    1b72:	3301      	adds	r3, #1
    1b74:	439a      	bics	r2, r3
    1b76:	6022      	str	r2, [r4, #0]
    1b78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1b7a:	aa13      	add	r2, sp, #76	; 0x4c
    1b7c:	9300      	str	r3, [sp, #0]
    1b7e:	0021      	movs	r1, r4
    1b80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    1b82:	9809      	ldr	r0, [sp, #36]	; 0x24
    1b84:	f000 f9f2 	bl	1f6c <_printf_common>
    1b88:	1c43      	adds	r3, r0, #1
    1b8a:	d000      	beq.n	1b8e <_printf_float+0xba>
    1b8c:	e09c      	b.n	1cc8 <_printf_float+0x1f4>
    1b8e:	2001      	movs	r0, #1
    1b90:	4240      	negs	r0, r0
    1b92:	b015      	add	sp, #84	; 0x54
    1b94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1b96:	3307      	adds	r3, #7
    1b98:	e7b6      	b.n	1b08 <_printf_float+0x34>
    1b9a:	2380      	movs	r3, #128	; 0x80
    1b9c:	6862      	ldr	r2, [r4, #4]
    1b9e:	00db      	lsls	r3, r3, #3
    1ba0:	1c51      	adds	r1, r2, #1
    1ba2:	d145      	bne.n	1c30 <_printf_float+0x15c>
    1ba4:	3207      	adds	r2, #7
    1ba6:	6062      	str	r2, [r4, #4]
    1ba8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1baa:	2100      	movs	r1, #0
    1bac:	4313      	orrs	r3, r2
    1bae:	aa12      	add	r2, sp, #72	; 0x48
    1bb0:	9205      	str	r2, [sp, #20]
    1bb2:	aa11      	add	r2, sp, #68	; 0x44
    1bb4:	9203      	str	r2, [sp, #12]
    1bb6:	2223      	movs	r2, #35	; 0x23
    1bb8:	6023      	str	r3, [r4, #0]
    1bba:	9106      	str	r1, [sp, #24]
    1bbc:	9301      	str	r3, [sp, #4]
    1bbe:	a908      	add	r1, sp, #32
    1bc0:	6863      	ldr	r3, [r4, #4]
    1bc2:	1852      	adds	r2, r2, r1
    1bc4:	9202      	str	r2, [sp, #8]
    1bc6:	9300      	str	r3, [sp, #0]
    1bc8:	0032      	movs	r2, r6
    1bca:	002b      	movs	r3, r5
    1bcc:	9704      	str	r7, [sp, #16]
    1bce:	9809      	ldr	r0, [sp, #36]	; 0x24
    1bd0:	f7ff fee4 	bl	199c <__cvt>
    1bd4:	2320      	movs	r3, #32
    1bd6:	003a      	movs	r2, r7
    1bd8:	0005      	movs	r5, r0
    1bda:	439a      	bics	r2, r3
    1bdc:	2a47      	cmp	r2, #71	; 0x47
    1bde:	d107      	bne.n	1bf0 <_printf_float+0x11c>
    1be0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1be2:	1cda      	adds	r2, r3, #3
    1be4:	db02      	blt.n	1bec <_printf_float+0x118>
    1be6:	6862      	ldr	r2, [r4, #4]
    1be8:	4293      	cmp	r3, r2
    1bea:	dd5b      	ble.n	1ca4 <_printf_float+0x1d0>
    1bec:	3f02      	subs	r7, #2
    1bee:	b2ff      	uxtb	r7, r7
    1bf0:	9911      	ldr	r1, [sp, #68]	; 0x44
    1bf2:	2f65      	cmp	r7, #101	; 0x65
    1bf4:	d83b      	bhi.n	1c6e <_printf_float+0x19a>
    1bf6:	0020      	movs	r0, r4
    1bf8:	3901      	subs	r1, #1
    1bfa:	003a      	movs	r2, r7
    1bfc:	3050      	adds	r0, #80	; 0x50
    1bfe:	9111      	str	r1, [sp, #68]	; 0x44
    1c00:	f7ff ff30 	bl	1a64 <__exponent>
    1c04:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1c06:	0006      	movs	r6, r0
    1c08:	1883      	adds	r3, r0, r2
    1c0a:	6123      	str	r3, [r4, #16]
    1c0c:	2a01      	cmp	r2, #1
    1c0e:	dc02      	bgt.n	1c16 <_printf_float+0x142>
    1c10:	6822      	ldr	r2, [r4, #0]
    1c12:	07d2      	lsls	r2, r2, #31
    1c14:	d501      	bpl.n	1c1a <_printf_float+0x146>
    1c16:	3301      	adds	r3, #1
    1c18:	6123      	str	r3, [r4, #16]
    1c1a:	2323      	movs	r3, #35	; 0x23
    1c1c:	aa08      	add	r2, sp, #32
    1c1e:	189b      	adds	r3, r3, r2
    1c20:	781b      	ldrb	r3, [r3, #0]
    1c22:	2b00      	cmp	r3, #0
    1c24:	d0a8      	beq.n	1b78 <_printf_float+0xa4>
    1c26:	0023      	movs	r3, r4
    1c28:	222d      	movs	r2, #45	; 0x2d
    1c2a:	3343      	adds	r3, #67	; 0x43
    1c2c:	701a      	strb	r2, [r3, #0]
    1c2e:	e7a3      	b.n	1b78 <_printf_float+0xa4>
    1c30:	2f67      	cmp	r7, #103	; 0x67
    1c32:	d001      	beq.n	1c38 <_printf_float+0x164>
    1c34:	2f47      	cmp	r7, #71	; 0x47
    1c36:	d1b7      	bne.n	1ba8 <_printf_float+0xd4>
    1c38:	2a00      	cmp	r2, #0
    1c3a:	d016      	beq.n	1c6a <_printf_float+0x196>
    1c3c:	990c      	ldr	r1, [sp, #48]	; 0x30
    1c3e:	a808      	add	r0, sp, #32
    1c40:	430b      	orrs	r3, r1
    1c42:	2100      	movs	r1, #0
    1c44:	9106      	str	r1, [sp, #24]
    1c46:	a912      	add	r1, sp, #72	; 0x48
    1c48:	9105      	str	r1, [sp, #20]
    1c4a:	a911      	add	r1, sp, #68	; 0x44
    1c4c:	9103      	str	r1, [sp, #12]
    1c4e:	2123      	movs	r1, #35	; 0x23
    1c50:	1809      	adds	r1, r1, r0
    1c52:	6023      	str	r3, [r4, #0]
    1c54:	9301      	str	r3, [sp, #4]
    1c56:	9200      	str	r2, [sp, #0]
    1c58:	002b      	movs	r3, r5
    1c5a:	9704      	str	r7, [sp, #16]
    1c5c:	9102      	str	r1, [sp, #8]
    1c5e:	0032      	movs	r2, r6
    1c60:	9809      	ldr	r0, [sp, #36]	; 0x24
    1c62:	f7ff fe9b 	bl	199c <__cvt>
    1c66:	0005      	movs	r5, r0
    1c68:	e7ba      	b.n	1be0 <_printf_float+0x10c>
    1c6a:	2201      	movs	r2, #1
    1c6c:	e79b      	b.n	1ba6 <_printf_float+0xd2>
    1c6e:	2f66      	cmp	r7, #102	; 0x66
    1c70:	d119      	bne.n	1ca6 <_printf_float+0x1d2>
    1c72:	6863      	ldr	r3, [r4, #4]
    1c74:	2900      	cmp	r1, #0
    1c76:	dd0c      	ble.n	1c92 <_printf_float+0x1be>
    1c78:	6121      	str	r1, [r4, #16]
    1c7a:	2b00      	cmp	r3, #0
    1c7c:	d102      	bne.n	1c84 <_printf_float+0x1b0>
    1c7e:	6822      	ldr	r2, [r4, #0]
    1c80:	07d2      	lsls	r2, r2, #31
    1c82:	d502      	bpl.n	1c8a <_printf_float+0x1b6>
    1c84:	3301      	adds	r3, #1
    1c86:	185b      	adds	r3, r3, r1
    1c88:	6123      	str	r3, [r4, #16]
    1c8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1c8c:	2600      	movs	r6, #0
    1c8e:	65a3      	str	r3, [r4, #88]	; 0x58
    1c90:	e7c3      	b.n	1c1a <_printf_float+0x146>
    1c92:	2b00      	cmp	r3, #0
    1c94:	d103      	bne.n	1c9e <_printf_float+0x1ca>
    1c96:	2201      	movs	r2, #1
    1c98:	6821      	ldr	r1, [r4, #0]
    1c9a:	4211      	tst	r1, r2
    1c9c:	d000      	beq.n	1ca0 <_printf_float+0x1cc>
    1c9e:	1c9a      	adds	r2, r3, #2
    1ca0:	6122      	str	r2, [r4, #16]
    1ca2:	e7f2      	b.n	1c8a <_printf_float+0x1b6>
    1ca4:	2767      	movs	r7, #103	; 0x67
    1ca6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1ca8:	9812      	ldr	r0, [sp, #72]	; 0x48
    1caa:	4283      	cmp	r3, r0
    1cac:	db05      	blt.n	1cba <_printf_float+0x1e6>
    1cae:	6822      	ldr	r2, [r4, #0]
    1cb0:	6123      	str	r3, [r4, #16]
    1cb2:	07d2      	lsls	r2, r2, #31
    1cb4:	d5e9      	bpl.n	1c8a <_printf_float+0x1b6>
    1cb6:	3301      	adds	r3, #1
    1cb8:	e7e6      	b.n	1c88 <_printf_float+0x1b4>
    1cba:	2201      	movs	r2, #1
    1cbc:	2b00      	cmp	r3, #0
    1cbe:	dc01      	bgt.n	1cc4 <_printf_float+0x1f0>
    1cc0:	1892      	adds	r2, r2, r2
    1cc2:	1ad2      	subs	r2, r2, r3
    1cc4:	1812      	adds	r2, r2, r0
    1cc6:	e7eb      	b.n	1ca0 <_printf_float+0x1cc>
    1cc8:	6822      	ldr	r2, [r4, #0]
    1cca:	0553      	lsls	r3, r2, #21
    1ccc:	d408      	bmi.n	1ce0 <_printf_float+0x20c>
    1cce:	6923      	ldr	r3, [r4, #16]
    1cd0:	002a      	movs	r2, r5
    1cd2:	990a      	ldr	r1, [sp, #40]	; 0x28
    1cd4:	9809      	ldr	r0, [sp, #36]	; 0x24
    1cd6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1cd8:	47a8      	blx	r5
    1cda:	1c43      	adds	r3, r0, #1
    1cdc:	d129      	bne.n	1d32 <_printf_float+0x25e>
    1cde:	e756      	b.n	1b8e <_printf_float+0xba>
    1ce0:	2f65      	cmp	r7, #101	; 0x65
    1ce2:	d800      	bhi.n	1ce6 <_printf_float+0x212>
    1ce4:	e0dc      	b.n	1ea0 <_printf_float+0x3cc>
    1ce6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    1ce8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    1cea:	2200      	movs	r2, #0
    1cec:	2300      	movs	r3, #0
    1cee:	f002 fcb9 	bl	4664 <__aeabi_dcmpeq>
    1cf2:	2800      	cmp	r0, #0
    1cf4:	d035      	beq.n	1d62 <_printf_float+0x28e>
    1cf6:	2301      	movs	r3, #1
    1cf8:	4a35      	ldr	r2, [pc, #212]	; (1dd0 <_printf_float+0x2fc>)
    1cfa:	990a      	ldr	r1, [sp, #40]	; 0x28
    1cfc:	9809      	ldr	r0, [sp, #36]	; 0x24
    1cfe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1d00:	47a8      	blx	r5
    1d02:	1c43      	adds	r3, r0, #1
    1d04:	d100      	bne.n	1d08 <_printf_float+0x234>
    1d06:	e742      	b.n	1b8e <_printf_float+0xba>
    1d08:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1d0a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1d0c:	4293      	cmp	r3, r2
    1d0e:	db02      	blt.n	1d16 <_printf_float+0x242>
    1d10:	6823      	ldr	r3, [r4, #0]
    1d12:	07db      	lsls	r3, r3, #31
    1d14:	d50d      	bpl.n	1d32 <_printf_float+0x25e>
    1d16:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1d18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1d1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1d1c:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d1e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d20:	47a8      	blx	r5
    1d22:	2500      	movs	r5, #0
    1d24:	1c43      	adds	r3, r0, #1
    1d26:	d100      	bne.n	1d2a <_printf_float+0x256>
    1d28:	e731      	b.n	1b8e <_printf_float+0xba>
    1d2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1d2c:	3b01      	subs	r3, #1
    1d2e:	429d      	cmp	r5, r3
    1d30:	db0b      	blt.n	1d4a <_printf_float+0x276>
    1d32:	6823      	ldr	r3, [r4, #0]
    1d34:	2500      	movs	r5, #0
    1d36:	079b      	lsls	r3, r3, #30
    1d38:	d500      	bpl.n	1d3c <_printf_float+0x268>
    1d3a:	e0fd      	b.n	1f38 <_printf_float+0x464>
    1d3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1d3e:	68e0      	ldr	r0, [r4, #12]
    1d40:	4298      	cmp	r0, r3
    1d42:	db00      	blt.n	1d46 <_printf_float+0x272>
    1d44:	e725      	b.n	1b92 <_printf_float+0xbe>
    1d46:	0018      	movs	r0, r3
    1d48:	e723      	b.n	1b92 <_printf_float+0xbe>
    1d4a:	0022      	movs	r2, r4
    1d4c:	2301      	movs	r3, #1
    1d4e:	321a      	adds	r2, #26
    1d50:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d52:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d54:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1d56:	47b0      	blx	r6
    1d58:	1c43      	adds	r3, r0, #1
    1d5a:	d100      	bne.n	1d5e <_printf_float+0x28a>
    1d5c:	e717      	b.n	1b8e <_printf_float+0xba>
    1d5e:	3501      	adds	r5, #1
    1d60:	e7e3      	b.n	1d2a <_printf_float+0x256>
    1d62:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1d64:	2b00      	cmp	r3, #0
    1d66:	dc35      	bgt.n	1dd4 <_printf_float+0x300>
    1d68:	2301      	movs	r3, #1
    1d6a:	4a19      	ldr	r2, [pc, #100]	; (1dd0 <_printf_float+0x2fc>)
    1d6c:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d6e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d70:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1d72:	47b0      	blx	r6
    1d74:	1c43      	adds	r3, r0, #1
    1d76:	d100      	bne.n	1d7a <_printf_float+0x2a6>
    1d78:	e709      	b.n	1b8e <_printf_float+0xba>
    1d7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1d7c:	2b00      	cmp	r3, #0
    1d7e:	d105      	bne.n	1d8c <_printf_float+0x2b8>
    1d80:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1d82:	2b00      	cmp	r3, #0
    1d84:	d102      	bne.n	1d8c <_printf_float+0x2b8>
    1d86:	6823      	ldr	r3, [r4, #0]
    1d88:	07db      	lsls	r3, r3, #31
    1d8a:	d5d2      	bpl.n	1d32 <_printf_float+0x25e>
    1d8c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1d90:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1d92:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d94:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d96:	47b0      	blx	r6
    1d98:	2600      	movs	r6, #0
    1d9a:	1c43      	adds	r3, r0, #1
    1d9c:	d100      	bne.n	1da0 <_printf_float+0x2cc>
    1d9e:	e6f6      	b.n	1b8e <_printf_float+0xba>
    1da0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1da2:	425b      	negs	r3, r3
    1da4:	429e      	cmp	r6, r3
    1da6:	db01      	blt.n	1dac <_printf_float+0x2d8>
    1da8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1daa:	e791      	b.n	1cd0 <_printf_float+0x1fc>
    1dac:	0022      	movs	r2, r4
    1dae:	2301      	movs	r3, #1
    1db0:	321a      	adds	r2, #26
    1db2:	990a      	ldr	r1, [sp, #40]	; 0x28
    1db4:	9809      	ldr	r0, [sp, #36]	; 0x24
    1db6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1db8:	47b8      	blx	r7
    1dba:	1c43      	adds	r3, r0, #1
    1dbc:	d100      	bne.n	1dc0 <_printf_float+0x2ec>
    1dbe:	e6e6      	b.n	1b8e <_printf_float+0xba>
    1dc0:	3601      	adds	r6, #1
    1dc2:	e7ed      	b.n	1da0 <_printf_float+0x2cc>
    1dc4:	7fefffff 	.word	0x7fefffff
    1dc8:	00006598 	.word	0x00006598
    1dcc:	00006594 	.word	0x00006594
    1dd0:	000065a4 	.word	0x000065a4
    1dd4:	6da3      	ldr	r3, [r4, #88]	; 0x58
    1dd6:	9e12      	ldr	r6, [sp, #72]	; 0x48
    1dd8:	429e      	cmp	r6, r3
    1dda:	dd00      	ble.n	1dde <_printf_float+0x30a>
    1ddc:	001e      	movs	r6, r3
    1dde:	2e00      	cmp	r6, #0
    1de0:	dc35      	bgt.n	1e4e <_printf_float+0x37a>
    1de2:	2300      	movs	r3, #0
    1de4:	930c      	str	r3, [sp, #48]	; 0x30
    1de6:	43f3      	mvns	r3, r6
    1de8:	17db      	asrs	r3, r3, #31
    1dea:	930f      	str	r3, [sp, #60]	; 0x3c
    1dec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    1dee:	6da7      	ldr	r7, [r4, #88]	; 0x58
    1df0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1df2:	4033      	ands	r3, r6
    1df4:	1afb      	subs	r3, r7, r3
    1df6:	429a      	cmp	r2, r3
    1df8:	db32      	blt.n	1e60 <_printf_float+0x38c>
    1dfa:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1dfc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1dfe:	4293      	cmp	r3, r2
    1e00:	db3c      	blt.n	1e7c <_printf_float+0x3a8>
    1e02:	6823      	ldr	r3, [r4, #0]
    1e04:	07db      	lsls	r3, r3, #31
    1e06:	d439      	bmi.n	1e7c <_printf_float+0x3a8>
    1e08:	9e12      	ldr	r6, [sp, #72]	; 0x48
    1e0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
    1e0c:	1bf3      	subs	r3, r6, r7
    1e0e:	1ab6      	subs	r6, r6, r2
    1e10:	429e      	cmp	r6, r3
    1e12:	dd00      	ble.n	1e16 <_printf_float+0x342>
    1e14:	001e      	movs	r6, r3
    1e16:	2e00      	cmp	r6, #0
    1e18:	dc39      	bgt.n	1e8e <_printf_float+0x3ba>
    1e1a:	43f7      	mvns	r7, r6
    1e1c:	2500      	movs	r5, #0
    1e1e:	17fb      	asrs	r3, r7, #31
    1e20:	930c      	str	r3, [sp, #48]	; 0x30
    1e22:	9a11      	ldr	r2, [sp, #68]	; 0x44
    1e24:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1e26:	990c      	ldr	r1, [sp, #48]	; 0x30
    1e28:	1a9b      	subs	r3, r3, r2
    1e2a:	0032      	movs	r2, r6
    1e2c:	400a      	ands	r2, r1
    1e2e:	1a9b      	subs	r3, r3, r2
    1e30:	429d      	cmp	r5, r3
    1e32:	db00      	blt.n	1e36 <_printf_float+0x362>
    1e34:	e77d      	b.n	1d32 <_printf_float+0x25e>
    1e36:	0022      	movs	r2, r4
    1e38:	2301      	movs	r3, #1
    1e3a:	321a      	adds	r2, #26
    1e3c:	990a      	ldr	r1, [sp, #40]	; 0x28
    1e3e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1e40:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1e42:	47b8      	blx	r7
    1e44:	1c43      	adds	r3, r0, #1
    1e46:	d100      	bne.n	1e4a <_printf_float+0x376>
    1e48:	e6a1      	b.n	1b8e <_printf_float+0xba>
    1e4a:	3501      	adds	r5, #1
    1e4c:	e7e9      	b.n	1e22 <_printf_float+0x34e>
    1e4e:	0033      	movs	r3, r6
    1e50:	002a      	movs	r2, r5
    1e52:	990a      	ldr	r1, [sp, #40]	; 0x28
    1e54:	9809      	ldr	r0, [sp, #36]	; 0x24
    1e56:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1e58:	47b8      	blx	r7
    1e5a:	1c43      	adds	r3, r0, #1
    1e5c:	d1c1      	bne.n	1de2 <_printf_float+0x30e>
    1e5e:	e696      	b.n	1b8e <_printf_float+0xba>
    1e60:	0022      	movs	r2, r4
    1e62:	2301      	movs	r3, #1
    1e64:	321a      	adds	r2, #26
    1e66:	990a      	ldr	r1, [sp, #40]	; 0x28
    1e68:	9809      	ldr	r0, [sp, #36]	; 0x24
    1e6a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1e6c:	47b8      	blx	r7
    1e6e:	1c43      	adds	r3, r0, #1
    1e70:	d100      	bne.n	1e74 <_printf_float+0x3a0>
    1e72:	e68c      	b.n	1b8e <_printf_float+0xba>
    1e74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    1e76:	3301      	adds	r3, #1
    1e78:	930c      	str	r3, [sp, #48]	; 0x30
    1e7a:	e7b7      	b.n	1dec <_printf_float+0x318>
    1e7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1e7e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1e80:	990a      	ldr	r1, [sp, #40]	; 0x28
    1e82:	9809      	ldr	r0, [sp, #36]	; 0x24
    1e84:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1e86:	47b0      	blx	r6
    1e88:	1c43      	adds	r3, r0, #1
    1e8a:	d1bd      	bne.n	1e08 <_printf_float+0x334>
    1e8c:	e67f      	b.n	1b8e <_printf_float+0xba>
    1e8e:	19ea      	adds	r2, r5, r7
    1e90:	0033      	movs	r3, r6
    1e92:	990a      	ldr	r1, [sp, #40]	; 0x28
    1e94:	9809      	ldr	r0, [sp, #36]	; 0x24
    1e96:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1e98:	47a8      	blx	r5
    1e9a:	1c43      	adds	r3, r0, #1
    1e9c:	d1bd      	bne.n	1e1a <_printf_float+0x346>
    1e9e:	e676      	b.n	1b8e <_printf_float+0xba>
    1ea0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1ea2:	2b01      	cmp	r3, #1
    1ea4:	dc02      	bgt.n	1eac <_printf_float+0x3d8>
    1ea6:	2301      	movs	r3, #1
    1ea8:	421a      	tst	r2, r3
    1eaa:	d038      	beq.n	1f1e <_printf_float+0x44a>
    1eac:	2301      	movs	r3, #1
    1eae:	002a      	movs	r2, r5
    1eb0:	990a      	ldr	r1, [sp, #40]	; 0x28
    1eb2:	9809      	ldr	r0, [sp, #36]	; 0x24
    1eb4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1eb6:	47b8      	blx	r7
    1eb8:	1c43      	adds	r3, r0, #1
    1eba:	d100      	bne.n	1ebe <_printf_float+0x3ea>
    1ebc:	e667      	b.n	1b8e <_printf_float+0xba>
    1ebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1ec0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1ec2:	990a      	ldr	r1, [sp, #40]	; 0x28
    1ec4:	9809      	ldr	r0, [sp, #36]	; 0x24
    1ec6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1ec8:	47b8      	blx	r7
    1eca:	1c43      	adds	r3, r0, #1
    1ecc:	d100      	bne.n	1ed0 <_printf_float+0x3fc>
    1ece:	e65e      	b.n	1b8e <_printf_float+0xba>
    1ed0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    1ed2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    1ed4:	2200      	movs	r2, #0
    1ed6:	2300      	movs	r3, #0
    1ed8:	f002 fbc4 	bl	4664 <__aeabi_dcmpeq>
    1edc:	2800      	cmp	r0, #0
    1ede:	d008      	beq.n	1ef2 <_printf_float+0x41e>
    1ee0:	2500      	movs	r5, #0
    1ee2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1ee4:	3b01      	subs	r3, #1
    1ee6:	429d      	cmp	r5, r3
    1ee8:	db0d      	blt.n	1f06 <_printf_float+0x432>
    1eea:	0022      	movs	r2, r4
    1eec:	0033      	movs	r3, r6
    1eee:	3250      	adds	r2, #80	; 0x50
    1ef0:	e6ef      	b.n	1cd2 <_printf_float+0x1fe>
    1ef2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1ef4:	1c6a      	adds	r2, r5, #1
    1ef6:	3b01      	subs	r3, #1
    1ef8:	990a      	ldr	r1, [sp, #40]	; 0x28
    1efa:	9809      	ldr	r0, [sp, #36]	; 0x24
    1efc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1efe:	47a8      	blx	r5
    1f00:	1c43      	adds	r3, r0, #1
    1f02:	d1f2      	bne.n	1eea <_printf_float+0x416>
    1f04:	e643      	b.n	1b8e <_printf_float+0xba>
    1f06:	0022      	movs	r2, r4
    1f08:	2301      	movs	r3, #1
    1f0a:	321a      	adds	r2, #26
    1f0c:	990a      	ldr	r1, [sp, #40]	; 0x28
    1f0e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1f10:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1f12:	47b8      	blx	r7
    1f14:	1c43      	adds	r3, r0, #1
    1f16:	d100      	bne.n	1f1a <_printf_float+0x446>
    1f18:	e639      	b.n	1b8e <_printf_float+0xba>
    1f1a:	3501      	adds	r5, #1
    1f1c:	e7e1      	b.n	1ee2 <_printf_float+0x40e>
    1f1e:	002a      	movs	r2, r5
    1f20:	e7ea      	b.n	1ef8 <_printf_float+0x424>
    1f22:	0022      	movs	r2, r4
    1f24:	2301      	movs	r3, #1
    1f26:	3219      	adds	r2, #25
    1f28:	990a      	ldr	r1, [sp, #40]	; 0x28
    1f2a:	9809      	ldr	r0, [sp, #36]	; 0x24
    1f2c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1f2e:	47b0      	blx	r6
    1f30:	1c43      	adds	r3, r0, #1
    1f32:	d100      	bne.n	1f36 <_printf_float+0x462>
    1f34:	e62b      	b.n	1b8e <_printf_float+0xba>
    1f36:	3501      	adds	r5, #1
    1f38:	68e3      	ldr	r3, [r4, #12]
    1f3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    1f3c:	1a9b      	subs	r3, r3, r2
    1f3e:	429d      	cmp	r5, r3
    1f40:	dbef      	blt.n	1f22 <_printf_float+0x44e>
    1f42:	e6fb      	b.n	1d3c <_printf_float+0x268>
    1f44:	0032      	movs	r2, r6
    1f46:	002b      	movs	r3, r5
    1f48:	0030      	movs	r0, r6
    1f4a:	0029      	movs	r1, r5
    1f4c:	f004 f90c 	bl	6168 <__aeabi_dcmpun>
    1f50:	2800      	cmp	r0, #0
    1f52:	d100      	bne.n	1f56 <_printf_float+0x482>
    1f54:	e621      	b.n	1b9a <_printf_float+0xc6>
    1f56:	4d03      	ldr	r5, [pc, #12]	; (1f64 <_printf_float+0x490>)
    1f58:	2f47      	cmp	r7, #71	; 0x47
    1f5a:	d900      	bls.n	1f5e <_printf_float+0x48a>
    1f5c:	e605      	b.n	1b6a <_printf_float+0x96>
    1f5e:	4d02      	ldr	r5, [pc, #8]	; (1f68 <_printf_float+0x494>)
    1f60:	e603      	b.n	1b6a <_printf_float+0x96>
    1f62:	46c0      	nop			; (mov r8, r8)
    1f64:	000065a0 	.word	0x000065a0
    1f68:	0000659c 	.word	0x0000659c

00001f6c <_printf_common>:
    1f6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1f6e:	0015      	movs	r5, r2
    1f70:	9301      	str	r3, [sp, #4]
    1f72:	688a      	ldr	r2, [r1, #8]
    1f74:	690b      	ldr	r3, [r1, #16]
    1f76:	9000      	str	r0, [sp, #0]
    1f78:	000c      	movs	r4, r1
    1f7a:	4293      	cmp	r3, r2
    1f7c:	da00      	bge.n	1f80 <_printf_common+0x14>
    1f7e:	0013      	movs	r3, r2
    1f80:	0022      	movs	r2, r4
    1f82:	602b      	str	r3, [r5, #0]
    1f84:	3243      	adds	r2, #67	; 0x43
    1f86:	7812      	ldrb	r2, [r2, #0]
    1f88:	2a00      	cmp	r2, #0
    1f8a:	d001      	beq.n	1f90 <_printf_common+0x24>
    1f8c:	3301      	adds	r3, #1
    1f8e:	602b      	str	r3, [r5, #0]
    1f90:	6823      	ldr	r3, [r4, #0]
    1f92:	069b      	lsls	r3, r3, #26
    1f94:	d502      	bpl.n	1f9c <_printf_common+0x30>
    1f96:	682b      	ldr	r3, [r5, #0]
    1f98:	3302      	adds	r3, #2
    1f9a:	602b      	str	r3, [r5, #0]
    1f9c:	2706      	movs	r7, #6
    1f9e:	6823      	ldr	r3, [r4, #0]
    1fa0:	401f      	ands	r7, r3
    1fa2:	d027      	beq.n	1ff4 <_printf_common+0x88>
    1fa4:	0023      	movs	r3, r4
    1fa6:	3343      	adds	r3, #67	; 0x43
    1fa8:	781b      	ldrb	r3, [r3, #0]
    1faa:	1e5a      	subs	r2, r3, #1
    1fac:	4193      	sbcs	r3, r2
    1fae:	6822      	ldr	r2, [r4, #0]
    1fb0:	0692      	lsls	r2, r2, #26
    1fb2:	d430      	bmi.n	2016 <_printf_common+0xaa>
    1fb4:	0022      	movs	r2, r4
    1fb6:	9901      	ldr	r1, [sp, #4]
    1fb8:	3243      	adds	r2, #67	; 0x43
    1fba:	9800      	ldr	r0, [sp, #0]
    1fbc:	9e08      	ldr	r6, [sp, #32]
    1fbe:	47b0      	blx	r6
    1fc0:	1c43      	adds	r3, r0, #1
    1fc2:	d025      	beq.n	2010 <_printf_common+0xa4>
    1fc4:	2306      	movs	r3, #6
    1fc6:	6820      	ldr	r0, [r4, #0]
    1fc8:	682a      	ldr	r2, [r5, #0]
    1fca:	68e1      	ldr	r1, [r4, #12]
    1fcc:	4003      	ands	r3, r0
    1fce:	2500      	movs	r5, #0
    1fd0:	2b04      	cmp	r3, #4
    1fd2:	d103      	bne.n	1fdc <_printf_common+0x70>
    1fd4:	1a8d      	subs	r5, r1, r2
    1fd6:	43eb      	mvns	r3, r5
    1fd8:	17db      	asrs	r3, r3, #31
    1fda:	401d      	ands	r5, r3
    1fdc:	68a3      	ldr	r3, [r4, #8]
    1fde:	6922      	ldr	r2, [r4, #16]
    1fe0:	4293      	cmp	r3, r2
    1fe2:	dd01      	ble.n	1fe8 <_printf_common+0x7c>
    1fe4:	1a9b      	subs	r3, r3, r2
    1fe6:	18ed      	adds	r5, r5, r3
    1fe8:	2700      	movs	r7, #0
    1fea:	42bd      	cmp	r5, r7
    1fec:	d120      	bne.n	2030 <_printf_common+0xc4>
    1fee:	2000      	movs	r0, #0
    1ff0:	e010      	b.n	2014 <_printf_common+0xa8>
    1ff2:	3701      	adds	r7, #1
    1ff4:	68e3      	ldr	r3, [r4, #12]
    1ff6:	682a      	ldr	r2, [r5, #0]
    1ff8:	1a9b      	subs	r3, r3, r2
    1ffa:	429f      	cmp	r7, r3
    1ffc:	dad2      	bge.n	1fa4 <_printf_common+0x38>
    1ffe:	0022      	movs	r2, r4
    2000:	2301      	movs	r3, #1
    2002:	3219      	adds	r2, #25
    2004:	9901      	ldr	r1, [sp, #4]
    2006:	9800      	ldr	r0, [sp, #0]
    2008:	9e08      	ldr	r6, [sp, #32]
    200a:	47b0      	blx	r6
    200c:	1c43      	adds	r3, r0, #1
    200e:	d1f0      	bne.n	1ff2 <_printf_common+0x86>
    2010:	2001      	movs	r0, #1
    2012:	4240      	negs	r0, r0
    2014:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2016:	2030      	movs	r0, #48	; 0x30
    2018:	18e1      	adds	r1, r4, r3
    201a:	3143      	adds	r1, #67	; 0x43
    201c:	7008      	strb	r0, [r1, #0]
    201e:	0021      	movs	r1, r4
    2020:	1c5a      	adds	r2, r3, #1
    2022:	3145      	adds	r1, #69	; 0x45
    2024:	7809      	ldrb	r1, [r1, #0]
    2026:	18a2      	adds	r2, r4, r2
    2028:	3243      	adds	r2, #67	; 0x43
    202a:	3302      	adds	r3, #2
    202c:	7011      	strb	r1, [r2, #0]
    202e:	e7c1      	b.n	1fb4 <_printf_common+0x48>
    2030:	0022      	movs	r2, r4
    2032:	2301      	movs	r3, #1
    2034:	321a      	adds	r2, #26
    2036:	9901      	ldr	r1, [sp, #4]
    2038:	9800      	ldr	r0, [sp, #0]
    203a:	9e08      	ldr	r6, [sp, #32]
    203c:	47b0      	blx	r6
    203e:	1c43      	adds	r3, r0, #1
    2040:	d0e6      	beq.n	2010 <_printf_common+0xa4>
    2042:	3701      	adds	r7, #1
    2044:	e7d1      	b.n	1fea <_printf_common+0x7e>
	...

00002048 <_printf_i>:
    2048:	b5f0      	push	{r4, r5, r6, r7, lr}
    204a:	b08b      	sub	sp, #44	; 0x2c
    204c:	9206      	str	r2, [sp, #24]
    204e:	000a      	movs	r2, r1
    2050:	3243      	adds	r2, #67	; 0x43
    2052:	9307      	str	r3, [sp, #28]
    2054:	9005      	str	r0, [sp, #20]
    2056:	9204      	str	r2, [sp, #16]
    2058:	7e0a      	ldrb	r2, [r1, #24]
    205a:	000c      	movs	r4, r1
    205c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    205e:	2a6e      	cmp	r2, #110	; 0x6e
    2060:	d100      	bne.n	2064 <_printf_i+0x1c>
    2062:	e08f      	b.n	2184 <_printf_i+0x13c>
    2064:	d817      	bhi.n	2096 <_printf_i+0x4e>
    2066:	2a63      	cmp	r2, #99	; 0x63
    2068:	d02c      	beq.n	20c4 <_printf_i+0x7c>
    206a:	d808      	bhi.n	207e <_printf_i+0x36>
    206c:	2a00      	cmp	r2, #0
    206e:	d100      	bne.n	2072 <_printf_i+0x2a>
    2070:	e099      	b.n	21a6 <_printf_i+0x15e>
    2072:	2a58      	cmp	r2, #88	; 0x58
    2074:	d054      	beq.n	2120 <_printf_i+0xd8>
    2076:	0026      	movs	r6, r4
    2078:	3642      	adds	r6, #66	; 0x42
    207a:	7032      	strb	r2, [r6, #0]
    207c:	e029      	b.n	20d2 <_printf_i+0x8a>
    207e:	2a64      	cmp	r2, #100	; 0x64
    2080:	d001      	beq.n	2086 <_printf_i+0x3e>
    2082:	2a69      	cmp	r2, #105	; 0x69
    2084:	d1f7      	bne.n	2076 <_printf_i+0x2e>
    2086:	6821      	ldr	r1, [r4, #0]
    2088:	681a      	ldr	r2, [r3, #0]
    208a:	0608      	lsls	r0, r1, #24
    208c:	d523      	bpl.n	20d6 <_printf_i+0x8e>
    208e:	1d11      	adds	r1, r2, #4
    2090:	6019      	str	r1, [r3, #0]
    2092:	6815      	ldr	r5, [r2, #0]
    2094:	e025      	b.n	20e2 <_printf_i+0x9a>
    2096:	2a73      	cmp	r2, #115	; 0x73
    2098:	d100      	bne.n	209c <_printf_i+0x54>
    209a:	e088      	b.n	21ae <_printf_i+0x166>
    209c:	d808      	bhi.n	20b0 <_printf_i+0x68>
    209e:	2a6f      	cmp	r2, #111	; 0x6f
    20a0:	d029      	beq.n	20f6 <_printf_i+0xae>
    20a2:	2a70      	cmp	r2, #112	; 0x70
    20a4:	d1e7      	bne.n	2076 <_printf_i+0x2e>
    20a6:	2220      	movs	r2, #32
    20a8:	6809      	ldr	r1, [r1, #0]
    20aa:	430a      	orrs	r2, r1
    20ac:	6022      	str	r2, [r4, #0]
    20ae:	e003      	b.n	20b8 <_printf_i+0x70>
    20b0:	2a75      	cmp	r2, #117	; 0x75
    20b2:	d020      	beq.n	20f6 <_printf_i+0xae>
    20b4:	2a78      	cmp	r2, #120	; 0x78
    20b6:	d1de      	bne.n	2076 <_printf_i+0x2e>
    20b8:	0022      	movs	r2, r4
    20ba:	2178      	movs	r1, #120	; 0x78
    20bc:	3245      	adds	r2, #69	; 0x45
    20be:	7011      	strb	r1, [r2, #0]
    20c0:	4a6c      	ldr	r2, [pc, #432]	; (2274 <_printf_i+0x22c>)
    20c2:	e030      	b.n	2126 <_printf_i+0xde>
    20c4:	000e      	movs	r6, r1
    20c6:	681a      	ldr	r2, [r3, #0]
    20c8:	3642      	adds	r6, #66	; 0x42
    20ca:	1d11      	adds	r1, r2, #4
    20cc:	6019      	str	r1, [r3, #0]
    20ce:	6813      	ldr	r3, [r2, #0]
    20d0:	7033      	strb	r3, [r6, #0]
    20d2:	2301      	movs	r3, #1
    20d4:	e079      	b.n	21ca <_printf_i+0x182>
    20d6:	0649      	lsls	r1, r1, #25
    20d8:	d5d9      	bpl.n	208e <_printf_i+0x46>
    20da:	1d11      	adds	r1, r2, #4
    20dc:	6019      	str	r1, [r3, #0]
    20de:	2300      	movs	r3, #0
    20e0:	5ed5      	ldrsh	r5, [r2, r3]
    20e2:	2d00      	cmp	r5, #0
    20e4:	da03      	bge.n	20ee <_printf_i+0xa6>
    20e6:	232d      	movs	r3, #45	; 0x2d
    20e8:	9a04      	ldr	r2, [sp, #16]
    20ea:	426d      	negs	r5, r5
    20ec:	7013      	strb	r3, [r2, #0]
    20ee:	4b62      	ldr	r3, [pc, #392]	; (2278 <_printf_i+0x230>)
    20f0:	270a      	movs	r7, #10
    20f2:	9303      	str	r3, [sp, #12]
    20f4:	e02f      	b.n	2156 <_printf_i+0x10e>
    20f6:	6820      	ldr	r0, [r4, #0]
    20f8:	6819      	ldr	r1, [r3, #0]
    20fa:	0605      	lsls	r5, r0, #24
    20fc:	d503      	bpl.n	2106 <_printf_i+0xbe>
    20fe:	1d08      	adds	r0, r1, #4
    2100:	6018      	str	r0, [r3, #0]
    2102:	680d      	ldr	r5, [r1, #0]
    2104:	e005      	b.n	2112 <_printf_i+0xca>
    2106:	0640      	lsls	r0, r0, #25
    2108:	d5f9      	bpl.n	20fe <_printf_i+0xb6>
    210a:	680d      	ldr	r5, [r1, #0]
    210c:	1d08      	adds	r0, r1, #4
    210e:	6018      	str	r0, [r3, #0]
    2110:	b2ad      	uxth	r5, r5
    2112:	4b59      	ldr	r3, [pc, #356]	; (2278 <_printf_i+0x230>)
    2114:	2708      	movs	r7, #8
    2116:	9303      	str	r3, [sp, #12]
    2118:	2a6f      	cmp	r2, #111	; 0x6f
    211a:	d018      	beq.n	214e <_printf_i+0x106>
    211c:	270a      	movs	r7, #10
    211e:	e016      	b.n	214e <_printf_i+0x106>
    2120:	3145      	adds	r1, #69	; 0x45
    2122:	700a      	strb	r2, [r1, #0]
    2124:	4a54      	ldr	r2, [pc, #336]	; (2278 <_printf_i+0x230>)
    2126:	9203      	str	r2, [sp, #12]
    2128:	681a      	ldr	r2, [r3, #0]
    212a:	6821      	ldr	r1, [r4, #0]
    212c:	1d10      	adds	r0, r2, #4
    212e:	6018      	str	r0, [r3, #0]
    2130:	6815      	ldr	r5, [r2, #0]
    2132:	0608      	lsls	r0, r1, #24
    2134:	d522      	bpl.n	217c <_printf_i+0x134>
    2136:	07cb      	lsls	r3, r1, #31
    2138:	d502      	bpl.n	2140 <_printf_i+0xf8>
    213a:	2320      	movs	r3, #32
    213c:	4319      	orrs	r1, r3
    213e:	6021      	str	r1, [r4, #0]
    2140:	2710      	movs	r7, #16
    2142:	2d00      	cmp	r5, #0
    2144:	d103      	bne.n	214e <_printf_i+0x106>
    2146:	2320      	movs	r3, #32
    2148:	6822      	ldr	r2, [r4, #0]
    214a:	439a      	bics	r2, r3
    214c:	6022      	str	r2, [r4, #0]
    214e:	0023      	movs	r3, r4
    2150:	2200      	movs	r2, #0
    2152:	3343      	adds	r3, #67	; 0x43
    2154:	701a      	strb	r2, [r3, #0]
    2156:	6863      	ldr	r3, [r4, #4]
    2158:	60a3      	str	r3, [r4, #8]
    215a:	2b00      	cmp	r3, #0
    215c:	db5c      	blt.n	2218 <_printf_i+0x1d0>
    215e:	2204      	movs	r2, #4
    2160:	6821      	ldr	r1, [r4, #0]
    2162:	4391      	bics	r1, r2
    2164:	6021      	str	r1, [r4, #0]
    2166:	2d00      	cmp	r5, #0
    2168:	d158      	bne.n	221c <_printf_i+0x1d4>
    216a:	9e04      	ldr	r6, [sp, #16]
    216c:	2b00      	cmp	r3, #0
    216e:	d064      	beq.n	223a <_printf_i+0x1f2>
    2170:	0026      	movs	r6, r4
    2172:	9b03      	ldr	r3, [sp, #12]
    2174:	3642      	adds	r6, #66	; 0x42
    2176:	781b      	ldrb	r3, [r3, #0]
    2178:	7033      	strb	r3, [r6, #0]
    217a:	e05e      	b.n	223a <_printf_i+0x1f2>
    217c:	0648      	lsls	r0, r1, #25
    217e:	d5da      	bpl.n	2136 <_printf_i+0xee>
    2180:	b2ad      	uxth	r5, r5
    2182:	e7d8      	b.n	2136 <_printf_i+0xee>
    2184:	6809      	ldr	r1, [r1, #0]
    2186:	681a      	ldr	r2, [r3, #0]
    2188:	0608      	lsls	r0, r1, #24
    218a:	d505      	bpl.n	2198 <_printf_i+0x150>
    218c:	1d11      	adds	r1, r2, #4
    218e:	6019      	str	r1, [r3, #0]
    2190:	6813      	ldr	r3, [r2, #0]
    2192:	6962      	ldr	r2, [r4, #20]
    2194:	601a      	str	r2, [r3, #0]
    2196:	e006      	b.n	21a6 <_printf_i+0x15e>
    2198:	0649      	lsls	r1, r1, #25
    219a:	d5f7      	bpl.n	218c <_printf_i+0x144>
    219c:	1d11      	adds	r1, r2, #4
    219e:	6019      	str	r1, [r3, #0]
    21a0:	6813      	ldr	r3, [r2, #0]
    21a2:	8aa2      	ldrh	r2, [r4, #20]
    21a4:	801a      	strh	r2, [r3, #0]
    21a6:	2300      	movs	r3, #0
    21a8:	9e04      	ldr	r6, [sp, #16]
    21aa:	6123      	str	r3, [r4, #16]
    21ac:	e054      	b.n	2258 <_printf_i+0x210>
    21ae:	681a      	ldr	r2, [r3, #0]
    21b0:	1d11      	adds	r1, r2, #4
    21b2:	6019      	str	r1, [r3, #0]
    21b4:	6816      	ldr	r6, [r2, #0]
    21b6:	2100      	movs	r1, #0
    21b8:	6862      	ldr	r2, [r4, #4]
    21ba:	0030      	movs	r0, r6
    21bc:	f001 fae2 	bl	3784 <memchr>
    21c0:	2800      	cmp	r0, #0
    21c2:	d001      	beq.n	21c8 <_printf_i+0x180>
    21c4:	1b80      	subs	r0, r0, r6
    21c6:	6060      	str	r0, [r4, #4]
    21c8:	6863      	ldr	r3, [r4, #4]
    21ca:	6123      	str	r3, [r4, #16]
    21cc:	2300      	movs	r3, #0
    21ce:	9a04      	ldr	r2, [sp, #16]
    21d0:	7013      	strb	r3, [r2, #0]
    21d2:	e041      	b.n	2258 <_printf_i+0x210>
    21d4:	6923      	ldr	r3, [r4, #16]
    21d6:	0032      	movs	r2, r6
    21d8:	9906      	ldr	r1, [sp, #24]
    21da:	9805      	ldr	r0, [sp, #20]
    21dc:	9d07      	ldr	r5, [sp, #28]
    21de:	47a8      	blx	r5
    21e0:	1c43      	adds	r3, r0, #1
    21e2:	d043      	beq.n	226c <_printf_i+0x224>
    21e4:	6823      	ldr	r3, [r4, #0]
    21e6:	2500      	movs	r5, #0
    21e8:	079b      	lsls	r3, r3, #30
    21ea:	d40f      	bmi.n	220c <_printf_i+0x1c4>
    21ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    21ee:	68e0      	ldr	r0, [r4, #12]
    21f0:	4298      	cmp	r0, r3
    21f2:	da3d      	bge.n	2270 <_printf_i+0x228>
    21f4:	0018      	movs	r0, r3
    21f6:	e03b      	b.n	2270 <_printf_i+0x228>
    21f8:	0022      	movs	r2, r4
    21fa:	2301      	movs	r3, #1
    21fc:	3219      	adds	r2, #25
    21fe:	9906      	ldr	r1, [sp, #24]
    2200:	9805      	ldr	r0, [sp, #20]
    2202:	9e07      	ldr	r6, [sp, #28]
    2204:	47b0      	blx	r6
    2206:	1c43      	adds	r3, r0, #1
    2208:	d030      	beq.n	226c <_printf_i+0x224>
    220a:	3501      	adds	r5, #1
    220c:	68e3      	ldr	r3, [r4, #12]
    220e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    2210:	1a9b      	subs	r3, r3, r2
    2212:	429d      	cmp	r5, r3
    2214:	dbf0      	blt.n	21f8 <_printf_i+0x1b0>
    2216:	e7e9      	b.n	21ec <_printf_i+0x1a4>
    2218:	2d00      	cmp	r5, #0
    221a:	d0a9      	beq.n	2170 <_printf_i+0x128>
    221c:	9e04      	ldr	r6, [sp, #16]
    221e:	0028      	movs	r0, r5
    2220:	0039      	movs	r1, r7
    2222:	f002 f91f 	bl	4464 <__aeabi_uidivmod>
    2226:	9b03      	ldr	r3, [sp, #12]
    2228:	3e01      	subs	r6, #1
    222a:	5c5b      	ldrb	r3, [r3, r1]
    222c:	0028      	movs	r0, r5
    222e:	7033      	strb	r3, [r6, #0]
    2230:	0039      	movs	r1, r7
    2232:	f002 f891 	bl	4358 <__udivsi3>
    2236:	1e05      	subs	r5, r0, #0
    2238:	d1f1      	bne.n	221e <_printf_i+0x1d6>
    223a:	2f08      	cmp	r7, #8
    223c:	d109      	bne.n	2252 <_printf_i+0x20a>
    223e:	6823      	ldr	r3, [r4, #0]
    2240:	07db      	lsls	r3, r3, #31
    2242:	d506      	bpl.n	2252 <_printf_i+0x20a>
    2244:	6863      	ldr	r3, [r4, #4]
    2246:	6922      	ldr	r2, [r4, #16]
    2248:	4293      	cmp	r3, r2
    224a:	dc02      	bgt.n	2252 <_printf_i+0x20a>
    224c:	2330      	movs	r3, #48	; 0x30
    224e:	3e01      	subs	r6, #1
    2250:	7033      	strb	r3, [r6, #0]
    2252:	9b04      	ldr	r3, [sp, #16]
    2254:	1b9b      	subs	r3, r3, r6
    2256:	6123      	str	r3, [r4, #16]
    2258:	9b07      	ldr	r3, [sp, #28]
    225a:	aa09      	add	r2, sp, #36	; 0x24
    225c:	9300      	str	r3, [sp, #0]
    225e:	0021      	movs	r1, r4
    2260:	9b06      	ldr	r3, [sp, #24]
    2262:	9805      	ldr	r0, [sp, #20]
    2264:	f7ff fe82 	bl	1f6c <_printf_common>
    2268:	1c43      	adds	r3, r0, #1
    226a:	d1b3      	bne.n	21d4 <_printf_i+0x18c>
    226c:	2001      	movs	r0, #1
    226e:	4240      	negs	r0, r0
    2270:	b00b      	add	sp, #44	; 0x2c
    2272:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2274:	000065b7 	.word	0x000065b7
    2278:	000065a6 	.word	0x000065a6

0000227c <iprintf>:
    227c:	b40f      	push	{r0, r1, r2, r3}
    227e:	4b0b      	ldr	r3, [pc, #44]	; (22ac <iprintf+0x30>)
    2280:	b513      	push	{r0, r1, r4, lr}
    2282:	681c      	ldr	r4, [r3, #0]
    2284:	2c00      	cmp	r4, #0
    2286:	d005      	beq.n	2294 <iprintf+0x18>
    2288:	69a3      	ldr	r3, [r4, #24]
    228a:	2b00      	cmp	r3, #0
    228c:	d102      	bne.n	2294 <iprintf+0x18>
    228e:	0020      	movs	r0, r4
    2290:	f001 f966 	bl	3560 <__sinit>
    2294:	ab05      	add	r3, sp, #20
    2296:	9a04      	ldr	r2, [sp, #16]
    2298:	68a1      	ldr	r1, [r4, #8]
    229a:	0020      	movs	r0, r4
    229c:	9301      	str	r3, [sp, #4]
    229e:	f001 fe45 	bl	3f2c <_vfiprintf_r>
    22a2:	bc16      	pop	{r1, r2, r4}
    22a4:	bc08      	pop	{r3}
    22a6:	b004      	add	sp, #16
    22a8:	4718      	bx	r3
    22aa:	46c0      	nop			; (mov r8, r8)
    22ac:	20000018 	.word	0x20000018

000022b0 <_puts_r>:
    22b0:	b570      	push	{r4, r5, r6, lr}
    22b2:	0005      	movs	r5, r0
    22b4:	000e      	movs	r6, r1
    22b6:	2800      	cmp	r0, #0
    22b8:	d004      	beq.n	22c4 <_puts_r+0x14>
    22ba:	6983      	ldr	r3, [r0, #24]
    22bc:	2b00      	cmp	r3, #0
    22be:	d101      	bne.n	22c4 <_puts_r+0x14>
    22c0:	f001 f94e 	bl	3560 <__sinit>
    22c4:	69ab      	ldr	r3, [r5, #24]
    22c6:	68ac      	ldr	r4, [r5, #8]
    22c8:	2b00      	cmp	r3, #0
    22ca:	d102      	bne.n	22d2 <_puts_r+0x22>
    22cc:	0028      	movs	r0, r5
    22ce:	f001 f947 	bl	3560 <__sinit>
    22d2:	4b24      	ldr	r3, [pc, #144]	; (2364 <_puts_r+0xb4>)
    22d4:	429c      	cmp	r4, r3
    22d6:	d10f      	bne.n	22f8 <_puts_r+0x48>
    22d8:	686c      	ldr	r4, [r5, #4]
    22da:	89a3      	ldrh	r3, [r4, #12]
    22dc:	071b      	lsls	r3, r3, #28
    22de:	d502      	bpl.n	22e6 <_puts_r+0x36>
    22e0:	6923      	ldr	r3, [r4, #16]
    22e2:	2b00      	cmp	r3, #0
    22e4:	d120      	bne.n	2328 <_puts_r+0x78>
    22e6:	0021      	movs	r1, r4
    22e8:	0028      	movs	r0, r5
    22ea:	f000 f95f 	bl	25ac <__swsetup_r>
    22ee:	2800      	cmp	r0, #0
    22f0:	d01a      	beq.n	2328 <_puts_r+0x78>
    22f2:	2001      	movs	r0, #1
    22f4:	4240      	negs	r0, r0
    22f6:	bd70      	pop	{r4, r5, r6, pc}
    22f8:	4b1b      	ldr	r3, [pc, #108]	; (2368 <_puts_r+0xb8>)
    22fa:	429c      	cmp	r4, r3
    22fc:	d101      	bne.n	2302 <_puts_r+0x52>
    22fe:	68ac      	ldr	r4, [r5, #8]
    2300:	e7eb      	b.n	22da <_puts_r+0x2a>
    2302:	4b1a      	ldr	r3, [pc, #104]	; (236c <_puts_r+0xbc>)
    2304:	429c      	cmp	r4, r3
    2306:	d1e8      	bne.n	22da <_puts_r+0x2a>
    2308:	68ec      	ldr	r4, [r5, #12]
    230a:	e7e6      	b.n	22da <_puts_r+0x2a>
    230c:	3b01      	subs	r3, #1
    230e:	3601      	adds	r6, #1
    2310:	60a3      	str	r3, [r4, #8]
    2312:	2b00      	cmp	r3, #0
    2314:	da04      	bge.n	2320 <_puts_r+0x70>
    2316:	69a2      	ldr	r2, [r4, #24]
    2318:	4293      	cmp	r3, r2
    231a:	db16      	blt.n	234a <_puts_r+0x9a>
    231c:	290a      	cmp	r1, #10
    231e:	d014      	beq.n	234a <_puts_r+0x9a>
    2320:	6823      	ldr	r3, [r4, #0]
    2322:	1c5a      	adds	r2, r3, #1
    2324:	6022      	str	r2, [r4, #0]
    2326:	7019      	strb	r1, [r3, #0]
    2328:	7831      	ldrb	r1, [r6, #0]
    232a:	68a3      	ldr	r3, [r4, #8]
    232c:	2900      	cmp	r1, #0
    232e:	d1ed      	bne.n	230c <_puts_r+0x5c>
    2330:	3b01      	subs	r3, #1
    2332:	60a3      	str	r3, [r4, #8]
    2334:	2b00      	cmp	r3, #0
    2336:	da0f      	bge.n	2358 <_puts_r+0xa8>
    2338:	0022      	movs	r2, r4
    233a:	310a      	adds	r1, #10
    233c:	0028      	movs	r0, r5
    233e:	f000 f8df 	bl	2500 <__swbuf_r>
    2342:	1c43      	adds	r3, r0, #1
    2344:	d0d5      	beq.n	22f2 <_puts_r+0x42>
    2346:	200a      	movs	r0, #10
    2348:	e7d5      	b.n	22f6 <_puts_r+0x46>
    234a:	0022      	movs	r2, r4
    234c:	0028      	movs	r0, r5
    234e:	f000 f8d7 	bl	2500 <__swbuf_r>
    2352:	1c43      	adds	r3, r0, #1
    2354:	d1e8      	bne.n	2328 <_puts_r+0x78>
    2356:	e7cc      	b.n	22f2 <_puts_r+0x42>
    2358:	200a      	movs	r0, #10
    235a:	6823      	ldr	r3, [r4, #0]
    235c:	1c5a      	adds	r2, r3, #1
    235e:	6022      	str	r2, [r4, #0]
    2360:	7018      	strb	r0, [r3, #0]
    2362:	e7c8      	b.n	22f6 <_puts_r+0x46>
    2364:	000065f8 	.word	0x000065f8
    2368:	00006618 	.word	0x00006618
    236c:	000065d8 	.word	0x000065d8

00002370 <puts>:
    2370:	b510      	push	{r4, lr}
    2372:	4b03      	ldr	r3, [pc, #12]	; (2380 <puts+0x10>)
    2374:	0001      	movs	r1, r0
    2376:	6818      	ldr	r0, [r3, #0]
    2378:	f7ff ff9a 	bl	22b0 <_puts_r>
    237c:	bd10      	pop	{r4, pc}
    237e:	46c0      	nop			; (mov r8, r8)
    2380:	20000018 	.word	0x20000018

00002384 <setbuf>:
    2384:	424a      	negs	r2, r1
    2386:	414a      	adcs	r2, r1
    2388:	2380      	movs	r3, #128	; 0x80
    238a:	b510      	push	{r4, lr}
    238c:	0052      	lsls	r2, r2, #1
    238e:	00db      	lsls	r3, r3, #3
    2390:	f000 f802 	bl	2398 <setvbuf>
    2394:	bd10      	pop	{r4, pc}
	...

00002398 <setvbuf>:
    2398:	b5f0      	push	{r4, r5, r6, r7, lr}
    239a:	001d      	movs	r5, r3
    239c:	4b4f      	ldr	r3, [pc, #316]	; (24dc <setvbuf+0x144>)
    239e:	b085      	sub	sp, #20
    23a0:	681e      	ldr	r6, [r3, #0]
    23a2:	0004      	movs	r4, r0
    23a4:	000f      	movs	r7, r1
    23a6:	9200      	str	r2, [sp, #0]
    23a8:	2e00      	cmp	r6, #0
    23aa:	d005      	beq.n	23b8 <setvbuf+0x20>
    23ac:	69b3      	ldr	r3, [r6, #24]
    23ae:	2b00      	cmp	r3, #0
    23b0:	d102      	bne.n	23b8 <setvbuf+0x20>
    23b2:	0030      	movs	r0, r6
    23b4:	f001 f8d4 	bl	3560 <__sinit>
    23b8:	4b49      	ldr	r3, [pc, #292]	; (24e0 <setvbuf+0x148>)
    23ba:	429c      	cmp	r4, r3
    23bc:	d150      	bne.n	2460 <setvbuf+0xc8>
    23be:	6874      	ldr	r4, [r6, #4]
    23c0:	9b00      	ldr	r3, [sp, #0]
    23c2:	2b02      	cmp	r3, #2
    23c4:	d005      	beq.n	23d2 <setvbuf+0x3a>
    23c6:	2b01      	cmp	r3, #1
    23c8:	d900      	bls.n	23cc <setvbuf+0x34>
    23ca:	e084      	b.n	24d6 <setvbuf+0x13e>
    23cc:	2d00      	cmp	r5, #0
    23ce:	da00      	bge.n	23d2 <setvbuf+0x3a>
    23d0:	e081      	b.n	24d6 <setvbuf+0x13e>
    23d2:	0021      	movs	r1, r4
    23d4:	0030      	movs	r0, r6
    23d6:	f001 f855 	bl	3484 <_fflush_r>
    23da:	6b61      	ldr	r1, [r4, #52]	; 0x34
    23dc:	2900      	cmp	r1, #0
    23de:	d008      	beq.n	23f2 <setvbuf+0x5a>
    23e0:	0023      	movs	r3, r4
    23e2:	3344      	adds	r3, #68	; 0x44
    23e4:	4299      	cmp	r1, r3
    23e6:	d002      	beq.n	23ee <setvbuf+0x56>
    23e8:	0030      	movs	r0, r6
    23ea:	f001 fccf 	bl	3d8c <_free_r>
    23ee:	2300      	movs	r3, #0
    23f0:	6363      	str	r3, [r4, #52]	; 0x34
    23f2:	2300      	movs	r3, #0
    23f4:	61a3      	str	r3, [r4, #24]
    23f6:	6063      	str	r3, [r4, #4]
    23f8:	89a3      	ldrh	r3, [r4, #12]
    23fa:	061b      	lsls	r3, r3, #24
    23fc:	d503      	bpl.n	2406 <setvbuf+0x6e>
    23fe:	6921      	ldr	r1, [r4, #16]
    2400:	0030      	movs	r0, r6
    2402:	f001 fcc3 	bl	3d8c <_free_r>
    2406:	89a3      	ldrh	r3, [r4, #12]
    2408:	4a36      	ldr	r2, [pc, #216]	; (24e4 <setvbuf+0x14c>)
    240a:	4013      	ands	r3, r2
    240c:	81a3      	strh	r3, [r4, #12]
    240e:	9b00      	ldr	r3, [sp, #0]
    2410:	2b02      	cmp	r3, #2
    2412:	d05a      	beq.n	24ca <setvbuf+0x132>
    2414:	ab03      	add	r3, sp, #12
    2416:	aa02      	add	r2, sp, #8
    2418:	0021      	movs	r1, r4
    241a:	0030      	movs	r0, r6
    241c:	f001 f942 	bl	36a4 <__swhatbuf_r>
    2420:	89a3      	ldrh	r3, [r4, #12]
    2422:	4318      	orrs	r0, r3
    2424:	81a0      	strh	r0, [r4, #12]
    2426:	2d00      	cmp	r5, #0
    2428:	d124      	bne.n	2474 <setvbuf+0xdc>
    242a:	9d02      	ldr	r5, [sp, #8]
    242c:	0028      	movs	r0, r5
    242e:	f001 f99f 	bl	3770 <malloc>
    2432:	9501      	str	r5, [sp, #4]
    2434:	1e07      	subs	r7, r0, #0
    2436:	d142      	bne.n	24be <setvbuf+0x126>
    2438:	9b02      	ldr	r3, [sp, #8]
    243a:	9301      	str	r3, [sp, #4]
    243c:	42ab      	cmp	r3, r5
    243e:	d139      	bne.n	24b4 <setvbuf+0x11c>
    2440:	2001      	movs	r0, #1
    2442:	4240      	negs	r0, r0
    2444:	2302      	movs	r3, #2
    2446:	89a2      	ldrh	r2, [r4, #12]
    2448:	4313      	orrs	r3, r2
    244a:	81a3      	strh	r3, [r4, #12]
    244c:	2300      	movs	r3, #0
    244e:	60a3      	str	r3, [r4, #8]
    2450:	0023      	movs	r3, r4
    2452:	3347      	adds	r3, #71	; 0x47
    2454:	6023      	str	r3, [r4, #0]
    2456:	6123      	str	r3, [r4, #16]
    2458:	2301      	movs	r3, #1
    245a:	6163      	str	r3, [r4, #20]
    245c:	b005      	add	sp, #20
    245e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2460:	4b21      	ldr	r3, [pc, #132]	; (24e8 <setvbuf+0x150>)
    2462:	429c      	cmp	r4, r3
    2464:	d101      	bne.n	246a <setvbuf+0xd2>
    2466:	68b4      	ldr	r4, [r6, #8]
    2468:	e7aa      	b.n	23c0 <setvbuf+0x28>
    246a:	4b20      	ldr	r3, [pc, #128]	; (24ec <setvbuf+0x154>)
    246c:	429c      	cmp	r4, r3
    246e:	d1a7      	bne.n	23c0 <setvbuf+0x28>
    2470:	68f4      	ldr	r4, [r6, #12]
    2472:	e7a5      	b.n	23c0 <setvbuf+0x28>
    2474:	2f00      	cmp	r7, #0
    2476:	d0d9      	beq.n	242c <setvbuf+0x94>
    2478:	69b3      	ldr	r3, [r6, #24]
    247a:	2b00      	cmp	r3, #0
    247c:	d102      	bne.n	2484 <setvbuf+0xec>
    247e:	0030      	movs	r0, r6
    2480:	f001 f86e 	bl	3560 <__sinit>
    2484:	9b00      	ldr	r3, [sp, #0]
    2486:	2b01      	cmp	r3, #1
    2488:	d103      	bne.n	2492 <setvbuf+0xfa>
    248a:	89a3      	ldrh	r3, [r4, #12]
    248c:	9a00      	ldr	r2, [sp, #0]
    248e:	431a      	orrs	r2, r3
    2490:	81a2      	strh	r2, [r4, #12]
    2492:	2008      	movs	r0, #8
    2494:	89a3      	ldrh	r3, [r4, #12]
    2496:	6027      	str	r7, [r4, #0]
    2498:	6127      	str	r7, [r4, #16]
    249a:	6165      	str	r5, [r4, #20]
    249c:	4018      	ands	r0, r3
    249e:	d018      	beq.n	24d2 <setvbuf+0x13a>
    24a0:	2001      	movs	r0, #1
    24a2:	4018      	ands	r0, r3
    24a4:	2300      	movs	r3, #0
    24a6:	4298      	cmp	r0, r3
    24a8:	d011      	beq.n	24ce <setvbuf+0x136>
    24aa:	426d      	negs	r5, r5
    24ac:	60a3      	str	r3, [r4, #8]
    24ae:	61a5      	str	r5, [r4, #24]
    24b0:	0018      	movs	r0, r3
    24b2:	e7d3      	b.n	245c <setvbuf+0xc4>
    24b4:	9801      	ldr	r0, [sp, #4]
    24b6:	f001 f95b 	bl	3770 <malloc>
    24ba:	1e07      	subs	r7, r0, #0
    24bc:	d0c0      	beq.n	2440 <setvbuf+0xa8>
    24be:	2380      	movs	r3, #128	; 0x80
    24c0:	89a2      	ldrh	r2, [r4, #12]
    24c2:	9d01      	ldr	r5, [sp, #4]
    24c4:	4313      	orrs	r3, r2
    24c6:	81a3      	strh	r3, [r4, #12]
    24c8:	e7d6      	b.n	2478 <setvbuf+0xe0>
    24ca:	2000      	movs	r0, #0
    24cc:	e7ba      	b.n	2444 <setvbuf+0xac>
    24ce:	60a5      	str	r5, [r4, #8]
    24d0:	e7c4      	b.n	245c <setvbuf+0xc4>
    24d2:	60a0      	str	r0, [r4, #8]
    24d4:	e7c2      	b.n	245c <setvbuf+0xc4>
    24d6:	2001      	movs	r0, #1
    24d8:	4240      	negs	r0, r0
    24da:	e7bf      	b.n	245c <setvbuf+0xc4>
    24dc:	20000018 	.word	0x20000018
    24e0:	000065f8 	.word	0x000065f8
    24e4:	fffff35c 	.word	0xfffff35c
    24e8:	00006618 	.word	0x00006618
    24ec:	000065d8 	.word	0x000065d8

000024f0 <strlen>:
    24f0:	2300      	movs	r3, #0
    24f2:	5cc2      	ldrb	r2, [r0, r3]
    24f4:	3301      	adds	r3, #1
    24f6:	2a00      	cmp	r2, #0
    24f8:	d1fb      	bne.n	24f2 <strlen+0x2>
    24fa:	1e58      	subs	r0, r3, #1
    24fc:	4770      	bx	lr
	...

00002500 <__swbuf_r>:
    2500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2502:	0005      	movs	r5, r0
    2504:	000e      	movs	r6, r1
    2506:	0014      	movs	r4, r2
    2508:	2800      	cmp	r0, #0
    250a:	d004      	beq.n	2516 <__swbuf_r+0x16>
    250c:	6983      	ldr	r3, [r0, #24]
    250e:	2b00      	cmp	r3, #0
    2510:	d101      	bne.n	2516 <__swbuf_r+0x16>
    2512:	f001 f825 	bl	3560 <__sinit>
    2516:	4b22      	ldr	r3, [pc, #136]	; (25a0 <__swbuf_r+0xa0>)
    2518:	429c      	cmp	r4, r3
    251a:	d12d      	bne.n	2578 <__swbuf_r+0x78>
    251c:	686c      	ldr	r4, [r5, #4]
    251e:	69a3      	ldr	r3, [r4, #24]
    2520:	60a3      	str	r3, [r4, #8]
    2522:	89a3      	ldrh	r3, [r4, #12]
    2524:	071b      	lsls	r3, r3, #28
    2526:	d531      	bpl.n	258c <__swbuf_r+0x8c>
    2528:	6923      	ldr	r3, [r4, #16]
    252a:	2b00      	cmp	r3, #0
    252c:	d02e      	beq.n	258c <__swbuf_r+0x8c>
    252e:	6823      	ldr	r3, [r4, #0]
    2530:	6922      	ldr	r2, [r4, #16]
    2532:	b2f7      	uxtb	r7, r6
    2534:	1a98      	subs	r0, r3, r2
    2536:	6963      	ldr	r3, [r4, #20]
    2538:	b2f6      	uxtb	r6, r6
    253a:	4298      	cmp	r0, r3
    253c:	db05      	blt.n	254a <__swbuf_r+0x4a>
    253e:	0021      	movs	r1, r4
    2540:	0028      	movs	r0, r5
    2542:	f000 ff9f 	bl	3484 <_fflush_r>
    2546:	2800      	cmp	r0, #0
    2548:	d126      	bne.n	2598 <__swbuf_r+0x98>
    254a:	68a3      	ldr	r3, [r4, #8]
    254c:	3001      	adds	r0, #1
    254e:	3b01      	subs	r3, #1
    2550:	60a3      	str	r3, [r4, #8]
    2552:	6823      	ldr	r3, [r4, #0]
    2554:	1c5a      	adds	r2, r3, #1
    2556:	6022      	str	r2, [r4, #0]
    2558:	701f      	strb	r7, [r3, #0]
    255a:	6963      	ldr	r3, [r4, #20]
    255c:	4298      	cmp	r0, r3
    255e:	d004      	beq.n	256a <__swbuf_r+0x6a>
    2560:	89a3      	ldrh	r3, [r4, #12]
    2562:	07db      	lsls	r3, r3, #31
    2564:	d51a      	bpl.n	259c <__swbuf_r+0x9c>
    2566:	2e0a      	cmp	r6, #10
    2568:	d118      	bne.n	259c <__swbuf_r+0x9c>
    256a:	0021      	movs	r1, r4
    256c:	0028      	movs	r0, r5
    256e:	f000 ff89 	bl	3484 <_fflush_r>
    2572:	2800      	cmp	r0, #0
    2574:	d012      	beq.n	259c <__swbuf_r+0x9c>
    2576:	e00f      	b.n	2598 <__swbuf_r+0x98>
    2578:	4b0a      	ldr	r3, [pc, #40]	; (25a4 <__swbuf_r+0xa4>)
    257a:	429c      	cmp	r4, r3
    257c:	d101      	bne.n	2582 <__swbuf_r+0x82>
    257e:	68ac      	ldr	r4, [r5, #8]
    2580:	e7cd      	b.n	251e <__swbuf_r+0x1e>
    2582:	4b09      	ldr	r3, [pc, #36]	; (25a8 <__swbuf_r+0xa8>)
    2584:	429c      	cmp	r4, r3
    2586:	d1ca      	bne.n	251e <__swbuf_r+0x1e>
    2588:	68ec      	ldr	r4, [r5, #12]
    258a:	e7c8      	b.n	251e <__swbuf_r+0x1e>
    258c:	0021      	movs	r1, r4
    258e:	0028      	movs	r0, r5
    2590:	f000 f80c 	bl	25ac <__swsetup_r>
    2594:	2800      	cmp	r0, #0
    2596:	d0ca      	beq.n	252e <__swbuf_r+0x2e>
    2598:	2601      	movs	r6, #1
    259a:	4276      	negs	r6, r6
    259c:	0030      	movs	r0, r6
    259e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    25a0:	000065f8 	.word	0x000065f8
    25a4:	00006618 	.word	0x00006618
    25a8:	000065d8 	.word	0x000065d8

000025ac <__swsetup_r>:
    25ac:	4b36      	ldr	r3, [pc, #216]	; (2688 <__swsetup_r+0xdc>)
    25ae:	b570      	push	{r4, r5, r6, lr}
    25b0:	681d      	ldr	r5, [r3, #0]
    25b2:	0006      	movs	r6, r0
    25b4:	000c      	movs	r4, r1
    25b6:	2d00      	cmp	r5, #0
    25b8:	d005      	beq.n	25c6 <__swsetup_r+0x1a>
    25ba:	69ab      	ldr	r3, [r5, #24]
    25bc:	2b00      	cmp	r3, #0
    25be:	d102      	bne.n	25c6 <__swsetup_r+0x1a>
    25c0:	0028      	movs	r0, r5
    25c2:	f000 ffcd 	bl	3560 <__sinit>
    25c6:	4b31      	ldr	r3, [pc, #196]	; (268c <__swsetup_r+0xe0>)
    25c8:	429c      	cmp	r4, r3
    25ca:	d10f      	bne.n	25ec <__swsetup_r+0x40>
    25cc:	686c      	ldr	r4, [r5, #4]
    25ce:	230c      	movs	r3, #12
    25d0:	5ee2      	ldrsh	r2, [r4, r3]
    25d2:	b293      	uxth	r3, r2
    25d4:	0719      	lsls	r1, r3, #28
    25d6:	d42d      	bmi.n	2634 <__swsetup_r+0x88>
    25d8:	06d9      	lsls	r1, r3, #27
    25da:	d411      	bmi.n	2600 <__swsetup_r+0x54>
    25dc:	2309      	movs	r3, #9
    25de:	2001      	movs	r0, #1
    25e0:	6033      	str	r3, [r6, #0]
    25e2:	3337      	adds	r3, #55	; 0x37
    25e4:	4313      	orrs	r3, r2
    25e6:	81a3      	strh	r3, [r4, #12]
    25e8:	4240      	negs	r0, r0
    25ea:	bd70      	pop	{r4, r5, r6, pc}
    25ec:	4b28      	ldr	r3, [pc, #160]	; (2690 <__swsetup_r+0xe4>)
    25ee:	429c      	cmp	r4, r3
    25f0:	d101      	bne.n	25f6 <__swsetup_r+0x4a>
    25f2:	68ac      	ldr	r4, [r5, #8]
    25f4:	e7eb      	b.n	25ce <__swsetup_r+0x22>
    25f6:	4b27      	ldr	r3, [pc, #156]	; (2694 <__swsetup_r+0xe8>)
    25f8:	429c      	cmp	r4, r3
    25fa:	d1e8      	bne.n	25ce <__swsetup_r+0x22>
    25fc:	68ec      	ldr	r4, [r5, #12]
    25fe:	e7e6      	b.n	25ce <__swsetup_r+0x22>
    2600:	075b      	lsls	r3, r3, #29
    2602:	d513      	bpl.n	262c <__swsetup_r+0x80>
    2604:	6b61      	ldr	r1, [r4, #52]	; 0x34
    2606:	2900      	cmp	r1, #0
    2608:	d008      	beq.n	261c <__swsetup_r+0x70>
    260a:	0023      	movs	r3, r4
    260c:	3344      	adds	r3, #68	; 0x44
    260e:	4299      	cmp	r1, r3
    2610:	d002      	beq.n	2618 <__swsetup_r+0x6c>
    2612:	0030      	movs	r0, r6
    2614:	f001 fbba 	bl	3d8c <_free_r>
    2618:	2300      	movs	r3, #0
    261a:	6363      	str	r3, [r4, #52]	; 0x34
    261c:	2224      	movs	r2, #36	; 0x24
    261e:	89a3      	ldrh	r3, [r4, #12]
    2620:	4393      	bics	r3, r2
    2622:	81a3      	strh	r3, [r4, #12]
    2624:	2300      	movs	r3, #0
    2626:	6063      	str	r3, [r4, #4]
    2628:	6923      	ldr	r3, [r4, #16]
    262a:	6023      	str	r3, [r4, #0]
    262c:	2308      	movs	r3, #8
    262e:	89a2      	ldrh	r2, [r4, #12]
    2630:	4313      	orrs	r3, r2
    2632:	81a3      	strh	r3, [r4, #12]
    2634:	6923      	ldr	r3, [r4, #16]
    2636:	2b00      	cmp	r3, #0
    2638:	d10b      	bne.n	2652 <__swsetup_r+0xa6>
    263a:	21a0      	movs	r1, #160	; 0xa0
    263c:	2280      	movs	r2, #128	; 0x80
    263e:	89a3      	ldrh	r3, [r4, #12]
    2640:	0089      	lsls	r1, r1, #2
    2642:	0092      	lsls	r2, r2, #2
    2644:	400b      	ands	r3, r1
    2646:	4293      	cmp	r3, r2
    2648:	d003      	beq.n	2652 <__swsetup_r+0xa6>
    264a:	0021      	movs	r1, r4
    264c:	0030      	movs	r0, r6
    264e:	f001 f851 	bl	36f4 <__smakebuf_r>
    2652:	2301      	movs	r3, #1
    2654:	89a2      	ldrh	r2, [r4, #12]
    2656:	4013      	ands	r3, r2
    2658:	d011      	beq.n	267e <__swsetup_r+0xd2>
    265a:	2300      	movs	r3, #0
    265c:	60a3      	str	r3, [r4, #8]
    265e:	6963      	ldr	r3, [r4, #20]
    2660:	425b      	negs	r3, r3
    2662:	61a3      	str	r3, [r4, #24]
    2664:	2000      	movs	r0, #0
    2666:	6923      	ldr	r3, [r4, #16]
    2668:	4283      	cmp	r3, r0
    266a:	d1be      	bne.n	25ea <__swsetup_r+0x3e>
    266c:	230c      	movs	r3, #12
    266e:	5ee2      	ldrsh	r2, [r4, r3]
    2670:	0613      	lsls	r3, r2, #24
    2672:	d5ba      	bpl.n	25ea <__swsetup_r+0x3e>
    2674:	2340      	movs	r3, #64	; 0x40
    2676:	4313      	orrs	r3, r2
    2678:	81a3      	strh	r3, [r4, #12]
    267a:	3801      	subs	r0, #1
    267c:	e7b5      	b.n	25ea <__swsetup_r+0x3e>
    267e:	0792      	lsls	r2, r2, #30
    2680:	d400      	bmi.n	2684 <__swsetup_r+0xd8>
    2682:	6963      	ldr	r3, [r4, #20]
    2684:	60a3      	str	r3, [r4, #8]
    2686:	e7ed      	b.n	2664 <__swsetup_r+0xb8>
    2688:	20000018 	.word	0x20000018
    268c:	000065f8 	.word	0x000065f8
    2690:	00006618 	.word	0x00006618
    2694:	000065d8 	.word	0x000065d8

00002698 <quorem>:
    2698:	b5f0      	push	{r4, r5, r6, r7, lr}
    269a:	6903      	ldr	r3, [r0, #16]
    269c:	690c      	ldr	r4, [r1, #16]
    269e:	b089      	sub	sp, #36	; 0x24
    26a0:	0007      	movs	r7, r0
    26a2:	9105      	str	r1, [sp, #20]
    26a4:	2600      	movs	r6, #0
    26a6:	429c      	cmp	r4, r3
    26a8:	dc6d      	bgt.n	2786 <quorem+0xee>
    26aa:	000b      	movs	r3, r1
    26ac:	3c01      	subs	r4, #1
    26ae:	3314      	adds	r3, #20
    26b0:	00a5      	lsls	r5, r4, #2
    26b2:	9303      	str	r3, [sp, #12]
    26b4:	195b      	adds	r3, r3, r5
    26b6:	9304      	str	r3, [sp, #16]
    26b8:	0003      	movs	r3, r0
    26ba:	3314      	adds	r3, #20
    26bc:	9302      	str	r3, [sp, #8]
    26be:	195d      	adds	r5, r3, r5
    26c0:	9b04      	ldr	r3, [sp, #16]
    26c2:	6828      	ldr	r0, [r5, #0]
    26c4:	681b      	ldr	r3, [r3, #0]
    26c6:	1c59      	adds	r1, r3, #1
    26c8:	9301      	str	r3, [sp, #4]
    26ca:	f001 fe45 	bl	4358 <__udivsi3>
    26ce:	9001      	str	r0, [sp, #4]
    26d0:	42b0      	cmp	r0, r6
    26d2:	d02d      	beq.n	2730 <quorem+0x98>
    26d4:	9b03      	ldr	r3, [sp, #12]
    26d6:	9802      	ldr	r0, [sp, #8]
    26d8:	469c      	mov	ip, r3
    26da:	9606      	str	r6, [sp, #24]
    26dc:	4662      	mov	r2, ip
    26de:	ca08      	ldmia	r2!, {r3}
    26e0:	4694      	mov	ip, r2
    26e2:	9a01      	ldr	r2, [sp, #4]
    26e4:	b299      	uxth	r1, r3
    26e6:	4351      	muls	r1, r2
    26e8:	0c1b      	lsrs	r3, r3, #16
    26ea:	4353      	muls	r3, r2
    26ec:	1989      	adds	r1, r1, r6
    26ee:	0c0a      	lsrs	r2, r1, #16
    26f0:	189b      	adds	r3, r3, r2
    26f2:	9307      	str	r3, [sp, #28]
    26f4:	8802      	ldrh	r2, [r0, #0]
    26f6:	0c1e      	lsrs	r6, r3, #16
    26f8:	9b06      	ldr	r3, [sp, #24]
    26fa:	b289      	uxth	r1, r1
    26fc:	18d2      	adds	r2, r2, r3
    26fe:	6803      	ldr	r3, [r0, #0]
    2700:	1a52      	subs	r2, r2, r1
    2702:	0c19      	lsrs	r1, r3, #16
    2704:	466b      	mov	r3, sp
    2706:	8b9b      	ldrh	r3, [r3, #28]
    2708:	1acb      	subs	r3, r1, r3
    270a:	1411      	asrs	r1, r2, #16
    270c:	185b      	adds	r3, r3, r1
    270e:	1419      	asrs	r1, r3, #16
    2710:	b292      	uxth	r2, r2
    2712:	041b      	lsls	r3, r3, #16
    2714:	431a      	orrs	r2, r3
    2716:	9b04      	ldr	r3, [sp, #16]
    2718:	9106      	str	r1, [sp, #24]
    271a:	c004      	stmia	r0!, {r2}
    271c:	4563      	cmp	r3, ip
    271e:	d2dd      	bcs.n	26dc <quorem+0x44>
    2720:	682b      	ldr	r3, [r5, #0]
    2722:	2b00      	cmp	r3, #0
    2724:	d104      	bne.n	2730 <quorem+0x98>
    2726:	9b02      	ldr	r3, [sp, #8]
    2728:	3d04      	subs	r5, #4
    272a:	42ab      	cmp	r3, r5
    272c:	d32e      	bcc.n	278c <quorem+0xf4>
    272e:	613c      	str	r4, [r7, #16]
    2730:	9905      	ldr	r1, [sp, #20]
    2732:	0038      	movs	r0, r7
    2734:	f001 fa4b 	bl	3bce <__mcmp>
    2738:	2800      	cmp	r0, #0
    273a:	db23      	blt.n	2784 <quorem+0xec>
    273c:	2500      	movs	r5, #0
    273e:	9b01      	ldr	r3, [sp, #4]
    2740:	9802      	ldr	r0, [sp, #8]
    2742:	3301      	adds	r3, #1
    2744:	9903      	ldr	r1, [sp, #12]
    2746:	9301      	str	r3, [sp, #4]
    2748:	c908      	ldmia	r1!, {r3}
    274a:	8802      	ldrh	r2, [r0, #0]
    274c:	1955      	adds	r5, r2, r5
    274e:	b29a      	uxth	r2, r3
    2750:	1aaa      	subs	r2, r5, r2
    2752:	6805      	ldr	r5, [r0, #0]
    2754:	0c1b      	lsrs	r3, r3, #16
    2756:	0c2d      	lsrs	r5, r5, #16
    2758:	1aeb      	subs	r3, r5, r3
    275a:	1415      	asrs	r5, r2, #16
    275c:	195b      	adds	r3, r3, r5
    275e:	141d      	asrs	r5, r3, #16
    2760:	b292      	uxth	r2, r2
    2762:	041b      	lsls	r3, r3, #16
    2764:	4313      	orrs	r3, r2
    2766:	c008      	stmia	r0!, {r3}
    2768:	9b04      	ldr	r3, [sp, #16]
    276a:	428b      	cmp	r3, r1
    276c:	d2ec      	bcs.n	2748 <quorem+0xb0>
    276e:	9a02      	ldr	r2, [sp, #8]
    2770:	00a3      	lsls	r3, r4, #2
    2772:	18d3      	adds	r3, r2, r3
    2774:	681a      	ldr	r2, [r3, #0]
    2776:	2a00      	cmp	r2, #0
    2778:	d104      	bne.n	2784 <quorem+0xec>
    277a:	9a02      	ldr	r2, [sp, #8]
    277c:	3b04      	subs	r3, #4
    277e:	429a      	cmp	r2, r3
    2780:	d309      	bcc.n	2796 <quorem+0xfe>
    2782:	613c      	str	r4, [r7, #16]
    2784:	9e01      	ldr	r6, [sp, #4]
    2786:	0030      	movs	r0, r6
    2788:	b009      	add	sp, #36	; 0x24
    278a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    278c:	682b      	ldr	r3, [r5, #0]
    278e:	2b00      	cmp	r3, #0
    2790:	d1cd      	bne.n	272e <quorem+0x96>
    2792:	3c01      	subs	r4, #1
    2794:	e7c7      	b.n	2726 <quorem+0x8e>
    2796:	681a      	ldr	r2, [r3, #0]
    2798:	2a00      	cmp	r2, #0
    279a:	d1f2      	bne.n	2782 <quorem+0xea>
    279c:	3c01      	subs	r4, #1
    279e:	e7ec      	b.n	277a <quorem+0xe2>

000027a0 <_dtoa_r>:
    27a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    27a2:	0016      	movs	r6, r2
    27a4:	001f      	movs	r7, r3
    27a6:	6a44      	ldr	r4, [r0, #36]	; 0x24
    27a8:	b09d      	sub	sp, #116	; 0x74
    27aa:	9004      	str	r0, [sp, #16]
    27ac:	9d25      	ldr	r5, [sp, #148]	; 0x94
    27ae:	9606      	str	r6, [sp, #24]
    27b0:	9707      	str	r7, [sp, #28]
    27b2:	2c00      	cmp	r4, #0
    27b4:	d108      	bne.n	27c8 <_dtoa_r+0x28>
    27b6:	2010      	movs	r0, #16
    27b8:	f000 ffda 	bl	3770 <malloc>
    27bc:	9b04      	ldr	r3, [sp, #16]
    27be:	6258      	str	r0, [r3, #36]	; 0x24
    27c0:	6044      	str	r4, [r0, #4]
    27c2:	6084      	str	r4, [r0, #8]
    27c4:	6004      	str	r4, [r0, #0]
    27c6:	60c4      	str	r4, [r0, #12]
    27c8:	9b04      	ldr	r3, [sp, #16]
    27ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    27cc:	6819      	ldr	r1, [r3, #0]
    27ce:	2900      	cmp	r1, #0
    27d0:	d00b      	beq.n	27ea <_dtoa_r+0x4a>
    27d2:	685a      	ldr	r2, [r3, #4]
    27d4:	2301      	movs	r3, #1
    27d6:	4093      	lsls	r3, r2
    27d8:	604a      	str	r2, [r1, #4]
    27da:	608b      	str	r3, [r1, #8]
    27dc:	9804      	ldr	r0, [sp, #16]
    27de:	f001 f81d 	bl	381c <_Bfree>
    27e2:	2200      	movs	r2, #0
    27e4:	9b04      	ldr	r3, [sp, #16]
    27e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    27e8:	601a      	str	r2, [r3, #0]
    27ea:	9b07      	ldr	r3, [sp, #28]
    27ec:	2b00      	cmp	r3, #0
    27ee:	da1f      	bge.n	2830 <_dtoa_r+0x90>
    27f0:	2301      	movs	r3, #1
    27f2:	602b      	str	r3, [r5, #0]
    27f4:	007b      	lsls	r3, r7, #1
    27f6:	085b      	lsrs	r3, r3, #1
    27f8:	9307      	str	r3, [sp, #28]
    27fa:	9c07      	ldr	r4, [sp, #28]
    27fc:	4bb7      	ldr	r3, [pc, #732]	; (2adc <_dtoa_r+0x33c>)
    27fe:	0022      	movs	r2, r4
    2800:	9319      	str	r3, [sp, #100]	; 0x64
    2802:	401a      	ands	r2, r3
    2804:	429a      	cmp	r2, r3
    2806:	d116      	bne.n	2836 <_dtoa_r+0x96>
    2808:	4bb5      	ldr	r3, [pc, #724]	; (2ae0 <_dtoa_r+0x340>)
    280a:	9a24      	ldr	r2, [sp, #144]	; 0x90
    280c:	6013      	str	r3, [r2, #0]
    280e:	9b06      	ldr	r3, [sp, #24]
    2810:	2b00      	cmp	r3, #0
    2812:	d103      	bne.n	281c <_dtoa_r+0x7c>
    2814:	0324      	lsls	r4, r4, #12
    2816:	d101      	bne.n	281c <_dtoa_r+0x7c>
    2818:	f000 fd91 	bl	333e <_dtoa_r+0xb9e>
    281c:	4bb1      	ldr	r3, [pc, #708]	; (2ae4 <_dtoa_r+0x344>)
    281e:	9a26      	ldr	r2, [sp, #152]	; 0x98
    2820:	930a      	str	r3, [sp, #40]	; 0x28
    2822:	4bb1      	ldr	r3, [pc, #708]	; (2ae8 <_dtoa_r+0x348>)
    2824:	2a00      	cmp	r2, #0
    2826:	d001      	beq.n	282c <_dtoa_r+0x8c>
    2828:	f000 fd8f 	bl	334a <_dtoa_r+0xbaa>
    282c:	f000 fd8f 	bl	334e <_dtoa_r+0xbae>
    2830:	2300      	movs	r3, #0
    2832:	602b      	str	r3, [r5, #0]
    2834:	e7e1      	b.n	27fa <_dtoa_r+0x5a>
    2836:	9e06      	ldr	r6, [sp, #24]
    2838:	9f07      	ldr	r7, [sp, #28]
    283a:	2200      	movs	r2, #0
    283c:	2300      	movs	r3, #0
    283e:	0030      	movs	r0, r6
    2840:	0039      	movs	r1, r7
    2842:	f001 ff0f 	bl	4664 <__aeabi_dcmpeq>
    2846:	1e05      	subs	r5, r0, #0
    2848:	d00e      	beq.n	2868 <_dtoa_r+0xc8>
    284a:	2301      	movs	r3, #1
    284c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    284e:	6013      	str	r3, [r2, #0]
    2850:	4ba6      	ldr	r3, [pc, #664]	; (2aec <_dtoa_r+0x34c>)
    2852:	9a26      	ldr	r2, [sp, #152]	; 0x98
    2854:	930a      	str	r3, [sp, #40]	; 0x28
    2856:	2a00      	cmp	r2, #0
    2858:	d101      	bne.n	285e <_dtoa_r+0xbe>
    285a:	f000 fd78 	bl	334e <_dtoa_r+0xbae>
    285e:	4aa4      	ldr	r2, [pc, #656]	; (2af0 <_dtoa_r+0x350>)
    2860:	9926      	ldr	r1, [sp, #152]	; 0x98
    2862:	600a      	str	r2, [r1, #0]
    2864:	f000 fd73 	bl	334e <_dtoa_r+0xbae>
    2868:	ab1a      	add	r3, sp, #104	; 0x68
    286a:	9301      	str	r3, [sp, #4]
    286c:	ab1b      	add	r3, sp, #108	; 0x6c
    286e:	9300      	str	r3, [sp, #0]
    2870:	0032      	movs	r2, r6
    2872:	003b      	movs	r3, r7
    2874:	9804      	ldr	r0, [sp, #16]
    2876:	f001 fa27 	bl	3cc8 <__d2b>
    287a:	0063      	lsls	r3, r4, #1
    287c:	9005      	str	r0, [sp, #20]
    287e:	0d5b      	lsrs	r3, r3, #21
    2880:	d100      	bne.n	2884 <_dtoa_r+0xe4>
    2882:	e07f      	b.n	2984 <_dtoa_r+0x1e4>
    2884:	033a      	lsls	r2, r7, #12
    2886:	4c9b      	ldr	r4, [pc, #620]	; (2af4 <_dtoa_r+0x354>)
    2888:	0b12      	lsrs	r2, r2, #12
    288a:	4314      	orrs	r4, r2
    288c:	0021      	movs	r1, r4
    288e:	4a9a      	ldr	r2, [pc, #616]	; (2af8 <_dtoa_r+0x358>)
    2890:	0030      	movs	r0, r6
    2892:	9518      	str	r5, [sp, #96]	; 0x60
    2894:	189e      	adds	r6, r3, r2
    2896:	2200      	movs	r2, #0
    2898:	4b98      	ldr	r3, [pc, #608]	; (2afc <_dtoa_r+0x35c>)
    289a:	f003 f94f 	bl	5b3c <__aeabi_dsub>
    289e:	4a98      	ldr	r2, [pc, #608]	; (2b00 <_dtoa_r+0x360>)
    28a0:	4b98      	ldr	r3, [pc, #608]	; (2b04 <_dtoa_r+0x364>)
    28a2:	f002 fecb 	bl	563c <__aeabi_dmul>
    28a6:	4a98      	ldr	r2, [pc, #608]	; (2b08 <_dtoa_r+0x368>)
    28a8:	4b98      	ldr	r3, [pc, #608]	; (2b0c <_dtoa_r+0x36c>)
    28aa:	f001 ff83 	bl	47b4 <__aeabi_dadd>
    28ae:	0004      	movs	r4, r0
    28b0:	0030      	movs	r0, r6
    28b2:	000d      	movs	r5, r1
    28b4:	f003 fcac 	bl	6210 <__aeabi_i2d>
    28b8:	4a95      	ldr	r2, [pc, #596]	; (2b10 <_dtoa_r+0x370>)
    28ba:	4b96      	ldr	r3, [pc, #600]	; (2b14 <_dtoa_r+0x374>)
    28bc:	f002 febe 	bl	563c <__aeabi_dmul>
    28c0:	0002      	movs	r2, r0
    28c2:	000b      	movs	r3, r1
    28c4:	0020      	movs	r0, r4
    28c6:	0029      	movs	r1, r5
    28c8:	f001 ff74 	bl	47b4 <__aeabi_dadd>
    28cc:	0004      	movs	r4, r0
    28ce:	000d      	movs	r5, r1
    28d0:	f003 fc6a 	bl	61a8 <__aeabi_d2iz>
    28d4:	2200      	movs	r2, #0
    28d6:	9003      	str	r0, [sp, #12]
    28d8:	2300      	movs	r3, #0
    28da:	0020      	movs	r0, r4
    28dc:	0029      	movs	r1, r5
    28de:	f001 fec7 	bl	4670 <__aeabi_dcmplt>
    28e2:	2800      	cmp	r0, #0
    28e4:	d00e      	beq.n	2904 <_dtoa_r+0x164>
    28e6:	9803      	ldr	r0, [sp, #12]
    28e8:	f003 fc92 	bl	6210 <__aeabi_i2d>
    28ec:	000b      	movs	r3, r1
    28ee:	0002      	movs	r2, r0
    28f0:	0029      	movs	r1, r5
    28f2:	0020      	movs	r0, r4
    28f4:	f001 feb6 	bl	4664 <__aeabi_dcmpeq>
    28f8:	0003      	movs	r3, r0
    28fa:	4258      	negs	r0, r3
    28fc:	4158      	adcs	r0, r3
    28fe:	9b03      	ldr	r3, [sp, #12]
    2900:	1a1b      	subs	r3, r3, r0
    2902:	9303      	str	r3, [sp, #12]
    2904:	2301      	movs	r3, #1
    2906:	9316      	str	r3, [sp, #88]	; 0x58
    2908:	9b03      	ldr	r3, [sp, #12]
    290a:	2b16      	cmp	r3, #22
    290c:	d80f      	bhi.n	292e <_dtoa_r+0x18e>
    290e:	4982      	ldr	r1, [pc, #520]	; (2b18 <_dtoa_r+0x378>)
    2910:	00db      	lsls	r3, r3, #3
    2912:	18c9      	adds	r1, r1, r3
    2914:	6808      	ldr	r0, [r1, #0]
    2916:	6849      	ldr	r1, [r1, #4]
    2918:	9a06      	ldr	r2, [sp, #24]
    291a:	9b07      	ldr	r3, [sp, #28]
    291c:	f001 febc 	bl	4698 <__aeabi_dcmpgt>
    2920:	2800      	cmp	r0, #0
    2922:	d04b      	beq.n	29bc <_dtoa_r+0x21c>
    2924:	9b03      	ldr	r3, [sp, #12]
    2926:	3b01      	subs	r3, #1
    2928:	9303      	str	r3, [sp, #12]
    292a:	2300      	movs	r3, #0
    292c:	9316      	str	r3, [sp, #88]	; 0x58
    292e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    2930:	1b9e      	subs	r6, r3, r6
    2932:	2300      	movs	r3, #0
    2934:	930b      	str	r3, [sp, #44]	; 0x2c
    2936:	0033      	movs	r3, r6
    2938:	3b01      	subs	r3, #1
    293a:	930c      	str	r3, [sp, #48]	; 0x30
    293c:	d504      	bpl.n	2948 <_dtoa_r+0x1a8>
    293e:	2301      	movs	r3, #1
    2940:	1b9b      	subs	r3, r3, r6
    2942:	930b      	str	r3, [sp, #44]	; 0x2c
    2944:	2300      	movs	r3, #0
    2946:	930c      	str	r3, [sp, #48]	; 0x30
    2948:	9b03      	ldr	r3, [sp, #12]
    294a:	2b00      	cmp	r3, #0
    294c:	db38      	blt.n	29c0 <_dtoa_r+0x220>
    294e:	9a03      	ldr	r2, [sp, #12]
    2950:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2952:	4694      	mov	ip, r2
    2954:	4463      	add	r3, ip
    2956:	930c      	str	r3, [sp, #48]	; 0x30
    2958:	2300      	movs	r3, #0
    295a:	920f      	str	r2, [sp, #60]	; 0x3c
    295c:	9308      	str	r3, [sp, #32]
    295e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2960:	2501      	movs	r5, #1
    2962:	2b09      	cmp	r3, #9
    2964:	d900      	bls.n	2968 <_dtoa_r+0x1c8>
    2966:	e091      	b.n	2a8c <_dtoa_r+0x2ec>
    2968:	2b05      	cmp	r3, #5
    296a:	dd02      	ble.n	2972 <_dtoa_r+0x1d2>
    296c:	2500      	movs	r5, #0
    296e:	3b04      	subs	r3, #4
    2970:	9322      	str	r3, [sp, #136]	; 0x88
    2972:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2974:	1e98      	subs	r0, r3, #2
    2976:	2803      	cmp	r0, #3
    2978:	d900      	bls.n	297c <_dtoa_r+0x1dc>
    297a:	e091      	b.n	2aa0 <_dtoa_r+0x300>
    297c:	f001 fce2 	bl	4344 <__gnu_thumb1_case_uqi>
    2980:	76298482 	.word	0x76298482
    2984:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    2986:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    2988:	189e      	adds	r6, r3, r2
    298a:	4b64      	ldr	r3, [pc, #400]	; (2b1c <_dtoa_r+0x37c>)
    298c:	18f2      	adds	r2, r6, r3
    298e:	2a20      	cmp	r2, #32
    2990:	dd0f      	ble.n	29b2 <_dtoa_r+0x212>
    2992:	4b63      	ldr	r3, [pc, #396]	; (2b20 <_dtoa_r+0x380>)
    2994:	9806      	ldr	r0, [sp, #24]
    2996:	18f3      	adds	r3, r6, r3
    2998:	40d8      	lsrs	r0, r3
    299a:	2340      	movs	r3, #64	; 0x40
    299c:	1a9b      	subs	r3, r3, r2
    299e:	409c      	lsls	r4, r3
    29a0:	4320      	orrs	r0, r4
    29a2:	f003 fc77 	bl	6294 <__aeabi_ui2d>
    29a6:	2301      	movs	r3, #1
    29a8:	4c5e      	ldr	r4, [pc, #376]	; (2b24 <_dtoa_r+0x384>)
    29aa:	3e01      	subs	r6, #1
    29ac:	1909      	adds	r1, r1, r4
    29ae:	9318      	str	r3, [sp, #96]	; 0x60
    29b0:	e771      	b.n	2896 <_dtoa_r+0xf6>
    29b2:	2320      	movs	r3, #32
    29b4:	9806      	ldr	r0, [sp, #24]
    29b6:	1a9b      	subs	r3, r3, r2
    29b8:	4098      	lsls	r0, r3
    29ba:	e7f2      	b.n	29a2 <_dtoa_r+0x202>
    29bc:	9016      	str	r0, [sp, #88]	; 0x58
    29be:	e7b6      	b.n	292e <_dtoa_r+0x18e>
    29c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    29c2:	9a03      	ldr	r2, [sp, #12]
    29c4:	1a9b      	subs	r3, r3, r2
    29c6:	930b      	str	r3, [sp, #44]	; 0x2c
    29c8:	4253      	negs	r3, r2
    29ca:	9308      	str	r3, [sp, #32]
    29cc:	2300      	movs	r3, #0
    29ce:	930f      	str	r3, [sp, #60]	; 0x3c
    29d0:	e7c5      	b.n	295e <_dtoa_r+0x1be>
    29d2:	2301      	movs	r3, #1
    29d4:	930e      	str	r3, [sp, #56]	; 0x38
    29d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    29d8:	2b00      	cmp	r3, #0
    29da:	dd65      	ble.n	2aa8 <_dtoa_r+0x308>
    29dc:	001f      	movs	r7, r3
    29de:	930d      	str	r3, [sp, #52]	; 0x34
    29e0:	9a04      	ldr	r2, [sp, #16]
    29e2:	6a54      	ldr	r4, [r2, #36]	; 0x24
    29e4:	2200      	movs	r2, #0
    29e6:	6062      	str	r2, [r4, #4]
    29e8:	3204      	adds	r2, #4
    29ea:	0011      	movs	r1, r2
    29ec:	3114      	adds	r1, #20
    29ee:	4299      	cmp	r1, r3
    29f0:	d95f      	bls.n	2ab2 <_dtoa_r+0x312>
    29f2:	6861      	ldr	r1, [r4, #4]
    29f4:	9804      	ldr	r0, [sp, #16]
    29f6:	f000 fed9 	bl	37ac <_Balloc>
    29fa:	9b04      	ldr	r3, [sp, #16]
    29fc:	6020      	str	r0, [r4, #0]
    29fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2a00:	681b      	ldr	r3, [r3, #0]
    2a02:	930a      	str	r3, [sp, #40]	; 0x28
    2a04:	2f0e      	cmp	r7, #14
    2a06:	d900      	bls.n	2a0a <_dtoa_r+0x26a>
    2a08:	e105      	b.n	2c16 <_dtoa_r+0x476>
    2a0a:	2d00      	cmp	r5, #0
    2a0c:	d100      	bne.n	2a10 <_dtoa_r+0x270>
    2a0e:	e102      	b.n	2c16 <_dtoa_r+0x476>
    2a10:	9b06      	ldr	r3, [sp, #24]
    2a12:	9c07      	ldr	r4, [sp, #28]
    2a14:	9314      	str	r3, [sp, #80]	; 0x50
    2a16:	9415      	str	r4, [sp, #84]	; 0x54
    2a18:	9b03      	ldr	r3, [sp, #12]
    2a1a:	2b00      	cmp	r3, #0
    2a1c:	dc00      	bgt.n	2a20 <_dtoa_r+0x280>
    2a1e:	e085      	b.n	2b2c <_dtoa_r+0x38c>
    2a20:	001a      	movs	r2, r3
    2a22:	210f      	movs	r1, #15
    2a24:	4b3c      	ldr	r3, [pc, #240]	; (2b18 <_dtoa_r+0x378>)
    2a26:	400a      	ands	r2, r1
    2a28:	00d2      	lsls	r2, r2, #3
    2a2a:	189b      	adds	r3, r3, r2
    2a2c:	685c      	ldr	r4, [r3, #4]
    2a2e:	681b      	ldr	r3, [r3, #0]
    2a30:	9310      	str	r3, [sp, #64]	; 0x40
    2a32:	9411      	str	r4, [sp, #68]	; 0x44
    2a34:	9b03      	ldr	r3, [sp, #12]
    2a36:	2402      	movs	r4, #2
    2a38:	111d      	asrs	r5, r3, #4
    2a3a:	06eb      	lsls	r3, r5, #27
    2a3c:	d50a      	bpl.n	2a54 <_dtoa_r+0x2b4>
    2a3e:	4b3a      	ldr	r3, [pc, #232]	; (2b28 <_dtoa_r+0x388>)
    2a40:	400d      	ands	r5, r1
    2a42:	6a1a      	ldr	r2, [r3, #32]
    2a44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2a46:	9814      	ldr	r0, [sp, #80]	; 0x50
    2a48:	9915      	ldr	r1, [sp, #84]	; 0x54
    2a4a:	f002 f9c3 	bl	4dd4 <__aeabi_ddiv>
    2a4e:	9006      	str	r0, [sp, #24]
    2a50:	9107      	str	r1, [sp, #28]
    2a52:	3401      	adds	r4, #1
    2a54:	4e34      	ldr	r6, [pc, #208]	; (2b28 <_dtoa_r+0x388>)
    2a56:	2d00      	cmp	r5, #0
    2a58:	d130      	bne.n	2abc <_dtoa_r+0x31c>
    2a5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2a5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2a5e:	9806      	ldr	r0, [sp, #24]
    2a60:	9907      	ldr	r1, [sp, #28]
    2a62:	f002 f9b7 	bl	4dd4 <__aeabi_ddiv>
    2a66:	9006      	str	r0, [sp, #24]
    2a68:	9107      	str	r1, [sp, #28]
    2a6a:	e07a      	b.n	2b62 <_dtoa_r+0x3c2>
    2a6c:	2301      	movs	r3, #1
    2a6e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    2a70:	930e      	str	r3, [sp, #56]	; 0x38
    2a72:	4694      	mov	ip, r2
    2a74:	9b03      	ldr	r3, [sp, #12]
    2a76:	4463      	add	r3, ip
    2a78:	1c5f      	adds	r7, r3, #1
    2a7a:	930d      	str	r3, [sp, #52]	; 0x34
    2a7c:	1e3b      	subs	r3, r7, #0
    2a7e:	dcaf      	bgt.n	29e0 <_dtoa_r+0x240>
    2a80:	2301      	movs	r3, #1
    2a82:	e7ad      	b.n	29e0 <_dtoa_r+0x240>
    2a84:	2300      	movs	r3, #0
    2a86:	e7a5      	b.n	29d4 <_dtoa_r+0x234>
    2a88:	2300      	movs	r3, #0
    2a8a:	e7f0      	b.n	2a6e <_dtoa_r+0x2ce>
    2a8c:	2300      	movs	r3, #0
    2a8e:	950e      	str	r5, [sp, #56]	; 0x38
    2a90:	9322      	str	r3, [sp, #136]	; 0x88
    2a92:	3b01      	subs	r3, #1
    2a94:	2200      	movs	r2, #0
    2a96:	930d      	str	r3, [sp, #52]	; 0x34
    2a98:	001f      	movs	r7, r3
    2a9a:	3313      	adds	r3, #19
    2a9c:	9223      	str	r2, [sp, #140]	; 0x8c
    2a9e:	e79f      	b.n	29e0 <_dtoa_r+0x240>
    2aa0:	2301      	movs	r3, #1
    2aa2:	930e      	str	r3, [sp, #56]	; 0x38
    2aa4:	3b02      	subs	r3, #2
    2aa6:	e7f5      	b.n	2a94 <_dtoa_r+0x2f4>
    2aa8:	2301      	movs	r3, #1
    2aaa:	930d      	str	r3, [sp, #52]	; 0x34
    2aac:	001f      	movs	r7, r3
    2aae:	001a      	movs	r2, r3
    2ab0:	e7f4      	b.n	2a9c <_dtoa_r+0x2fc>
    2ab2:	6861      	ldr	r1, [r4, #4]
    2ab4:	0052      	lsls	r2, r2, #1
    2ab6:	3101      	adds	r1, #1
    2ab8:	6061      	str	r1, [r4, #4]
    2aba:	e796      	b.n	29ea <_dtoa_r+0x24a>
    2abc:	2301      	movs	r3, #1
    2abe:	421d      	tst	r5, r3
    2ac0:	d008      	beq.n	2ad4 <_dtoa_r+0x334>
    2ac2:	9810      	ldr	r0, [sp, #64]	; 0x40
    2ac4:	9911      	ldr	r1, [sp, #68]	; 0x44
    2ac6:	18e4      	adds	r4, r4, r3
    2ac8:	6832      	ldr	r2, [r6, #0]
    2aca:	6873      	ldr	r3, [r6, #4]
    2acc:	f002 fdb6 	bl	563c <__aeabi_dmul>
    2ad0:	9010      	str	r0, [sp, #64]	; 0x40
    2ad2:	9111      	str	r1, [sp, #68]	; 0x44
    2ad4:	106d      	asrs	r5, r5, #1
    2ad6:	3608      	adds	r6, #8
    2ad8:	e7bd      	b.n	2a56 <_dtoa_r+0x2b6>
    2ada:	46c0      	nop			; (mov r8, r8)
    2adc:	7ff00000 	.word	0x7ff00000
    2ae0:	0000270f 	.word	0x0000270f
    2ae4:	000065d1 	.word	0x000065d1
    2ae8:	000065d4 	.word	0x000065d4
    2aec:	000065a4 	.word	0x000065a4
    2af0:	000065a5 	.word	0x000065a5
    2af4:	3ff00000 	.word	0x3ff00000
    2af8:	fffffc01 	.word	0xfffffc01
    2afc:	3ff80000 	.word	0x3ff80000
    2b00:	636f4361 	.word	0x636f4361
    2b04:	3fd287a7 	.word	0x3fd287a7
    2b08:	8b60c8b3 	.word	0x8b60c8b3
    2b0c:	3fc68a28 	.word	0x3fc68a28
    2b10:	509f79fb 	.word	0x509f79fb
    2b14:	3fd34413 	.word	0x3fd34413
    2b18:	00006660 	.word	0x00006660
    2b1c:	00000432 	.word	0x00000432
    2b20:	00000412 	.word	0x00000412
    2b24:	fe100000 	.word	0xfe100000
    2b28:	00006638 	.word	0x00006638
    2b2c:	9b03      	ldr	r3, [sp, #12]
    2b2e:	2402      	movs	r4, #2
    2b30:	2b00      	cmp	r3, #0
    2b32:	d016      	beq.n	2b62 <_dtoa_r+0x3c2>
    2b34:	9814      	ldr	r0, [sp, #80]	; 0x50
    2b36:	9915      	ldr	r1, [sp, #84]	; 0x54
    2b38:	425d      	negs	r5, r3
    2b3a:	230f      	movs	r3, #15
    2b3c:	4aca      	ldr	r2, [pc, #808]	; (2e68 <_dtoa_r+0x6c8>)
    2b3e:	402b      	ands	r3, r5
    2b40:	00db      	lsls	r3, r3, #3
    2b42:	18d3      	adds	r3, r2, r3
    2b44:	681a      	ldr	r2, [r3, #0]
    2b46:	685b      	ldr	r3, [r3, #4]
    2b48:	f002 fd78 	bl	563c <__aeabi_dmul>
    2b4c:	2300      	movs	r3, #0
    2b4e:	9006      	str	r0, [sp, #24]
    2b50:	9107      	str	r1, [sp, #28]
    2b52:	4ec6      	ldr	r6, [pc, #792]	; (2e6c <_dtoa_r+0x6cc>)
    2b54:	112d      	asrs	r5, r5, #4
    2b56:	2d00      	cmp	r5, #0
    2b58:	d000      	beq.n	2b5c <_dtoa_r+0x3bc>
    2b5a:	e08c      	b.n	2c76 <_dtoa_r+0x4d6>
    2b5c:	2b00      	cmp	r3, #0
    2b5e:	d000      	beq.n	2b62 <_dtoa_r+0x3c2>
    2b60:	e781      	b.n	2a66 <_dtoa_r+0x2c6>
    2b62:	9b16      	ldr	r3, [sp, #88]	; 0x58
    2b64:	2b00      	cmp	r3, #0
    2b66:	d100      	bne.n	2b6a <_dtoa_r+0x3ca>
    2b68:	e091      	b.n	2c8e <_dtoa_r+0x4ee>
    2b6a:	9a06      	ldr	r2, [sp, #24]
    2b6c:	9b07      	ldr	r3, [sp, #28]
    2b6e:	9210      	str	r2, [sp, #64]	; 0x40
    2b70:	9311      	str	r3, [sp, #68]	; 0x44
    2b72:	9810      	ldr	r0, [sp, #64]	; 0x40
    2b74:	9911      	ldr	r1, [sp, #68]	; 0x44
    2b76:	2200      	movs	r2, #0
    2b78:	4bbd      	ldr	r3, [pc, #756]	; (2e70 <_dtoa_r+0x6d0>)
    2b7a:	f001 fd79 	bl	4670 <__aeabi_dcmplt>
    2b7e:	2800      	cmp	r0, #0
    2b80:	d100      	bne.n	2b84 <_dtoa_r+0x3e4>
    2b82:	e084      	b.n	2c8e <_dtoa_r+0x4ee>
    2b84:	2f00      	cmp	r7, #0
    2b86:	d100      	bne.n	2b8a <_dtoa_r+0x3ea>
    2b88:	e081      	b.n	2c8e <_dtoa_r+0x4ee>
    2b8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    2b8c:	2b00      	cmp	r3, #0
    2b8e:	dd3e      	ble.n	2c0e <_dtoa_r+0x46e>
    2b90:	9810      	ldr	r0, [sp, #64]	; 0x40
    2b92:	9911      	ldr	r1, [sp, #68]	; 0x44
    2b94:	9b03      	ldr	r3, [sp, #12]
    2b96:	2200      	movs	r2, #0
    2b98:	1e5e      	subs	r6, r3, #1
    2b9a:	4bb6      	ldr	r3, [pc, #728]	; (2e74 <_dtoa_r+0x6d4>)
    2b9c:	f002 fd4e 	bl	563c <__aeabi_dmul>
    2ba0:	9006      	str	r0, [sp, #24]
    2ba2:	9107      	str	r1, [sp, #28]
    2ba4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    2ba6:	3401      	adds	r4, #1
    2ba8:	0020      	movs	r0, r4
    2baa:	f003 fb31 	bl	6210 <__aeabi_i2d>
    2bae:	9a06      	ldr	r2, [sp, #24]
    2bb0:	9b07      	ldr	r3, [sp, #28]
    2bb2:	f002 fd43 	bl	563c <__aeabi_dmul>
    2bb6:	2200      	movs	r2, #0
    2bb8:	4baf      	ldr	r3, [pc, #700]	; (2e78 <_dtoa_r+0x6d8>)
    2bba:	f001 fdfb 	bl	47b4 <__aeabi_dadd>
    2bbe:	9012      	str	r0, [sp, #72]	; 0x48
    2bc0:	9113      	str	r1, [sp, #76]	; 0x4c
    2bc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2bc4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    2bc6:	4aad      	ldr	r2, [pc, #692]	; (2e7c <_dtoa_r+0x6dc>)
    2bc8:	9310      	str	r3, [sp, #64]	; 0x40
    2bca:	9411      	str	r4, [sp, #68]	; 0x44
    2bcc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    2bce:	189c      	adds	r4, r3, r2
    2bd0:	9411      	str	r4, [sp, #68]	; 0x44
    2bd2:	2d00      	cmp	r5, #0
    2bd4:	d15e      	bne.n	2c94 <_dtoa_r+0x4f4>
    2bd6:	9806      	ldr	r0, [sp, #24]
    2bd8:	9907      	ldr	r1, [sp, #28]
    2bda:	2200      	movs	r2, #0
    2bdc:	4ba8      	ldr	r3, [pc, #672]	; (2e80 <_dtoa_r+0x6e0>)
    2bde:	f002 ffad 	bl	5b3c <__aeabi_dsub>
    2be2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2be4:	0023      	movs	r3, r4
    2be6:	9006      	str	r0, [sp, #24]
    2be8:	9107      	str	r1, [sp, #28]
    2bea:	f001 fd55 	bl	4698 <__aeabi_dcmpgt>
    2bee:	2800      	cmp	r0, #0
    2bf0:	d000      	beq.n	2bf4 <_dtoa_r+0x454>
    2bf2:	e301      	b.n	31f8 <_dtoa_r+0xa58>
    2bf4:	48a3      	ldr	r0, [pc, #652]	; (2e84 <_dtoa_r+0x6e4>)
    2bf6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    2bf8:	4684      	mov	ip, r0
    2bfa:	4461      	add	r1, ip
    2bfc:	000b      	movs	r3, r1
    2bfe:	9806      	ldr	r0, [sp, #24]
    2c00:	9907      	ldr	r1, [sp, #28]
    2c02:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2c04:	f001 fd34 	bl	4670 <__aeabi_dcmplt>
    2c08:	2800      	cmp	r0, #0
    2c0a:	d000      	beq.n	2c0e <_dtoa_r+0x46e>
    2c0c:	e2e8      	b.n	31e0 <_dtoa_r+0xa40>
    2c0e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    2c10:	9c15      	ldr	r4, [sp, #84]	; 0x54
    2c12:	9306      	str	r3, [sp, #24]
    2c14:	9407      	str	r4, [sp, #28]
    2c16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    2c18:	2b00      	cmp	r3, #0
    2c1a:	da00      	bge.n	2c1e <_dtoa_r+0x47e>
    2c1c:	e157      	b.n	2ece <_dtoa_r+0x72e>
    2c1e:	9a03      	ldr	r2, [sp, #12]
    2c20:	2a0e      	cmp	r2, #14
    2c22:	dd00      	ble.n	2c26 <_dtoa_r+0x486>
    2c24:	e153      	b.n	2ece <_dtoa_r+0x72e>
    2c26:	4b90      	ldr	r3, [pc, #576]	; (2e68 <_dtoa_r+0x6c8>)
    2c28:	00d2      	lsls	r2, r2, #3
    2c2a:	189b      	adds	r3, r3, r2
    2c2c:	685c      	ldr	r4, [r3, #4]
    2c2e:	681b      	ldr	r3, [r3, #0]
    2c30:	9308      	str	r3, [sp, #32]
    2c32:	9409      	str	r4, [sp, #36]	; 0x24
    2c34:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    2c36:	2b00      	cmp	r3, #0
    2c38:	db00      	blt.n	2c3c <_dtoa_r+0x49c>
    2c3a:	e0ce      	b.n	2dda <_dtoa_r+0x63a>
    2c3c:	2f00      	cmp	r7, #0
    2c3e:	dd00      	ble.n	2c42 <_dtoa_r+0x4a2>
    2c40:	e0cb      	b.n	2dda <_dtoa_r+0x63a>
    2c42:	d000      	beq.n	2c46 <_dtoa_r+0x4a6>
    2c44:	e2cf      	b.n	31e6 <_dtoa_r+0xa46>
    2c46:	9808      	ldr	r0, [sp, #32]
    2c48:	9909      	ldr	r1, [sp, #36]	; 0x24
    2c4a:	2200      	movs	r2, #0
    2c4c:	4b8c      	ldr	r3, [pc, #560]	; (2e80 <_dtoa_r+0x6e0>)
    2c4e:	f002 fcf5 	bl	563c <__aeabi_dmul>
    2c52:	9a06      	ldr	r2, [sp, #24]
    2c54:	9b07      	ldr	r3, [sp, #28]
    2c56:	f001 fd29 	bl	46ac <__aeabi_dcmpge>
    2c5a:	003e      	movs	r6, r7
    2c5c:	9708      	str	r7, [sp, #32]
    2c5e:	2800      	cmp	r0, #0
    2c60:	d000      	beq.n	2c64 <_dtoa_r+0x4c4>
    2c62:	e2a4      	b.n	31ae <_dtoa_r+0xa0e>
    2c64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2c66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2c68:	1c5d      	adds	r5, r3, #1
    2c6a:	2331      	movs	r3, #49	; 0x31
    2c6c:	7013      	strb	r3, [r2, #0]
    2c6e:	9b03      	ldr	r3, [sp, #12]
    2c70:	3301      	adds	r3, #1
    2c72:	9303      	str	r3, [sp, #12]
    2c74:	e29f      	b.n	31b6 <_dtoa_r+0xa16>
    2c76:	2201      	movs	r2, #1
    2c78:	4215      	tst	r5, r2
    2c7a:	d005      	beq.n	2c88 <_dtoa_r+0x4e8>
    2c7c:	18a4      	adds	r4, r4, r2
    2c7e:	6832      	ldr	r2, [r6, #0]
    2c80:	6873      	ldr	r3, [r6, #4]
    2c82:	f002 fcdb 	bl	563c <__aeabi_dmul>
    2c86:	2301      	movs	r3, #1
    2c88:	106d      	asrs	r5, r5, #1
    2c8a:	3608      	adds	r6, #8
    2c8c:	e763      	b.n	2b56 <_dtoa_r+0x3b6>
    2c8e:	9e03      	ldr	r6, [sp, #12]
    2c90:	003d      	movs	r5, r7
    2c92:	e789      	b.n	2ba8 <_dtoa_r+0x408>
    2c94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2c96:	1e69      	subs	r1, r5, #1
    2c98:	1952      	adds	r2, r2, r5
    2c9a:	9217      	str	r2, [sp, #92]	; 0x5c
    2c9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2c9e:	4b72      	ldr	r3, [pc, #456]	; (2e68 <_dtoa_r+0x6c8>)
    2ca0:	00c9      	lsls	r1, r1, #3
    2ca2:	2a00      	cmp	r2, #0
    2ca4:	d04a      	beq.n	2d3c <_dtoa_r+0x59c>
    2ca6:	185b      	adds	r3, r3, r1
    2ca8:	681a      	ldr	r2, [r3, #0]
    2caa:	685b      	ldr	r3, [r3, #4]
    2cac:	2000      	movs	r0, #0
    2cae:	4976      	ldr	r1, [pc, #472]	; (2e88 <_dtoa_r+0x6e8>)
    2cb0:	f002 f890 	bl	4dd4 <__aeabi_ddiv>
    2cb4:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2cb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2cb8:	f002 ff40 	bl	5b3c <__aeabi_dsub>
    2cbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2cbe:	9010      	str	r0, [sp, #64]	; 0x40
    2cc0:	9111      	str	r1, [sp, #68]	; 0x44
    2cc2:	9312      	str	r3, [sp, #72]	; 0x48
    2cc4:	9806      	ldr	r0, [sp, #24]
    2cc6:	9907      	ldr	r1, [sp, #28]
    2cc8:	f003 fa6e 	bl	61a8 <__aeabi_d2iz>
    2ccc:	0004      	movs	r4, r0
    2cce:	f003 fa9f 	bl	6210 <__aeabi_i2d>
    2cd2:	0002      	movs	r2, r0
    2cd4:	000b      	movs	r3, r1
    2cd6:	9806      	ldr	r0, [sp, #24]
    2cd8:	9907      	ldr	r1, [sp, #28]
    2cda:	f002 ff2f 	bl	5b3c <__aeabi_dsub>
    2cde:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2ce0:	3430      	adds	r4, #48	; 0x30
    2ce2:	1c5d      	adds	r5, r3, #1
    2ce4:	701c      	strb	r4, [r3, #0]
    2ce6:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2ce8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2cea:	9006      	str	r0, [sp, #24]
    2cec:	9107      	str	r1, [sp, #28]
    2cee:	f001 fcbf 	bl	4670 <__aeabi_dcmplt>
    2cf2:	2800      	cmp	r0, #0
    2cf4:	d165      	bne.n	2dc2 <_dtoa_r+0x622>
    2cf6:	9a06      	ldr	r2, [sp, #24]
    2cf8:	9b07      	ldr	r3, [sp, #28]
    2cfa:	2000      	movs	r0, #0
    2cfc:	495c      	ldr	r1, [pc, #368]	; (2e70 <_dtoa_r+0x6d0>)
    2cfe:	f002 ff1d 	bl	5b3c <__aeabi_dsub>
    2d02:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2d04:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2d06:	f001 fcb3 	bl	4670 <__aeabi_dcmplt>
    2d0a:	2800      	cmp	r0, #0
    2d0c:	d000      	beq.n	2d10 <_dtoa_r+0x570>
    2d0e:	e0be      	b.n	2e8e <_dtoa_r+0x6ee>
    2d10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    2d12:	429d      	cmp	r5, r3
    2d14:	d100      	bne.n	2d18 <_dtoa_r+0x578>
    2d16:	e77a      	b.n	2c0e <_dtoa_r+0x46e>
    2d18:	9810      	ldr	r0, [sp, #64]	; 0x40
    2d1a:	9911      	ldr	r1, [sp, #68]	; 0x44
    2d1c:	2200      	movs	r2, #0
    2d1e:	4b55      	ldr	r3, [pc, #340]	; (2e74 <_dtoa_r+0x6d4>)
    2d20:	f002 fc8c 	bl	563c <__aeabi_dmul>
    2d24:	2200      	movs	r2, #0
    2d26:	9010      	str	r0, [sp, #64]	; 0x40
    2d28:	9111      	str	r1, [sp, #68]	; 0x44
    2d2a:	9806      	ldr	r0, [sp, #24]
    2d2c:	9907      	ldr	r1, [sp, #28]
    2d2e:	4b51      	ldr	r3, [pc, #324]	; (2e74 <_dtoa_r+0x6d4>)
    2d30:	f002 fc84 	bl	563c <__aeabi_dmul>
    2d34:	9512      	str	r5, [sp, #72]	; 0x48
    2d36:	9006      	str	r0, [sp, #24]
    2d38:	9107      	str	r1, [sp, #28]
    2d3a:	e7c3      	b.n	2cc4 <_dtoa_r+0x524>
    2d3c:	1859      	adds	r1, r3, r1
    2d3e:	6808      	ldr	r0, [r1, #0]
    2d40:	6849      	ldr	r1, [r1, #4]
    2d42:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2d44:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2d46:	f002 fc79 	bl	563c <__aeabi_dmul>
    2d4a:	9010      	str	r0, [sp, #64]	; 0x40
    2d4c:	9111      	str	r1, [sp, #68]	; 0x44
    2d4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    2d50:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    2d52:	9806      	ldr	r0, [sp, #24]
    2d54:	9907      	ldr	r1, [sp, #28]
    2d56:	f003 fa27 	bl	61a8 <__aeabi_d2iz>
    2d5a:	9012      	str	r0, [sp, #72]	; 0x48
    2d5c:	f003 fa58 	bl	6210 <__aeabi_i2d>
    2d60:	0002      	movs	r2, r0
    2d62:	000b      	movs	r3, r1
    2d64:	9806      	ldr	r0, [sp, #24]
    2d66:	9907      	ldr	r1, [sp, #28]
    2d68:	f002 fee8 	bl	5b3c <__aeabi_dsub>
    2d6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2d6e:	9006      	str	r0, [sp, #24]
    2d70:	9107      	str	r1, [sp, #28]
    2d72:	3330      	adds	r3, #48	; 0x30
    2d74:	7023      	strb	r3, [r4, #0]
    2d76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    2d78:	3401      	adds	r4, #1
    2d7a:	2200      	movs	r2, #0
    2d7c:	42a3      	cmp	r3, r4
    2d7e:	d124      	bne.n	2dca <_dtoa_r+0x62a>
    2d80:	4b41      	ldr	r3, [pc, #260]	; (2e88 <_dtoa_r+0x6e8>)
    2d82:	9810      	ldr	r0, [sp, #64]	; 0x40
    2d84:	9911      	ldr	r1, [sp, #68]	; 0x44
    2d86:	f001 fd15 	bl	47b4 <__aeabi_dadd>
    2d8a:	0002      	movs	r2, r0
    2d8c:	000b      	movs	r3, r1
    2d8e:	9806      	ldr	r0, [sp, #24]
    2d90:	9907      	ldr	r1, [sp, #28]
    2d92:	f001 fc81 	bl	4698 <__aeabi_dcmpgt>
    2d96:	2800      	cmp	r0, #0
    2d98:	d000      	beq.n	2d9c <_dtoa_r+0x5fc>
    2d9a:	e078      	b.n	2e8e <_dtoa_r+0x6ee>
    2d9c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2d9e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2da0:	2000      	movs	r0, #0
    2da2:	4939      	ldr	r1, [pc, #228]	; (2e88 <_dtoa_r+0x6e8>)
    2da4:	f002 feca 	bl	5b3c <__aeabi_dsub>
    2da8:	0002      	movs	r2, r0
    2daa:	000b      	movs	r3, r1
    2dac:	9806      	ldr	r0, [sp, #24]
    2dae:	9907      	ldr	r1, [sp, #28]
    2db0:	f001 fc5e 	bl	4670 <__aeabi_dcmplt>
    2db4:	2800      	cmp	r0, #0
    2db6:	d100      	bne.n	2dba <_dtoa_r+0x61a>
    2db8:	e729      	b.n	2c0e <_dtoa_r+0x46e>
    2dba:	1e6b      	subs	r3, r5, #1
    2dbc:	781a      	ldrb	r2, [r3, #0]
    2dbe:	2a30      	cmp	r2, #48	; 0x30
    2dc0:	d001      	beq.n	2dc6 <_dtoa_r+0x626>
    2dc2:	9603      	str	r6, [sp, #12]
    2dc4:	e03f      	b.n	2e46 <_dtoa_r+0x6a6>
    2dc6:	001d      	movs	r5, r3
    2dc8:	e7f7      	b.n	2dba <_dtoa_r+0x61a>
    2dca:	9806      	ldr	r0, [sp, #24]
    2dcc:	9907      	ldr	r1, [sp, #28]
    2dce:	4b29      	ldr	r3, [pc, #164]	; (2e74 <_dtoa_r+0x6d4>)
    2dd0:	f002 fc34 	bl	563c <__aeabi_dmul>
    2dd4:	9006      	str	r0, [sp, #24]
    2dd6:	9107      	str	r1, [sp, #28]
    2dd8:	e7bb      	b.n	2d52 <_dtoa_r+0x5b2>
    2dda:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    2ddc:	9a08      	ldr	r2, [sp, #32]
    2dde:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2de0:	9806      	ldr	r0, [sp, #24]
    2de2:	9907      	ldr	r1, [sp, #28]
    2de4:	f001 fff6 	bl	4dd4 <__aeabi_ddiv>
    2de8:	f003 f9de 	bl	61a8 <__aeabi_d2iz>
    2dec:	0004      	movs	r4, r0
    2dee:	f003 fa0f 	bl	6210 <__aeabi_i2d>
    2df2:	9a08      	ldr	r2, [sp, #32]
    2df4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2df6:	f002 fc21 	bl	563c <__aeabi_dmul>
    2dfa:	000b      	movs	r3, r1
    2dfc:	0002      	movs	r2, r0
    2dfe:	9806      	ldr	r0, [sp, #24]
    2e00:	9907      	ldr	r1, [sp, #28]
    2e02:	f002 fe9b 	bl	5b3c <__aeabi_dsub>
    2e06:	0023      	movs	r3, r4
    2e08:	3330      	adds	r3, #48	; 0x30
    2e0a:	7033      	strb	r3, [r6, #0]
    2e0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2e0e:	1c75      	adds	r5, r6, #1
    2e10:	1aeb      	subs	r3, r5, r3
    2e12:	429f      	cmp	r7, r3
    2e14:	d14c      	bne.n	2eb0 <_dtoa_r+0x710>
    2e16:	0002      	movs	r2, r0
    2e18:	000b      	movs	r3, r1
    2e1a:	f001 fccb 	bl	47b4 <__aeabi_dadd>
    2e1e:	0006      	movs	r6, r0
    2e20:	000f      	movs	r7, r1
    2e22:	0002      	movs	r2, r0
    2e24:	000b      	movs	r3, r1
    2e26:	9808      	ldr	r0, [sp, #32]
    2e28:	9909      	ldr	r1, [sp, #36]	; 0x24
    2e2a:	f001 fc21 	bl	4670 <__aeabi_dcmplt>
    2e2e:	2800      	cmp	r0, #0
    2e30:	d12c      	bne.n	2e8c <_dtoa_r+0x6ec>
    2e32:	9808      	ldr	r0, [sp, #32]
    2e34:	9909      	ldr	r1, [sp, #36]	; 0x24
    2e36:	0032      	movs	r2, r6
    2e38:	003b      	movs	r3, r7
    2e3a:	f001 fc13 	bl	4664 <__aeabi_dcmpeq>
    2e3e:	2800      	cmp	r0, #0
    2e40:	d001      	beq.n	2e46 <_dtoa_r+0x6a6>
    2e42:	07e3      	lsls	r3, r4, #31
    2e44:	d422      	bmi.n	2e8c <_dtoa_r+0x6ec>
    2e46:	9905      	ldr	r1, [sp, #20]
    2e48:	9804      	ldr	r0, [sp, #16]
    2e4a:	f000 fce7 	bl	381c <_Bfree>
    2e4e:	2300      	movs	r3, #0
    2e50:	702b      	strb	r3, [r5, #0]
    2e52:	9b03      	ldr	r3, [sp, #12]
    2e54:	9a24      	ldr	r2, [sp, #144]	; 0x90
    2e56:	3301      	adds	r3, #1
    2e58:	6013      	str	r3, [r2, #0]
    2e5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    2e5c:	2b00      	cmp	r3, #0
    2e5e:	d100      	bne.n	2e62 <_dtoa_r+0x6c2>
    2e60:	e275      	b.n	334e <_dtoa_r+0xbae>
    2e62:	601d      	str	r5, [r3, #0]
    2e64:	e273      	b.n	334e <_dtoa_r+0xbae>
    2e66:	46c0      	nop			; (mov r8, r8)
    2e68:	00006660 	.word	0x00006660
    2e6c:	00006638 	.word	0x00006638
    2e70:	3ff00000 	.word	0x3ff00000
    2e74:	40240000 	.word	0x40240000
    2e78:	401c0000 	.word	0x401c0000
    2e7c:	fcc00000 	.word	0xfcc00000
    2e80:	40140000 	.word	0x40140000
    2e84:	7cc00000 	.word	0x7cc00000
    2e88:	3fe00000 	.word	0x3fe00000
    2e8c:	9e03      	ldr	r6, [sp, #12]
    2e8e:	1e6b      	subs	r3, r5, #1
    2e90:	781a      	ldrb	r2, [r3, #0]
    2e92:	2a39      	cmp	r2, #57	; 0x39
    2e94:	d106      	bne.n	2ea4 <_dtoa_r+0x704>
    2e96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2e98:	429a      	cmp	r2, r3
    2e9a:	d107      	bne.n	2eac <_dtoa_r+0x70c>
    2e9c:	2330      	movs	r3, #48	; 0x30
    2e9e:	7013      	strb	r3, [r2, #0]
    2ea0:	0013      	movs	r3, r2
    2ea2:	3601      	adds	r6, #1
    2ea4:	781a      	ldrb	r2, [r3, #0]
    2ea6:	3201      	adds	r2, #1
    2ea8:	701a      	strb	r2, [r3, #0]
    2eaa:	e78a      	b.n	2dc2 <_dtoa_r+0x622>
    2eac:	001d      	movs	r5, r3
    2eae:	e7ee      	b.n	2e8e <_dtoa_r+0x6ee>
    2eb0:	2200      	movs	r2, #0
    2eb2:	4bcf      	ldr	r3, [pc, #828]	; (31f0 <_dtoa_r+0xa50>)
    2eb4:	f002 fbc2 	bl	563c <__aeabi_dmul>
    2eb8:	2200      	movs	r2, #0
    2eba:	2300      	movs	r3, #0
    2ebc:	9006      	str	r0, [sp, #24]
    2ebe:	9107      	str	r1, [sp, #28]
    2ec0:	002e      	movs	r6, r5
    2ec2:	f001 fbcf 	bl	4664 <__aeabi_dcmpeq>
    2ec6:	2800      	cmp	r0, #0
    2ec8:	d100      	bne.n	2ecc <_dtoa_r+0x72c>
    2eca:	e787      	b.n	2ddc <_dtoa_r+0x63c>
    2ecc:	e7bb      	b.n	2e46 <_dtoa_r+0x6a6>
    2ece:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2ed0:	2a00      	cmp	r2, #0
    2ed2:	d100      	bne.n	2ed6 <_dtoa_r+0x736>
    2ed4:	e087      	b.n	2fe6 <_dtoa_r+0x846>
    2ed6:	9a22      	ldr	r2, [sp, #136]	; 0x88
    2ed8:	2a01      	cmp	r2, #1
    2eda:	dc6e      	bgt.n	2fba <_dtoa_r+0x81a>
    2edc:	9a18      	ldr	r2, [sp, #96]	; 0x60
    2ede:	2a00      	cmp	r2, #0
    2ee0:	d067      	beq.n	2fb2 <_dtoa_r+0x812>
    2ee2:	4ac4      	ldr	r2, [pc, #784]	; (31f4 <_dtoa_r+0xa54>)
    2ee4:	189b      	adds	r3, r3, r2
    2ee6:	9d08      	ldr	r5, [sp, #32]
    2ee8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    2eea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    2eec:	2101      	movs	r1, #1
    2eee:	18d2      	adds	r2, r2, r3
    2ef0:	920b      	str	r2, [sp, #44]	; 0x2c
    2ef2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2ef4:	9804      	ldr	r0, [sp, #16]
    2ef6:	18d3      	adds	r3, r2, r3
    2ef8:	930c      	str	r3, [sp, #48]	; 0x30
    2efa:	f000 fd2d 	bl	3958 <__i2b>
    2efe:	0006      	movs	r6, r0
    2f00:	2c00      	cmp	r4, #0
    2f02:	dd0e      	ble.n	2f22 <_dtoa_r+0x782>
    2f04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2f06:	2b00      	cmp	r3, #0
    2f08:	dd0b      	ble.n	2f22 <_dtoa_r+0x782>
    2f0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2f0c:	0023      	movs	r3, r4
    2f0e:	4294      	cmp	r4, r2
    2f10:	dd00      	ble.n	2f14 <_dtoa_r+0x774>
    2f12:	0013      	movs	r3, r2
    2f14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    2f16:	1ae4      	subs	r4, r4, r3
    2f18:	1ad2      	subs	r2, r2, r3
    2f1a:	920b      	str	r2, [sp, #44]	; 0x2c
    2f1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2f1e:	1ad3      	subs	r3, r2, r3
    2f20:	930c      	str	r3, [sp, #48]	; 0x30
    2f22:	9b08      	ldr	r3, [sp, #32]
    2f24:	2b00      	cmp	r3, #0
    2f26:	d01e      	beq.n	2f66 <_dtoa_r+0x7c6>
    2f28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    2f2a:	2b00      	cmp	r3, #0
    2f2c:	d05f      	beq.n	2fee <_dtoa_r+0x84e>
    2f2e:	2d00      	cmp	r5, #0
    2f30:	dd11      	ble.n	2f56 <_dtoa_r+0x7b6>
    2f32:	0031      	movs	r1, r6
    2f34:	002a      	movs	r2, r5
    2f36:	9804      	ldr	r0, [sp, #16]
    2f38:	f000 fda6 	bl	3a88 <__pow5mult>
    2f3c:	9a05      	ldr	r2, [sp, #20]
    2f3e:	0001      	movs	r1, r0
    2f40:	0006      	movs	r6, r0
    2f42:	9804      	ldr	r0, [sp, #16]
    2f44:	f000 fd11 	bl	396a <__multiply>
    2f48:	9905      	ldr	r1, [sp, #20]
    2f4a:	9010      	str	r0, [sp, #64]	; 0x40
    2f4c:	9804      	ldr	r0, [sp, #16]
    2f4e:	f000 fc65 	bl	381c <_Bfree>
    2f52:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2f54:	9305      	str	r3, [sp, #20]
    2f56:	9b08      	ldr	r3, [sp, #32]
    2f58:	1b5a      	subs	r2, r3, r5
    2f5a:	d004      	beq.n	2f66 <_dtoa_r+0x7c6>
    2f5c:	9905      	ldr	r1, [sp, #20]
    2f5e:	9804      	ldr	r0, [sp, #16]
    2f60:	f000 fd92 	bl	3a88 <__pow5mult>
    2f64:	9005      	str	r0, [sp, #20]
    2f66:	2101      	movs	r1, #1
    2f68:	9804      	ldr	r0, [sp, #16]
    2f6a:	f000 fcf5 	bl	3958 <__i2b>
    2f6e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2f70:	9008      	str	r0, [sp, #32]
    2f72:	2b00      	cmp	r3, #0
    2f74:	dd3d      	ble.n	2ff2 <_dtoa_r+0x852>
    2f76:	001a      	movs	r2, r3
    2f78:	0001      	movs	r1, r0
    2f7a:	9804      	ldr	r0, [sp, #16]
    2f7c:	f000 fd84 	bl	3a88 <__pow5mult>
    2f80:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2f82:	9008      	str	r0, [sp, #32]
    2f84:	2500      	movs	r5, #0
    2f86:	2b01      	cmp	r3, #1
    2f88:	dc3b      	bgt.n	3002 <_dtoa_r+0x862>
    2f8a:	2500      	movs	r5, #0
    2f8c:	9b06      	ldr	r3, [sp, #24]
    2f8e:	42ab      	cmp	r3, r5
    2f90:	d133      	bne.n	2ffa <_dtoa_r+0x85a>
    2f92:	9b07      	ldr	r3, [sp, #28]
    2f94:	031b      	lsls	r3, r3, #12
    2f96:	42ab      	cmp	r3, r5
    2f98:	d12f      	bne.n	2ffa <_dtoa_r+0x85a>
    2f9a:	9b19      	ldr	r3, [sp, #100]	; 0x64
    2f9c:	9a07      	ldr	r2, [sp, #28]
    2f9e:	4213      	tst	r3, r2
    2fa0:	d02b      	beq.n	2ffa <_dtoa_r+0x85a>
    2fa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2fa4:	3501      	adds	r5, #1
    2fa6:	3301      	adds	r3, #1
    2fa8:	930b      	str	r3, [sp, #44]	; 0x2c
    2faa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2fac:	3301      	adds	r3, #1
    2fae:	930c      	str	r3, [sp, #48]	; 0x30
    2fb0:	e023      	b.n	2ffa <_dtoa_r+0x85a>
    2fb2:	2336      	movs	r3, #54	; 0x36
    2fb4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    2fb6:	1a9b      	subs	r3, r3, r2
    2fb8:	e795      	b.n	2ee6 <_dtoa_r+0x746>
    2fba:	9b08      	ldr	r3, [sp, #32]
    2fbc:	1e7d      	subs	r5, r7, #1
    2fbe:	42ab      	cmp	r3, r5
    2fc0:	db06      	blt.n	2fd0 <_dtoa_r+0x830>
    2fc2:	1b5d      	subs	r5, r3, r5
    2fc4:	2f00      	cmp	r7, #0
    2fc6:	da0b      	bge.n	2fe0 <_dtoa_r+0x840>
    2fc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2fca:	1bdc      	subs	r4, r3, r7
    2fcc:	2300      	movs	r3, #0
    2fce:	e78c      	b.n	2eea <_dtoa_r+0x74a>
    2fd0:	9b08      	ldr	r3, [sp, #32]
    2fd2:	9508      	str	r5, [sp, #32]
    2fd4:	1aea      	subs	r2, r5, r3
    2fd6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2fd8:	2500      	movs	r5, #0
    2fda:	189b      	adds	r3, r3, r2
    2fdc:	930f      	str	r3, [sp, #60]	; 0x3c
    2fde:	e7f1      	b.n	2fc4 <_dtoa_r+0x824>
    2fe0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    2fe2:	003b      	movs	r3, r7
    2fe4:	e781      	b.n	2eea <_dtoa_r+0x74a>
    2fe6:	9d08      	ldr	r5, [sp, #32]
    2fe8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    2fea:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    2fec:	e788      	b.n	2f00 <_dtoa_r+0x760>
    2fee:	9a08      	ldr	r2, [sp, #32]
    2ff0:	e7b4      	b.n	2f5c <_dtoa_r+0x7bc>
    2ff2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2ff4:	2500      	movs	r5, #0
    2ff6:	2b01      	cmp	r3, #1
    2ff8:	ddc7      	ble.n	2f8a <_dtoa_r+0x7ea>
    2ffa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2ffc:	2001      	movs	r0, #1
    2ffe:	2b00      	cmp	r3, #0
    3000:	d00b      	beq.n	301a <_dtoa_r+0x87a>
    3002:	9b08      	ldr	r3, [sp, #32]
    3004:	9a08      	ldr	r2, [sp, #32]
    3006:	691b      	ldr	r3, [r3, #16]
    3008:	930f      	str	r3, [sp, #60]	; 0x3c
    300a:	3303      	adds	r3, #3
    300c:	009b      	lsls	r3, r3, #2
    300e:	18d3      	adds	r3, r2, r3
    3010:	6858      	ldr	r0, [r3, #4]
    3012:	f000 fc58 	bl	38c6 <__hi0bits>
    3016:	2320      	movs	r3, #32
    3018:	1a18      	subs	r0, r3, r0
    301a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    301c:	18c0      	adds	r0, r0, r3
    301e:	231f      	movs	r3, #31
    3020:	4018      	ands	r0, r3
    3022:	d100      	bne.n	3026 <_dtoa_r+0x886>
    3024:	e0ab      	b.n	317e <_dtoa_r+0x9de>
    3026:	3301      	adds	r3, #1
    3028:	1a1b      	subs	r3, r3, r0
    302a:	2b04      	cmp	r3, #4
    302c:	dc00      	bgt.n	3030 <_dtoa_r+0x890>
    302e:	e09b      	b.n	3168 <_dtoa_r+0x9c8>
    3030:	231c      	movs	r3, #28
    3032:	1a18      	subs	r0, r3, r0
    3034:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3036:	1824      	adds	r4, r4, r0
    3038:	181b      	adds	r3, r3, r0
    303a:	930b      	str	r3, [sp, #44]	; 0x2c
    303c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    303e:	181b      	adds	r3, r3, r0
    3040:	930c      	str	r3, [sp, #48]	; 0x30
    3042:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3044:	2b00      	cmp	r3, #0
    3046:	dd05      	ble.n	3054 <_dtoa_r+0x8b4>
    3048:	001a      	movs	r2, r3
    304a:	9905      	ldr	r1, [sp, #20]
    304c:	9804      	ldr	r0, [sp, #16]
    304e:	f000 fd6d 	bl	3b2c <__lshift>
    3052:	9005      	str	r0, [sp, #20]
    3054:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3056:	2b00      	cmp	r3, #0
    3058:	dd05      	ble.n	3066 <_dtoa_r+0x8c6>
    305a:	001a      	movs	r2, r3
    305c:	9908      	ldr	r1, [sp, #32]
    305e:	9804      	ldr	r0, [sp, #16]
    3060:	f000 fd64 	bl	3b2c <__lshift>
    3064:	9008      	str	r0, [sp, #32]
    3066:	9b16      	ldr	r3, [sp, #88]	; 0x58
    3068:	2b00      	cmp	r3, #0
    306a:	d100      	bne.n	306e <_dtoa_r+0x8ce>
    306c:	e089      	b.n	3182 <_dtoa_r+0x9e2>
    306e:	9908      	ldr	r1, [sp, #32]
    3070:	9805      	ldr	r0, [sp, #20]
    3072:	f000 fdac 	bl	3bce <__mcmp>
    3076:	2800      	cmp	r0, #0
    3078:	db00      	blt.n	307c <_dtoa_r+0x8dc>
    307a:	e082      	b.n	3182 <_dtoa_r+0x9e2>
    307c:	9b03      	ldr	r3, [sp, #12]
    307e:	220a      	movs	r2, #10
    3080:	3b01      	subs	r3, #1
    3082:	9303      	str	r3, [sp, #12]
    3084:	9905      	ldr	r1, [sp, #20]
    3086:	2300      	movs	r3, #0
    3088:	9804      	ldr	r0, [sp, #16]
    308a:	f000 fbe0 	bl	384e <__multadd>
    308e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3090:	9005      	str	r0, [sp, #20]
    3092:	2b00      	cmp	r3, #0
    3094:	d100      	bne.n	3098 <_dtoa_r+0x8f8>
    3096:	e15d      	b.n	3354 <_dtoa_r+0xbb4>
    3098:	2300      	movs	r3, #0
    309a:	0031      	movs	r1, r6
    309c:	220a      	movs	r2, #10
    309e:	9804      	ldr	r0, [sp, #16]
    30a0:	f000 fbd5 	bl	384e <__multadd>
    30a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    30a6:	0006      	movs	r6, r0
    30a8:	2b00      	cmp	r3, #0
    30aa:	dc02      	bgt.n	30b2 <_dtoa_r+0x912>
    30ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
    30ae:	2b02      	cmp	r3, #2
    30b0:	dc6d      	bgt.n	318e <_dtoa_r+0x9ee>
    30b2:	2c00      	cmp	r4, #0
    30b4:	dd05      	ble.n	30c2 <_dtoa_r+0x922>
    30b6:	0031      	movs	r1, r6
    30b8:	0022      	movs	r2, r4
    30ba:	9804      	ldr	r0, [sp, #16]
    30bc:	f000 fd36 	bl	3b2c <__lshift>
    30c0:	0006      	movs	r6, r0
    30c2:	0030      	movs	r0, r6
    30c4:	2d00      	cmp	r5, #0
    30c6:	d011      	beq.n	30ec <_dtoa_r+0x94c>
    30c8:	6871      	ldr	r1, [r6, #4]
    30ca:	9804      	ldr	r0, [sp, #16]
    30cc:	f000 fb6e 	bl	37ac <_Balloc>
    30d0:	0031      	movs	r1, r6
    30d2:	0004      	movs	r4, r0
    30d4:	6933      	ldr	r3, [r6, #16]
    30d6:	310c      	adds	r1, #12
    30d8:	1c9a      	adds	r2, r3, #2
    30da:	0092      	lsls	r2, r2, #2
    30dc:	300c      	adds	r0, #12
    30de:	f000 fb5c 	bl	379a <memcpy>
    30e2:	2201      	movs	r2, #1
    30e4:	0021      	movs	r1, r4
    30e6:	9804      	ldr	r0, [sp, #16]
    30e8:	f000 fd20 	bl	3b2c <__lshift>
    30ec:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    30ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    30f0:	3f01      	subs	r7, #1
    30f2:	930b      	str	r3, [sp, #44]	; 0x2c
    30f4:	19db      	adds	r3, r3, r7
    30f6:	0037      	movs	r7, r6
    30f8:	0006      	movs	r6, r0
    30fa:	930f      	str	r3, [sp, #60]	; 0x3c
    30fc:	9908      	ldr	r1, [sp, #32]
    30fe:	9805      	ldr	r0, [sp, #20]
    3100:	f7ff faca 	bl	2698 <quorem>
    3104:	0039      	movs	r1, r7
    3106:	900d      	str	r0, [sp, #52]	; 0x34
    3108:	0004      	movs	r4, r0
    310a:	9805      	ldr	r0, [sp, #20]
    310c:	f000 fd5f 	bl	3bce <__mcmp>
    3110:	0032      	movs	r2, r6
    3112:	900e      	str	r0, [sp, #56]	; 0x38
    3114:	9908      	ldr	r1, [sp, #32]
    3116:	9804      	ldr	r0, [sp, #16]
    3118:	f000 fd72 	bl	3c00 <__mdiff>
    311c:	2301      	movs	r3, #1
    311e:	930c      	str	r3, [sp, #48]	; 0x30
    3120:	68c3      	ldr	r3, [r0, #12]
    3122:	3430      	adds	r4, #48	; 0x30
    3124:	0005      	movs	r5, r0
    3126:	2b00      	cmp	r3, #0
    3128:	d104      	bne.n	3134 <_dtoa_r+0x994>
    312a:	0001      	movs	r1, r0
    312c:	9805      	ldr	r0, [sp, #20]
    312e:	f000 fd4e 	bl	3bce <__mcmp>
    3132:	900c      	str	r0, [sp, #48]	; 0x30
    3134:	0029      	movs	r1, r5
    3136:	9804      	ldr	r0, [sp, #16]
    3138:	f000 fb70 	bl	381c <_Bfree>
    313c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    313e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    3140:	4313      	orrs	r3, r2
    3142:	d000      	beq.n	3146 <_dtoa_r+0x9a6>
    3144:	e089      	b.n	325a <_dtoa_r+0xaba>
    3146:	9a06      	ldr	r2, [sp, #24]
    3148:	3301      	adds	r3, #1
    314a:	4213      	tst	r3, r2
    314c:	d000      	beq.n	3150 <_dtoa_r+0x9b0>
    314e:	e084      	b.n	325a <_dtoa_r+0xaba>
    3150:	2c39      	cmp	r4, #57	; 0x39
    3152:	d100      	bne.n	3156 <_dtoa_r+0x9b6>
    3154:	e0a3      	b.n	329e <_dtoa_r+0xafe>
    3156:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3158:	2b00      	cmp	r3, #0
    315a:	dd01      	ble.n	3160 <_dtoa_r+0x9c0>
    315c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    315e:	3431      	adds	r4, #49	; 0x31
    3160:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3162:	1c5d      	adds	r5, r3, #1
    3164:	701c      	strb	r4, [r3, #0]
    3166:	e027      	b.n	31b8 <_dtoa_r+0xa18>
    3168:	2b04      	cmp	r3, #4
    316a:	d100      	bne.n	316e <_dtoa_r+0x9ce>
    316c:	e769      	b.n	3042 <_dtoa_r+0x8a2>
    316e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3170:	331c      	adds	r3, #28
    3172:	18d2      	adds	r2, r2, r3
    3174:	920b      	str	r2, [sp, #44]	; 0x2c
    3176:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3178:	18e4      	adds	r4, r4, r3
    317a:	18d3      	adds	r3, r2, r3
    317c:	e760      	b.n	3040 <_dtoa_r+0x8a0>
    317e:	0003      	movs	r3, r0
    3180:	e7f5      	b.n	316e <_dtoa_r+0x9ce>
    3182:	2f00      	cmp	r7, #0
    3184:	dc3c      	bgt.n	3200 <_dtoa_r+0xa60>
    3186:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3188:	2b02      	cmp	r3, #2
    318a:	dd39      	ble.n	3200 <_dtoa_r+0xa60>
    318c:	970d      	str	r7, [sp, #52]	; 0x34
    318e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3190:	2b00      	cmp	r3, #0
    3192:	d10c      	bne.n	31ae <_dtoa_r+0xa0e>
    3194:	9908      	ldr	r1, [sp, #32]
    3196:	2205      	movs	r2, #5
    3198:	9804      	ldr	r0, [sp, #16]
    319a:	f000 fb58 	bl	384e <__multadd>
    319e:	9008      	str	r0, [sp, #32]
    31a0:	0001      	movs	r1, r0
    31a2:	9805      	ldr	r0, [sp, #20]
    31a4:	f000 fd13 	bl	3bce <__mcmp>
    31a8:	2800      	cmp	r0, #0
    31aa:	dd00      	ble.n	31ae <_dtoa_r+0xa0e>
    31ac:	e55a      	b.n	2c64 <_dtoa_r+0x4c4>
    31ae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    31b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    31b2:	43db      	mvns	r3, r3
    31b4:	9303      	str	r3, [sp, #12]
    31b6:	2700      	movs	r7, #0
    31b8:	9908      	ldr	r1, [sp, #32]
    31ba:	9804      	ldr	r0, [sp, #16]
    31bc:	f000 fb2e 	bl	381c <_Bfree>
    31c0:	2e00      	cmp	r6, #0
    31c2:	d100      	bne.n	31c6 <_dtoa_r+0xa26>
    31c4:	e63f      	b.n	2e46 <_dtoa_r+0x6a6>
    31c6:	2f00      	cmp	r7, #0
    31c8:	d005      	beq.n	31d6 <_dtoa_r+0xa36>
    31ca:	42b7      	cmp	r7, r6
    31cc:	d003      	beq.n	31d6 <_dtoa_r+0xa36>
    31ce:	0039      	movs	r1, r7
    31d0:	9804      	ldr	r0, [sp, #16]
    31d2:	f000 fb23 	bl	381c <_Bfree>
    31d6:	0031      	movs	r1, r6
    31d8:	9804      	ldr	r0, [sp, #16]
    31da:	f000 fb1f 	bl	381c <_Bfree>
    31de:	e632      	b.n	2e46 <_dtoa_r+0x6a6>
    31e0:	9508      	str	r5, [sp, #32]
    31e2:	002e      	movs	r6, r5
    31e4:	e7e3      	b.n	31ae <_dtoa_r+0xa0e>
    31e6:	2300      	movs	r3, #0
    31e8:	9308      	str	r3, [sp, #32]
    31ea:	001e      	movs	r6, r3
    31ec:	e7df      	b.n	31ae <_dtoa_r+0xa0e>
    31ee:	46c0      	nop			; (mov r8, r8)
    31f0:	40240000 	.word	0x40240000
    31f4:	00000433 	.word	0x00000433
    31f8:	9603      	str	r6, [sp, #12]
    31fa:	9508      	str	r5, [sp, #32]
    31fc:	002e      	movs	r6, r5
    31fe:	e531      	b.n	2c64 <_dtoa_r+0x4c4>
    3200:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3202:	970d      	str	r7, [sp, #52]	; 0x34
    3204:	2b00      	cmp	r3, #0
    3206:	d000      	beq.n	320a <_dtoa_r+0xa6a>
    3208:	e753      	b.n	30b2 <_dtoa_r+0x912>
    320a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    320c:	9908      	ldr	r1, [sp, #32]
    320e:	9805      	ldr	r0, [sp, #20]
    3210:	f7ff fa42 	bl	2698 <quorem>
    3214:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3216:	3030      	adds	r0, #48	; 0x30
    3218:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    321a:	7028      	strb	r0, [r5, #0]
    321c:	3501      	adds	r5, #1
    321e:	0004      	movs	r4, r0
    3220:	1aeb      	subs	r3, r5, r3
    3222:	429a      	cmp	r2, r3
    3224:	dc78      	bgt.n	3318 <_dtoa_r+0xb78>
    3226:	1e15      	subs	r5, r2, #0
    3228:	dc00      	bgt.n	322c <_dtoa_r+0xa8c>
    322a:	2501      	movs	r5, #1
    322c:	2700      	movs	r7, #0
    322e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3230:	195d      	adds	r5, r3, r5
    3232:	9905      	ldr	r1, [sp, #20]
    3234:	2201      	movs	r2, #1
    3236:	9804      	ldr	r0, [sp, #16]
    3238:	f000 fc78 	bl	3b2c <__lshift>
    323c:	9908      	ldr	r1, [sp, #32]
    323e:	9005      	str	r0, [sp, #20]
    3240:	f000 fcc5 	bl	3bce <__mcmp>
    3244:	2800      	cmp	r0, #0
    3246:	dc2f      	bgt.n	32a8 <_dtoa_r+0xb08>
    3248:	d101      	bne.n	324e <_dtoa_r+0xaae>
    324a:	07e3      	lsls	r3, r4, #31
    324c:	d42c      	bmi.n	32a8 <_dtoa_r+0xb08>
    324e:	1e6b      	subs	r3, r5, #1
    3250:	781a      	ldrb	r2, [r3, #0]
    3252:	2a30      	cmp	r2, #48	; 0x30
    3254:	d1b0      	bne.n	31b8 <_dtoa_r+0xa18>
    3256:	001d      	movs	r5, r3
    3258:	e7f9      	b.n	324e <_dtoa_r+0xaae>
    325a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    325c:	2b00      	cmp	r3, #0
    325e:	db07      	blt.n	3270 <_dtoa_r+0xad0>
    3260:	001d      	movs	r5, r3
    3262:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3264:	431d      	orrs	r5, r3
    3266:	d126      	bne.n	32b6 <_dtoa_r+0xb16>
    3268:	2301      	movs	r3, #1
    326a:	9a06      	ldr	r2, [sp, #24]
    326c:	4213      	tst	r3, r2
    326e:	d122      	bne.n	32b6 <_dtoa_r+0xb16>
    3270:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3272:	2b00      	cmp	r3, #0
    3274:	dc00      	bgt.n	3278 <_dtoa_r+0xad8>
    3276:	e773      	b.n	3160 <_dtoa_r+0x9c0>
    3278:	9905      	ldr	r1, [sp, #20]
    327a:	2201      	movs	r2, #1
    327c:	9804      	ldr	r0, [sp, #16]
    327e:	f000 fc55 	bl	3b2c <__lshift>
    3282:	9908      	ldr	r1, [sp, #32]
    3284:	9005      	str	r0, [sp, #20]
    3286:	f000 fca2 	bl	3bce <__mcmp>
    328a:	2800      	cmp	r0, #0
    328c:	dc04      	bgt.n	3298 <_dtoa_r+0xaf8>
    328e:	d000      	beq.n	3292 <_dtoa_r+0xaf2>
    3290:	e766      	b.n	3160 <_dtoa_r+0x9c0>
    3292:	07e3      	lsls	r3, r4, #31
    3294:	d400      	bmi.n	3298 <_dtoa_r+0xaf8>
    3296:	e763      	b.n	3160 <_dtoa_r+0x9c0>
    3298:	2c39      	cmp	r4, #57	; 0x39
    329a:	d000      	beq.n	329e <_dtoa_r+0xafe>
    329c:	e75e      	b.n	315c <_dtoa_r+0x9bc>
    329e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    32a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    32a2:	1c5d      	adds	r5, r3, #1
    32a4:	2339      	movs	r3, #57	; 0x39
    32a6:	7013      	strb	r3, [r2, #0]
    32a8:	1e6b      	subs	r3, r5, #1
    32aa:	781a      	ldrb	r2, [r3, #0]
    32ac:	2a39      	cmp	r2, #57	; 0x39
    32ae:	d03b      	beq.n	3328 <_dtoa_r+0xb88>
    32b0:	3201      	adds	r2, #1
    32b2:	701a      	strb	r2, [r3, #0]
    32b4:	e780      	b.n	31b8 <_dtoa_r+0xa18>
    32b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    32b8:	3301      	adds	r3, #1
    32ba:	930d      	str	r3, [sp, #52]	; 0x34
    32bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    32be:	2b00      	cmp	r3, #0
    32c0:	dd05      	ble.n	32ce <_dtoa_r+0xb2e>
    32c2:	2c39      	cmp	r4, #57	; 0x39
    32c4:	d0eb      	beq.n	329e <_dtoa_r+0xafe>
    32c6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    32c8:	3401      	adds	r4, #1
    32ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    32cc:	e74a      	b.n	3164 <_dtoa_r+0x9c4>
    32ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    32d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    32d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    32d4:	701c      	strb	r4, [r3, #0]
    32d6:	4293      	cmp	r3, r2
    32d8:	d0ab      	beq.n	3232 <_dtoa_r+0xa92>
    32da:	2300      	movs	r3, #0
    32dc:	220a      	movs	r2, #10
    32de:	9905      	ldr	r1, [sp, #20]
    32e0:	9804      	ldr	r0, [sp, #16]
    32e2:	f000 fab4 	bl	384e <__multadd>
    32e6:	2300      	movs	r3, #0
    32e8:	9005      	str	r0, [sp, #20]
    32ea:	220a      	movs	r2, #10
    32ec:	0039      	movs	r1, r7
    32ee:	9804      	ldr	r0, [sp, #16]
    32f0:	42b7      	cmp	r7, r6
    32f2:	d106      	bne.n	3302 <_dtoa_r+0xb62>
    32f4:	f000 faab 	bl	384e <__multadd>
    32f8:	0007      	movs	r7, r0
    32fa:	0006      	movs	r6, r0
    32fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    32fe:	930b      	str	r3, [sp, #44]	; 0x2c
    3300:	e6fc      	b.n	30fc <_dtoa_r+0x95c>
    3302:	f000 faa4 	bl	384e <__multadd>
    3306:	0031      	movs	r1, r6
    3308:	0007      	movs	r7, r0
    330a:	2300      	movs	r3, #0
    330c:	220a      	movs	r2, #10
    330e:	9804      	ldr	r0, [sp, #16]
    3310:	f000 fa9d 	bl	384e <__multadd>
    3314:	0006      	movs	r6, r0
    3316:	e7f1      	b.n	32fc <_dtoa_r+0xb5c>
    3318:	2300      	movs	r3, #0
    331a:	220a      	movs	r2, #10
    331c:	9905      	ldr	r1, [sp, #20]
    331e:	9804      	ldr	r0, [sp, #16]
    3320:	f000 fa95 	bl	384e <__multadd>
    3324:	9005      	str	r0, [sp, #20]
    3326:	e771      	b.n	320c <_dtoa_r+0xa6c>
    3328:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    332a:	429a      	cmp	r2, r3
    332c:	d105      	bne.n	333a <_dtoa_r+0xb9a>
    332e:	9b03      	ldr	r3, [sp, #12]
    3330:	3301      	adds	r3, #1
    3332:	9303      	str	r3, [sp, #12]
    3334:	2331      	movs	r3, #49	; 0x31
    3336:	7013      	strb	r3, [r2, #0]
    3338:	e73e      	b.n	31b8 <_dtoa_r+0xa18>
    333a:	001d      	movs	r5, r3
    333c:	e7b4      	b.n	32a8 <_dtoa_r+0xb08>
    333e:	4b0a      	ldr	r3, [pc, #40]	; (3368 <_dtoa_r+0xbc8>)
    3340:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3342:	930a      	str	r3, [sp, #40]	; 0x28
    3344:	4b09      	ldr	r3, [pc, #36]	; (336c <_dtoa_r+0xbcc>)
    3346:	2a00      	cmp	r2, #0
    3348:	d001      	beq.n	334e <_dtoa_r+0xbae>
    334a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    334c:	6013      	str	r3, [r2, #0]
    334e:	980a      	ldr	r0, [sp, #40]	; 0x28
    3350:	b01d      	add	sp, #116	; 0x74
    3352:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3354:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3356:	2b00      	cmp	r3, #0
    3358:	dd00      	ble.n	335c <_dtoa_r+0xbbc>
    335a:	e756      	b.n	320a <_dtoa_r+0xa6a>
    335c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    335e:	2b02      	cmp	r3, #2
    3360:	dc00      	bgt.n	3364 <_dtoa_r+0xbc4>
    3362:	e752      	b.n	320a <_dtoa_r+0xa6a>
    3364:	e713      	b.n	318e <_dtoa_r+0x9ee>
    3366:	46c0      	nop			; (mov r8, r8)
    3368:	000065c8 	.word	0x000065c8
    336c:	000065d0 	.word	0x000065d0

00003370 <__sflush_r>:
    3370:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3372:	898a      	ldrh	r2, [r1, #12]
    3374:	0005      	movs	r5, r0
    3376:	000c      	movs	r4, r1
    3378:	0713      	lsls	r3, r2, #28
    337a:	d460      	bmi.n	343e <__sflush_r+0xce>
    337c:	684b      	ldr	r3, [r1, #4]
    337e:	2b00      	cmp	r3, #0
    3380:	dc04      	bgt.n	338c <__sflush_r+0x1c>
    3382:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    3384:	2b00      	cmp	r3, #0
    3386:	dc01      	bgt.n	338c <__sflush_r+0x1c>
    3388:	2000      	movs	r0, #0
    338a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    338c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    338e:	2f00      	cmp	r7, #0
    3390:	d0fa      	beq.n	3388 <__sflush_r+0x18>
    3392:	2300      	movs	r3, #0
    3394:	682e      	ldr	r6, [r5, #0]
    3396:	602b      	str	r3, [r5, #0]
    3398:	2380      	movs	r3, #128	; 0x80
    339a:	015b      	lsls	r3, r3, #5
    339c:	401a      	ands	r2, r3
    339e:	d034      	beq.n	340a <__sflush_r+0x9a>
    33a0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    33a2:	89a3      	ldrh	r3, [r4, #12]
    33a4:	075b      	lsls	r3, r3, #29
    33a6:	d506      	bpl.n	33b6 <__sflush_r+0x46>
    33a8:	6863      	ldr	r3, [r4, #4]
    33aa:	1ac0      	subs	r0, r0, r3
    33ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
    33ae:	2b00      	cmp	r3, #0
    33b0:	d001      	beq.n	33b6 <__sflush_r+0x46>
    33b2:	6c23      	ldr	r3, [r4, #64]	; 0x40
    33b4:	1ac0      	subs	r0, r0, r3
    33b6:	0002      	movs	r2, r0
    33b8:	6a21      	ldr	r1, [r4, #32]
    33ba:	2300      	movs	r3, #0
    33bc:	0028      	movs	r0, r5
    33be:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    33c0:	47b8      	blx	r7
    33c2:	89a1      	ldrh	r1, [r4, #12]
    33c4:	1c43      	adds	r3, r0, #1
    33c6:	d106      	bne.n	33d6 <__sflush_r+0x66>
    33c8:	682b      	ldr	r3, [r5, #0]
    33ca:	2b1d      	cmp	r3, #29
    33cc:	d831      	bhi.n	3432 <__sflush_r+0xc2>
    33ce:	4a2c      	ldr	r2, [pc, #176]	; (3480 <__sflush_r+0x110>)
    33d0:	40da      	lsrs	r2, r3
    33d2:	07d3      	lsls	r3, r2, #31
    33d4:	d52d      	bpl.n	3432 <__sflush_r+0xc2>
    33d6:	2300      	movs	r3, #0
    33d8:	6063      	str	r3, [r4, #4]
    33da:	6923      	ldr	r3, [r4, #16]
    33dc:	6023      	str	r3, [r4, #0]
    33de:	04cb      	lsls	r3, r1, #19
    33e0:	d505      	bpl.n	33ee <__sflush_r+0x7e>
    33e2:	1c43      	adds	r3, r0, #1
    33e4:	d102      	bne.n	33ec <__sflush_r+0x7c>
    33e6:	682b      	ldr	r3, [r5, #0]
    33e8:	2b00      	cmp	r3, #0
    33ea:	d100      	bne.n	33ee <__sflush_r+0x7e>
    33ec:	6560      	str	r0, [r4, #84]	; 0x54
    33ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
    33f0:	602e      	str	r6, [r5, #0]
    33f2:	2900      	cmp	r1, #0
    33f4:	d0c8      	beq.n	3388 <__sflush_r+0x18>
    33f6:	0023      	movs	r3, r4
    33f8:	3344      	adds	r3, #68	; 0x44
    33fa:	4299      	cmp	r1, r3
    33fc:	d002      	beq.n	3404 <__sflush_r+0x94>
    33fe:	0028      	movs	r0, r5
    3400:	f000 fcc4 	bl	3d8c <_free_r>
    3404:	2000      	movs	r0, #0
    3406:	6360      	str	r0, [r4, #52]	; 0x34
    3408:	e7bf      	b.n	338a <__sflush_r+0x1a>
    340a:	2301      	movs	r3, #1
    340c:	6a21      	ldr	r1, [r4, #32]
    340e:	0028      	movs	r0, r5
    3410:	47b8      	blx	r7
    3412:	1c43      	adds	r3, r0, #1
    3414:	d1c5      	bne.n	33a2 <__sflush_r+0x32>
    3416:	682b      	ldr	r3, [r5, #0]
    3418:	2b00      	cmp	r3, #0
    341a:	d0c2      	beq.n	33a2 <__sflush_r+0x32>
    341c:	2b1d      	cmp	r3, #29
    341e:	d001      	beq.n	3424 <__sflush_r+0xb4>
    3420:	2b16      	cmp	r3, #22
    3422:	d101      	bne.n	3428 <__sflush_r+0xb8>
    3424:	602e      	str	r6, [r5, #0]
    3426:	e7af      	b.n	3388 <__sflush_r+0x18>
    3428:	2340      	movs	r3, #64	; 0x40
    342a:	89a2      	ldrh	r2, [r4, #12]
    342c:	4313      	orrs	r3, r2
    342e:	81a3      	strh	r3, [r4, #12]
    3430:	e7ab      	b.n	338a <__sflush_r+0x1a>
    3432:	2340      	movs	r3, #64	; 0x40
    3434:	430b      	orrs	r3, r1
    3436:	2001      	movs	r0, #1
    3438:	81a3      	strh	r3, [r4, #12]
    343a:	4240      	negs	r0, r0
    343c:	e7a5      	b.n	338a <__sflush_r+0x1a>
    343e:	690f      	ldr	r7, [r1, #16]
    3440:	2f00      	cmp	r7, #0
    3442:	d0a1      	beq.n	3388 <__sflush_r+0x18>
    3444:	680b      	ldr	r3, [r1, #0]
    3446:	600f      	str	r7, [r1, #0]
    3448:	1bdb      	subs	r3, r3, r7
    344a:	9301      	str	r3, [sp, #4]
    344c:	2300      	movs	r3, #0
    344e:	0792      	lsls	r2, r2, #30
    3450:	d100      	bne.n	3454 <__sflush_r+0xe4>
    3452:	694b      	ldr	r3, [r1, #20]
    3454:	60a3      	str	r3, [r4, #8]
    3456:	9b01      	ldr	r3, [sp, #4]
    3458:	2b00      	cmp	r3, #0
    345a:	dc00      	bgt.n	345e <__sflush_r+0xee>
    345c:	e794      	b.n	3388 <__sflush_r+0x18>
    345e:	9b01      	ldr	r3, [sp, #4]
    3460:	003a      	movs	r2, r7
    3462:	6a21      	ldr	r1, [r4, #32]
    3464:	0028      	movs	r0, r5
    3466:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    3468:	47b0      	blx	r6
    346a:	2800      	cmp	r0, #0
    346c:	dc03      	bgt.n	3476 <__sflush_r+0x106>
    346e:	2340      	movs	r3, #64	; 0x40
    3470:	89a2      	ldrh	r2, [r4, #12]
    3472:	4313      	orrs	r3, r2
    3474:	e7df      	b.n	3436 <__sflush_r+0xc6>
    3476:	9b01      	ldr	r3, [sp, #4]
    3478:	183f      	adds	r7, r7, r0
    347a:	1a1b      	subs	r3, r3, r0
    347c:	9301      	str	r3, [sp, #4]
    347e:	e7ea      	b.n	3456 <__sflush_r+0xe6>
    3480:	20400001 	.word	0x20400001

00003484 <_fflush_r>:
    3484:	690b      	ldr	r3, [r1, #16]
    3486:	b570      	push	{r4, r5, r6, lr}
    3488:	0005      	movs	r5, r0
    348a:	000c      	movs	r4, r1
    348c:	2b00      	cmp	r3, #0
    348e:	d101      	bne.n	3494 <_fflush_r+0x10>
    3490:	2000      	movs	r0, #0
    3492:	bd70      	pop	{r4, r5, r6, pc}
    3494:	2800      	cmp	r0, #0
    3496:	d004      	beq.n	34a2 <_fflush_r+0x1e>
    3498:	6983      	ldr	r3, [r0, #24]
    349a:	2b00      	cmp	r3, #0
    349c:	d101      	bne.n	34a2 <_fflush_r+0x1e>
    349e:	f000 f85f 	bl	3560 <__sinit>
    34a2:	4b0b      	ldr	r3, [pc, #44]	; (34d0 <_fflush_r+0x4c>)
    34a4:	429c      	cmp	r4, r3
    34a6:	d109      	bne.n	34bc <_fflush_r+0x38>
    34a8:	686c      	ldr	r4, [r5, #4]
    34aa:	220c      	movs	r2, #12
    34ac:	5ea3      	ldrsh	r3, [r4, r2]
    34ae:	2b00      	cmp	r3, #0
    34b0:	d0ee      	beq.n	3490 <_fflush_r+0xc>
    34b2:	0021      	movs	r1, r4
    34b4:	0028      	movs	r0, r5
    34b6:	f7ff ff5b 	bl	3370 <__sflush_r>
    34ba:	e7ea      	b.n	3492 <_fflush_r+0xe>
    34bc:	4b05      	ldr	r3, [pc, #20]	; (34d4 <_fflush_r+0x50>)
    34be:	429c      	cmp	r4, r3
    34c0:	d101      	bne.n	34c6 <_fflush_r+0x42>
    34c2:	68ac      	ldr	r4, [r5, #8]
    34c4:	e7f1      	b.n	34aa <_fflush_r+0x26>
    34c6:	4b04      	ldr	r3, [pc, #16]	; (34d8 <_fflush_r+0x54>)
    34c8:	429c      	cmp	r4, r3
    34ca:	d1ee      	bne.n	34aa <_fflush_r+0x26>
    34cc:	68ec      	ldr	r4, [r5, #12]
    34ce:	e7ec      	b.n	34aa <_fflush_r+0x26>
    34d0:	000065f8 	.word	0x000065f8
    34d4:	00006618 	.word	0x00006618
    34d8:	000065d8 	.word	0x000065d8

000034dc <_cleanup_r>:
    34dc:	b510      	push	{r4, lr}
    34de:	4902      	ldr	r1, [pc, #8]	; (34e8 <_cleanup_r+0xc>)
    34e0:	f000 f8b2 	bl	3648 <_fwalk_reent>
    34e4:	bd10      	pop	{r4, pc}
    34e6:	46c0      	nop			; (mov r8, r8)
    34e8:	00003485 	.word	0x00003485

000034ec <std.isra.0>:
    34ec:	2300      	movs	r3, #0
    34ee:	b510      	push	{r4, lr}
    34f0:	0004      	movs	r4, r0
    34f2:	6003      	str	r3, [r0, #0]
    34f4:	6043      	str	r3, [r0, #4]
    34f6:	6083      	str	r3, [r0, #8]
    34f8:	8181      	strh	r1, [r0, #12]
    34fa:	6643      	str	r3, [r0, #100]	; 0x64
    34fc:	81c2      	strh	r2, [r0, #14]
    34fe:	6103      	str	r3, [r0, #16]
    3500:	6143      	str	r3, [r0, #20]
    3502:	6183      	str	r3, [r0, #24]
    3504:	0019      	movs	r1, r3
    3506:	2208      	movs	r2, #8
    3508:	305c      	adds	r0, #92	; 0x5c
    350a:	f7fe fa3f 	bl	198c <memset>
    350e:	4b05      	ldr	r3, [pc, #20]	; (3524 <std.isra.0+0x38>)
    3510:	6224      	str	r4, [r4, #32]
    3512:	6263      	str	r3, [r4, #36]	; 0x24
    3514:	4b04      	ldr	r3, [pc, #16]	; (3528 <std.isra.0+0x3c>)
    3516:	62a3      	str	r3, [r4, #40]	; 0x28
    3518:	4b04      	ldr	r3, [pc, #16]	; (352c <std.isra.0+0x40>)
    351a:	62e3      	str	r3, [r4, #44]	; 0x2c
    351c:	4b04      	ldr	r3, [pc, #16]	; (3530 <std.isra.0+0x44>)
    351e:	6323      	str	r3, [r4, #48]	; 0x30
    3520:	bd10      	pop	{r4, pc}
    3522:	46c0      	nop			; (mov r8, r8)
    3524:	00004189 	.word	0x00004189
    3528:	000041b1 	.word	0x000041b1
    352c:	000041e9 	.word	0x000041e9
    3530:	00004215 	.word	0x00004215

00003534 <__sfmoreglue>:
    3534:	b570      	push	{r4, r5, r6, lr}
    3536:	2568      	movs	r5, #104	; 0x68
    3538:	1e4a      	subs	r2, r1, #1
    353a:	4355      	muls	r5, r2
    353c:	000e      	movs	r6, r1
    353e:	0029      	movs	r1, r5
    3540:	3174      	adds	r1, #116	; 0x74
    3542:	f000 fc6d 	bl	3e20 <_malloc_r>
    3546:	1e04      	subs	r4, r0, #0
    3548:	d008      	beq.n	355c <__sfmoreglue+0x28>
    354a:	2100      	movs	r1, #0
    354c:	002a      	movs	r2, r5
    354e:	6001      	str	r1, [r0, #0]
    3550:	6046      	str	r6, [r0, #4]
    3552:	300c      	adds	r0, #12
    3554:	60a0      	str	r0, [r4, #8]
    3556:	3268      	adds	r2, #104	; 0x68
    3558:	f7fe fa18 	bl	198c <memset>
    355c:	0020      	movs	r0, r4
    355e:	bd70      	pop	{r4, r5, r6, pc}

00003560 <__sinit>:
    3560:	6983      	ldr	r3, [r0, #24]
    3562:	b513      	push	{r0, r1, r4, lr}
    3564:	0004      	movs	r4, r0
    3566:	2b00      	cmp	r3, #0
    3568:	d128      	bne.n	35bc <__sinit+0x5c>
    356a:	6483      	str	r3, [r0, #72]	; 0x48
    356c:	64c3      	str	r3, [r0, #76]	; 0x4c
    356e:	6503      	str	r3, [r0, #80]	; 0x50
    3570:	4b13      	ldr	r3, [pc, #76]	; (35c0 <__sinit+0x60>)
    3572:	4a14      	ldr	r2, [pc, #80]	; (35c4 <__sinit+0x64>)
    3574:	681b      	ldr	r3, [r3, #0]
    3576:	6282      	str	r2, [r0, #40]	; 0x28
    3578:	9301      	str	r3, [sp, #4]
    357a:	4298      	cmp	r0, r3
    357c:	d101      	bne.n	3582 <__sinit+0x22>
    357e:	2301      	movs	r3, #1
    3580:	6183      	str	r3, [r0, #24]
    3582:	0020      	movs	r0, r4
    3584:	f000 f820 	bl	35c8 <__sfp>
    3588:	6060      	str	r0, [r4, #4]
    358a:	0020      	movs	r0, r4
    358c:	f000 f81c 	bl	35c8 <__sfp>
    3590:	60a0      	str	r0, [r4, #8]
    3592:	0020      	movs	r0, r4
    3594:	f000 f818 	bl	35c8 <__sfp>
    3598:	2200      	movs	r2, #0
    359a:	60e0      	str	r0, [r4, #12]
    359c:	2104      	movs	r1, #4
    359e:	6860      	ldr	r0, [r4, #4]
    35a0:	f7ff ffa4 	bl	34ec <std.isra.0>
    35a4:	2201      	movs	r2, #1
    35a6:	2109      	movs	r1, #9
    35a8:	68a0      	ldr	r0, [r4, #8]
    35aa:	f7ff ff9f 	bl	34ec <std.isra.0>
    35ae:	2202      	movs	r2, #2
    35b0:	2112      	movs	r1, #18
    35b2:	68e0      	ldr	r0, [r4, #12]
    35b4:	f7ff ff9a 	bl	34ec <std.isra.0>
    35b8:	2301      	movs	r3, #1
    35ba:	61a3      	str	r3, [r4, #24]
    35bc:	bd13      	pop	{r0, r1, r4, pc}
    35be:	46c0      	nop			; (mov r8, r8)
    35c0:	00006590 	.word	0x00006590
    35c4:	000034dd 	.word	0x000034dd

000035c8 <__sfp>:
    35c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    35ca:	4b1e      	ldr	r3, [pc, #120]	; (3644 <__sfp+0x7c>)
    35cc:	0007      	movs	r7, r0
    35ce:	681e      	ldr	r6, [r3, #0]
    35d0:	69b3      	ldr	r3, [r6, #24]
    35d2:	2b00      	cmp	r3, #0
    35d4:	d102      	bne.n	35dc <__sfp+0x14>
    35d6:	0030      	movs	r0, r6
    35d8:	f7ff ffc2 	bl	3560 <__sinit>
    35dc:	3648      	adds	r6, #72	; 0x48
    35de:	68b4      	ldr	r4, [r6, #8]
    35e0:	6873      	ldr	r3, [r6, #4]
    35e2:	3b01      	subs	r3, #1
    35e4:	d504      	bpl.n	35f0 <__sfp+0x28>
    35e6:	6833      	ldr	r3, [r6, #0]
    35e8:	2b00      	cmp	r3, #0
    35ea:	d007      	beq.n	35fc <__sfp+0x34>
    35ec:	6836      	ldr	r6, [r6, #0]
    35ee:	e7f6      	b.n	35de <__sfp+0x16>
    35f0:	220c      	movs	r2, #12
    35f2:	5ea5      	ldrsh	r5, [r4, r2]
    35f4:	2d00      	cmp	r5, #0
    35f6:	d00d      	beq.n	3614 <__sfp+0x4c>
    35f8:	3468      	adds	r4, #104	; 0x68
    35fa:	e7f2      	b.n	35e2 <__sfp+0x1a>
    35fc:	2104      	movs	r1, #4
    35fe:	0038      	movs	r0, r7
    3600:	f7ff ff98 	bl	3534 <__sfmoreglue>
    3604:	6030      	str	r0, [r6, #0]
    3606:	2800      	cmp	r0, #0
    3608:	d1f0      	bne.n	35ec <__sfp+0x24>
    360a:	230c      	movs	r3, #12
    360c:	0004      	movs	r4, r0
    360e:	603b      	str	r3, [r7, #0]
    3610:	0020      	movs	r0, r4
    3612:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3614:	2301      	movs	r3, #1
    3616:	0020      	movs	r0, r4
    3618:	425b      	negs	r3, r3
    361a:	81e3      	strh	r3, [r4, #14]
    361c:	3302      	adds	r3, #2
    361e:	81a3      	strh	r3, [r4, #12]
    3620:	6665      	str	r5, [r4, #100]	; 0x64
    3622:	6025      	str	r5, [r4, #0]
    3624:	60a5      	str	r5, [r4, #8]
    3626:	6065      	str	r5, [r4, #4]
    3628:	6125      	str	r5, [r4, #16]
    362a:	6165      	str	r5, [r4, #20]
    362c:	61a5      	str	r5, [r4, #24]
    362e:	2208      	movs	r2, #8
    3630:	0029      	movs	r1, r5
    3632:	305c      	adds	r0, #92	; 0x5c
    3634:	f7fe f9aa 	bl	198c <memset>
    3638:	6365      	str	r5, [r4, #52]	; 0x34
    363a:	63a5      	str	r5, [r4, #56]	; 0x38
    363c:	64a5      	str	r5, [r4, #72]	; 0x48
    363e:	64e5      	str	r5, [r4, #76]	; 0x4c
    3640:	e7e6      	b.n	3610 <__sfp+0x48>
    3642:	46c0      	nop			; (mov r8, r8)
    3644:	00006590 	.word	0x00006590

00003648 <_fwalk_reent>:
    3648:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    364a:	0004      	movs	r4, r0
    364c:	0007      	movs	r7, r0
    364e:	2600      	movs	r6, #0
    3650:	9101      	str	r1, [sp, #4]
    3652:	3448      	adds	r4, #72	; 0x48
    3654:	2c00      	cmp	r4, #0
    3656:	d101      	bne.n	365c <_fwalk_reent+0x14>
    3658:	0030      	movs	r0, r6
    365a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    365c:	6863      	ldr	r3, [r4, #4]
    365e:	68a5      	ldr	r5, [r4, #8]
    3660:	9300      	str	r3, [sp, #0]
    3662:	9b00      	ldr	r3, [sp, #0]
    3664:	3b01      	subs	r3, #1
    3666:	9300      	str	r3, [sp, #0]
    3668:	d501      	bpl.n	366e <_fwalk_reent+0x26>
    366a:	6824      	ldr	r4, [r4, #0]
    366c:	e7f2      	b.n	3654 <_fwalk_reent+0xc>
    366e:	89ab      	ldrh	r3, [r5, #12]
    3670:	2b01      	cmp	r3, #1
    3672:	d908      	bls.n	3686 <_fwalk_reent+0x3e>
    3674:	220e      	movs	r2, #14
    3676:	5eab      	ldrsh	r3, [r5, r2]
    3678:	3301      	adds	r3, #1
    367a:	d004      	beq.n	3686 <_fwalk_reent+0x3e>
    367c:	0029      	movs	r1, r5
    367e:	0038      	movs	r0, r7
    3680:	9b01      	ldr	r3, [sp, #4]
    3682:	4798      	blx	r3
    3684:	4306      	orrs	r6, r0
    3686:	3568      	adds	r5, #104	; 0x68
    3688:	e7eb      	b.n	3662 <_fwalk_reent+0x1a>
	...

0000368c <_localeconv_r>:
    368c:	4b03      	ldr	r3, [pc, #12]	; (369c <_localeconv_r+0x10>)
    368e:	681b      	ldr	r3, [r3, #0]
    3690:	6a18      	ldr	r0, [r3, #32]
    3692:	2800      	cmp	r0, #0
    3694:	d100      	bne.n	3698 <_localeconv_r+0xc>
    3696:	4802      	ldr	r0, [pc, #8]	; (36a0 <_localeconv_r+0x14>)
    3698:	30f0      	adds	r0, #240	; 0xf0
    369a:	4770      	bx	lr
    369c:	20000018 	.word	0x20000018
    36a0:	2000007c 	.word	0x2000007c

000036a4 <__swhatbuf_r>:
    36a4:	b570      	push	{r4, r5, r6, lr}
    36a6:	000e      	movs	r6, r1
    36a8:	001d      	movs	r5, r3
    36aa:	230e      	movs	r3, #14
    36ac:	5ec9      	ldrsh	r1, [r1, r3]
    36ae:	b090      	sub	sp, #64	; 0x40
    36b0:	0014      	movs	r4, r2
    36b2:	2900      	cmp	r1, #0
    36b4:	da07      	bge.n	36c6 <__swhatbuf_r+0x22>
    36b6:	2300      	movs	r3, #0
    36b8:	602b      	str	r3, [r5, #0]
    36ba:	89b3      	ldrh	r3, [r6, #12]
    36bc:	061b      	lsls	r3, r3, #24
    36be:	d411      	bmi.n	36e4 <__swhatbuf_r+0x40>
    36c0:	2380      	movs	r3, #128	; 0x80
    36c2:	00db      	lsls	r3, r3, #3
    36c4:	e00f      	b.n	36e6 <__swhatbuf_r+0x42>
    36c6:	aa01      	add	r2, sp, #4
    36c8:	f000 fdd0 	bl	426c <_fstat_r>
    36cc:	2800      	cmp	r0, #0
    36ce:	dbf2      	blt.n	36b6 <__swhatbuf_r+0x12>
    36d0:	22f0      	movs	r2, #240	; 0xf0
    36d2:	9b02      	ldr	r3, [sp, #8]
    36d4:	0212      	lsls	r2, r2, #8
    36d6:	4013      	ands	r3, r2
    36d8:	4a05      	ldr	r2, [pc, #20]	; (36f0 <__swhatbuf_r+0x4c>)
    36da:	189b      	adds	r3, r3, r2
    36dc:	425a      	negs	r2, r3
    36de:	4153      	adcs	r3, r2
    36e0:	602b      	str	r3, [r5, #0]
    36e2:	e7ed      	b.n	36c0 <__swhatbuf_r+0x1c>
    36e4:	2340      	movs	r3, #64	; 0x40
    36e6:	2000      	movs	r0, #0
    36e8:	6023      	str	r3, [r4, #0]
    36ea:	b010      	add	sp, #64	; 0x40
    36ec:	bd70      	pop	{r4, r5, r6, pc}
    36ee:	46c0      	nop			; (mov r8, r8)
    36f0:	ffffe000 	.word	0xffffe000

000036f4 <__smakebuf_r>:
    36f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    36f6:	2602      	movs	r6, #2
    36f8:	898b      	ldrh	r3, [r1, #12]
    36fa:	0005      	movs	r5, r0
    36fc:	000c      	movs	r4, r1
    36fe:	4233      	tst	r3, r6
    3700:	d006      	beq.n	3710 <__smakebuf_r+0x1c>
    3702:	0023      	movs	r3, r4
    3704:	3347      	adds	r3, #71	; 0x47
    3706:	6023      	str	r3, [r4, #0]
    3708:	6123      	str	r3, [r4, #16]
    370a:	2301      	movs	r3, #1
    370c:	6163      	str	r3, [r4, #20]
    370e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    3710:	ab01      	add	r3, sp, #4
    3712:	466a      	mov	r2, sp
    3714:	f7ff ffc6 	bl	36a4 <__swhatbuf_r>
    3718:	9900      	ldr	r1, [sp, #0]
    371a:	0007      	movs	r7, r0
    371c:	0028      	movs	r0, r5
    371e:	f000 fb7f 	bl	3e20 <_malloc_r>
    3722:	2800      	cmp	r0, #0
    3724:	d106      	bne.n	3734 <__smakebuf_r+0x40>
    3726:	220c      	movs	r2, #12
    3728:	5ea3      	ldrsh	r3, [r4, r2]
    372a:	059a      	lsls	r2, r3, #22
    372c:	d4ef      	bmi.n	370e <__smakebuf_r+0x1a>
    372e:	431e      	orrs	r6, r3
    3730:	81a6      	strh	r6, [r4, #12]
    3732:	e7e6      	b.n	3702 <__smakebuf_r+0xe>
    3734:	4b0d      	ldr	r3, [pc, #52]	; (376c <__smakebuf_r+0x78>)
    3736:	62ab      	str	r3, [r5, #40]	; 0x28
    3738:	2380      	movs	r3, #128	; 0x80
    373a:	89a2      	ldrh	r2, [r4, #12]
    373c:	6020      	str	r0, [r4, #0]
    373e:	4313      	orrs	r3, r2
    3740:	81a3      	strh	r3, [r4, #12]
    3742:	9b00      	ldr	r3, [sp, #0]
    3744:	6120      	str	r0, [r4, #16]
    3746:	6163      	str	r3, [r4, #20]
    3748:	9b01      	ldr	r3, [sp, #4]
    374a:	2b00      	cmp	r3, #0
    374c:	d00a      	beq.n	3764 <__smakebuf_r+0x70>
    374e:	230e      	movs	r3, #14
    3750:	5ee1      	ldrsh	r1, [r4, r3]
    3752:	0028      	movs	r0, r5
    3754:	f000 fd9c 	bl	4290 <_isatty_r>
    3758:	2800      	cmp	r0, #0
    375a:	d003      	beq.n	3764 <__smakebuf_r+0x70>
    375c:	2301      	movs	r3, #1
    375e:	89a2      	ldrh	r2, [r4, #12]
    3760:	4313      	orrs	r3, r2
    3762:	81a3      	strh	r3, [r4, #12]
    3764:	89a0      	ldrh	r0, [r4, #12]
    3766:	4338      	orrs	r0, r7
    3768:	81a0      	strh	r0, [r4, #12]
    376a:	e7d0      	b.n	370e <__smakebuf_r+0x1a>
    376c:	000034dd 	.word	0x000034dd

00003770 <malloc>:
    3770:	b510      	push	{r4, lr}
    3772:	4b03      	ldr	r3, [pc, #12]	; (3780 <malloc+0x10>)
    3774:	0001      	movs	r1, r0
    3776:	6818      	ldr	r0, [r3, #0]
    3778:	f000 fb52 	bl	3e20 <_malloc_r>
    377c:	bd10      	pop	{r4, pc}
    377e:	46c0      	nop			; (mov r8, r8)
    3780:	20000018 	.word	0x20000018

00003784 <memchr>:
    3784:	b2c9      	uxtb	r1, r1
    3786:	1882      	adds	r2, r0, r2
    3788:	4290      	cmp	r0, r2
    378a:	d101      	bne.n	3790 <memchr+0xc>
    378c:	2000      	movs	r0, #0
    378e:	4770      	bx	lr
    3790:	7803      	ldrb	r3, [r0, #0]
    3792:	428b      	cmp	r3, r1
    3794:	d0fb      	beq.n	378e <memchr+0xa>
    3796:	3001      	adds	r0, #1
    3798:	e7f6      	b.n	3788 <memchr+0x4>

0000379a <memcpy>:
    379a:	2300      	movs	r3, #0
    379c:	b510      	push	{r4, lr}
    379e:	429a      	cmp	r2, r3
    37a0:	d100      	bne.n	37a4 <memcpy+0xa>
    37a2:	bd10      	pop	{r4, pc}
    37a4:	5ccc      	ldrb	r4, [r1, r3]
    37a6:	54c4      	strb	r4, [r0, r3]
    37a8:	3301      	adds	r3, #1
    37aa:	e7f8      	b.n	379e <memcpy+0x4>

000037ac <_Balloc>:
    37ac:	b570      	push	{r4, r5, r6, lr}
    37ae:	6a46      	ldr	r6, [r0, #36]	; 0x24
    37b0:	0004      	movs	r4, r0
    37b2:	000d      	movs	r5, r1
    37b4:	2e00      	cmp	r6, #0
    37b6:	d107      	bne.n	37c8 <_Balloc+0x1c>
    37b8:	2010      	movs	r0, #16
    37ba:	f7ff ffd9 	bl	3770 <malloc>
    37be:	6260      	str	r0, [r4, #36]	; 0x24
    37c0:	6046      	str	r6, [r0, #4]
    37c2:	6086      	str	r6, [r0, #8]
    37c4:	6006      	str	r6, [r0, #0]
    37c6:	60c6      	str	r6, [r0, #12]
    37c8:	6a66      	ldr	r6, [r4, #36]	; 0x24
    37ca:	68f3      	ldr	r3, [r6, #12]
    37cc:	2b00      	cmp	r3, #0
    37ce:	d013      	beq.n	37f8 <_Balloc+0x4c>
    37d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    37d2:	00aa      	lsls	r2, r5, #2
    37d4:	68db      	ldr	r3, [r3, #12]
    37d6:	189b      	adds	r3, r3, r2
    37d8:	6818      	ldr	r0, [r3, #0]
    37da:	2800      	cmp	r0, #0
    37dc:	d118      	bne.n	3810 <_Balloc+0x64>
    37de:	2101      	movs	r1, #1
    37e0:	000e      	movs	r6, r1
    37e2:	40ae      	lsls	r6, r5
    37e4:	1d72      	adds	r2, r6, #5
    37e6:	0092      	lsls	r2, r2, #2
    37e8:	0020      	movs	r0, r4
    37ea:	f000 fac1 	bl	3d70 <_calloc_r>
    37ee:	2800      	cmp	r0, #0
    37f0:	d00c      	beq.n	380c <_Balloc+0x60>
    37f2:	6045      	str	r5, [r0, #4]
    37f4:	6086      	str	r6, [r0, #8]
    37f6:	e00d      	b.n	3814 <_Balloc+0x68>
    37f8:	2221      	movs	r2, #33	; 0x21
    37fa:	2104      	movs	r1, #4
    37fc:	0020      	movs	r0, r4
    37fe:	f000 fab7 	bl	3d70 <_calloc_r>
    3802:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3804:	60f0      	str	r0, [r6, #12]
    3806:	68db      	ldr	r3, [r3, #12]
    3808:	2b00      	cmp	r3, #0
    380a:	d1e1      	bne.n	37d0 <_Balloc+0x24>
    380c:	2000      	movs	r0, #0
    380e:	bd70      	pop	{r4, r5, r6, pc}
    3810:	6802      	ldr	r2, [r0, #0]
    3812:	601a      	str	r2, [r3, #0]
    3814:	2300      	movs	r3, #0
    3816:	6103      	str	r3, [r0, #16]
    3818:	60c3      	str	r3, [r0, #12]
    381a:	e7f8      	b.n	380e <_Balloc+0x62>

0000381c <_Bfree>:
    381c:	b570      	push	{r4, r5, r6, lr}
    381e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    3820:	0006      	movs	r6, r0
    3822:	000d      	movs	r5, r1
    3824:	2c00      	cmp	r4, #0
    3826:	d107      	bne.n	3838 <_Bfree+0x1c>
    3828:	2010      	movs	r0, #16
    382a:	f7ff ffa1 	bl	3770 <malloc>
    382e:	6270      	str	r0, [r6, #36]	; 0x24
    3830:	6044      	str	r4, [r0, #4]
    3832:	6084      	str	r4, [r0, #8]
    3834:	6004      	str	r4, [r0, #0]
    3836:	60c4      	str	r4, [r0, #12]
    3838:	2d00      	cmp	r5, #0
    383a:	d007      	beq.n	384c <_Bfree+0x30>
    383c:	6a73      	ldr	r3, [r6, #36]	; 0x24
    383e:	686a      	ldr	r2, [r5, #4]
    3840:	68db      	ldr	r3, [r3, #12]
    3842:	0092      	lsls	r2, r2, #2
    3844:	189b      	adds	r3, r3, r2
    3846:	681a      	ldr	r2, [r3, #0]
    3848:	602a      	str	r2, [r5, #0]
    384a:	601d      	str	r5, [r3, #0]
    384c:	bd70      	pop	{r4, r5, r6, pc}

0000384e <__multadd>:
    384e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3850:	001e      	movs	r6, r3
    3852:	2314      	movs	r3, #20
    3854:	469c      	mov	ip, r3
    3856:	0007      	movs	r7, r0
    3858:	000c      	movs	r4, r1
    385a:	2000      	movs	r0, #0
    385c:	690d      	ldr	r5, [r1, #16]
    385e:	448c      	add	ip, r1
    3860:	4663      	mov	r3, ip
    3862:	8819      	ldrh	r1, [r3, #0]
    3864:	681b      	ldr	r3, [r3, #0]
    3866:	4351      	muls	r1, r2
    3868:	0c1b      	lsrs	r3, r3, #16
    386a:	4353      	muls	r3, r2
    386c:	1989      	adds	r1, r1, r6
    386e:	0c0e      	lsrs	r6, r1, #16
    3870:	199b      	adds	r3, r3, r6
    3872:	b289      	uxth	r1, r1
    3874:	0c1e      	lsrs	r6, r3, #16
    3876:	041b      	lsls	r3, r3, #16
    3878:	185b      	adds	r3, r3, r1
    387a:	4661      	mov	r1, ip
    387c:	3001      	adds	r0, #1
    387e:	c108      	stmia	r1!, {r3}
    3880:	468c      	mov	ip, r1
    3882:	4285      	cmp	r5, r0
    3884:	dcec      	bgt.n	3860 <__multadd+0x12>
    3886:	2e00      	cmp	r6, #0
    3888:	d01b      	beq.n	38c2 <__multadd+0x74>
    388a:	68a3      	ldr	r3, [r4, #8]
    388c:	429d      	cmp	r5, r3
    388e:	db12      	blt.n	38b6 <__multadd+0x68>
    3890:	6863      	ldr	r3, [r4, #4]
    3892:	0038      	movs	r0, r7
    3894:	1c59      	adds	r1, r3, #1
    3896:	f7ff ff89 	bl	37ac <_Balloc>
    389a:	0021      	movs	r1, r4
    389c:	6923      	ldr	r3, [r4, #16]
    389e:	9001      	str	r0, [sp, #4]
    38a0:	1c9a      	adds	r2, r3, #2
    38a2:	0092      	lsls	r2, r2, #2
    38a4:	310c      	adds	r1, #12
    38a6:	300c      	adds	r0, #12
    38a8:	f7ff ff77 	bl	379a <memcpy>
    38ac:	0021      	movs	r1, r4
    38ae:	0038      	movs	r0, r7
    38b0:	f7ff ffb4 	bl	381c <_Bfree>
    38b4:	9c01      	ldr	r4, [sp, #4]
    38b6:	1d2b      	adds	r3, r5, #4
    38b8:	009b      	lsls	r3, r3, #2
    38ba:	18e3      	adds	r3, r4, r3
    38bc:	3501      	adds	r5, #1
    38be:	605e      	str	r6, [r3, #4]
    38c0:	6125      	str	r5, [r4, #16]
    38c2:	0020      	movs	r0, r4
    38c4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

000038c6 <__hi0bits>:
    38c6:	0003      	movs	r3, r0
    38c8:	0c02      	lsrs	r2, r0, #16
    38ca:	2000      	movs	r0, #0
    38cc:	4282      	cmp	r2, r0
    38ce:	d101      	bne.n	38d4 <__hi0bits+0xe>
    38d0:	041b      	lsls	r3, r3, #16
    38d2:	3010      	adds	r0, #16
    38d4:	0e1a      	lsrs	r2, r3, #24
    38d6:	d101      	bne.n	38dc <__hi0bits+0x16>
    38d8:	3008      	adds	r0, #8
    38da:	021b      	lsls	r3, r3, #8
    38dc:	0f1a      	lsrs	r2, r3, #28
    38de:	d101      	bne.n	38e4 <__hi0bits+0x1e>
    38e0:	3004      	adds	r0, #4
    38e2:	011b      	lsls	r3, r3, #4
    38e4:	0f9a      	lsrs	r2, r3, #30
    38e6:	d101      	bne.n	38ec <__hi0bits+0x26>
    38e8:	3002      	adds	r0, #2
    38ea:	009b      	lsls	r3, r3, #2
    38ec:	2b00      	cmp	r3, #0
    38ee:	db03      	blt.n	38f8 <__hi0bits+0x32>
    38f0:	3001      	adds	r0, #1
    38f2:	005b      	lsls	r3, r3, #1
    38f4:	d400      	bmi.n	38f8 <__hi0bits+0x32>
    38f6:	2020      	movs	r0, #32
    38f8:	4770      	bx	lr

000038fa <__lo0bits>:
    38fa:	2207      	movs	r2, #7
    38fc:	6803      	ldr	r3, [r0, #0]
    38fe:	b510      	push	{r4, lr}
    3900:	0001      	movs	r1, r0
    3902:	401a      	ands	r2, r3
    3904:	d00d      	beq.n	3922 <__lo0bits+0x28>
    3906:	2401      	movs	r4, #1
    3908:	2000      	movs	r0, #0
    390a:	4223      	tst	r3, r4
    390c:	d105      	bne.n	391a <__lo0bits+0x20>
    390e:	3002      	adds	r0, #2
    3910:	4203      	tst	r3, r0
    3912:	d003      	beq.n	391c <__lo0bits+0x22>
    3914:	40e3      	lsrs	r3, r4
    3916:	0020      	movs	r0, r4
    3918:	600b      	str	r3, [r1, #0]
    391a:	bd10      	pop	{r4, pc}
    391c:	089b      	lsrs	r3, r3, #2
    391e:	600b      	str	r3, [r1, #0]
    3920:	e7fb      	b.n	391a <__lo0bits+0x20>
    3922:	b29c      	uxth	r4, r3
    3924:	0010      	movs	r0, r2
    3926:	2c00      	cmp	r4, #0
    3928:	d101      	bne.n	392e <__lo0bits+0x34>
    392a:	2010      	movs	r0, #16
    392c:	0c1b      	lsrs	r3, r3, #16
    392e:	b2da      	uxtb	r2, r3
    3930:	2a00      	cmp	r2, #0
    3932:	d101      	bne.n	3938 <__lo0bits+0x3e>
    3934:	3008      	adds	r0, #8
    3936:	0a1b      	lsrs	r3, r3, #8
    3938:	071a      	lsls	r2, r3, #28
    393a:	d101      	bne.n	3940 <__lo0bits+0x46>
    393c:	3004      	adds	r0, #4
    393e:	091b      	lsrs	r3, r3, #4
    3940:	079a      	lsls	r2, r3, #30
    3942:	d101      	bne.n	3948 <__lo0bits+0x4e>
    3944:	3002      	adds	r0, #2
    3946:	089b      	lsrs	r3, r3, #2
    3948:	07da      	lsls	r2, r3, #31
    394a:	d4e8      	bmi.n	391e <__lo0bits+0x24>
    394c:	085b      	lsrs	r3, r3, #1
    394e:	d001      	beq.n	3954 <__lo0bits+0x5a>
    3950:	3001      	adds	r0, #1
    3952:	e7e4      	b.n	391e <__lo0bits+0x24>
    3954:	2020      	movs	r0, #32
    3956:	e7e0      	b.n	391a <__lo0bits+0x20>

00003958 <__i2b>:
    3958:	b510      	push	{r4, lr}
    395a:	000c      	movs	r4, r1
    395c:	2101      	movs	r1, #1
    395e:	f7ff ff25 	bl	37ac <_Balloc>
    3962:	2301      	movs	r3, #1
    3964:	6144      	str	r4, [r0, #20]
    3966:	6103      	str	r3, [r0, #16]
    3968:	bd10      	pop	{r4, pc}

0000396a <__multiply>:
    396a:	b5f0      	push	{r4, r5, r6, r7, lr}
    396c:	690b      	ldr	r3, [r1, #16]
    396e:	0015      	movs	r5, r2
    3970:	6912      	ldr	r2, [r2, #16]
    3972:	b089      	sub	sp, #36	; 0x24
    3974:	000c      	movs	r4, r1
    3976:	4293      	cmp	r3, r2
    3978:	da01      	bge.n	397e <__multiply+0x14>
    397a:	002c      	movs	r4, r5
    397c:	000d      	movs	r5, r1
    397e:	6927      	ldr	r7, [r4, #16]
    3980:	692e      	ldr	r6, [r5, #16]
    3982:	68a2      	ldr	r2, [r4, #8]
    3984:	19bb      	adds	r3, r7, r6
    3986:	6861      	ldr	r1, [r4, #4]
    3988:	9301      	str	r3, [sp, #4]
    398a:	4293      	cmp	r3, r2
    398c:	dd00      	ble.n	3990 <__multiply+0x26>
    398e:	3101      	adds	r1, #1
    3990:	f7ff ff0c 	bl	37ac <_Balloc>
    3994:	0003      	movs	r3, r0
    3996:	3314      	adds	r3, #20
    3998:	9300      	str	r3, [sp, #0]
    399a:	9a00      	ldr	r2, [sp, #0]
    399c:	19bb      	adds	r3, r7, r6
    399e:	4694      	mov	ip, r2
    39a0:	009b      	lsls	r3, r3, #2
    39a2:	449c      	add	ip, r3
    39a4:	0013      	movs	r3, r2
    39a6:	2200      	movs	r2, #0
    39a8:	9004      	str	r0, [sp, #16]
    39aa:	4563      	cmp	r3, ip
    39ac:	d31c      	bcc.n	39e8 <__multiply+0x7e>
    39ae:	002a      	movs	r2, r5
    39b0:	3414      	adds	r4, #20
    39b2:	00bf      	lsls	r7, r7, #2
    39b4:	19e3      	adds	r3, r4, r7
    39b6:	3214      	adds	r2, #20
    39b8:	00b6      	lsls	r6, r6, #2
    39ba:	9305      	str	r3, [sp, #20]
    39bc:	1993      	adds	r3, r2, r6
    39be:	9402      	str	r4, [sp, #8]
    39c0:	9306      	str	r3, [sp, #24]
    39c2:	9b06      	ldr	r3, [sp, #24]
    39c4:	429a      	cmp	r2, r3
    39c6:	d311      	bcc.n	39ec <__multiply+0x82>
    39c8:	9b01      	ldr	r3, [sp, #4]
    39ca:	2b00      	cmp	r3, #0
    39cc:	dd06      	ble.n	39dc <__multiply+0x72>
    39ce:	2304      	movs	r3, #4
    39d0:	425b      	negs	r3, r3
    39d2:	449c      	add	ip, r3
    39d4:	4663      	mov	r3, ip
    39d6:	681b      	ldr	r3, [r3, #0]
    39d8:	2b00      	cmp	r3, #0
    39da:	d051      	beq.n	3a80 <__multiply+0x116>
    39dc:	9b04      	ldr	r3, [sp, #16]
    39de:	9a01      	ldr	r2, [sp, #4]
    39e0:	0018      	movs	r0, r3
    39e2:	611a      	str	r2, [r3, #16]
    39e4:	b009      	add	sp, #36	; 0x24
    39e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    39e8:	c304      	stmia	r3!, {r2}
    39ea:	e7de      	b.n	39aa <__multiply+0x40>
    39ec:	8814      	ldrh	r4, [r2, #0]
    39ee:	2c00      	cmp	r4, #0
    39f0:	d01e      	beq.n	3a30 <__multiply+0xc6>
    39f2:	2600      	movs	r6, #0
    39f4:	9d00      	ldr	r5, [sp, #0]
    39f6:	9f02      	ldr	r7, [sp, #8]
    39f8:	cf01      	ldmia	r7!, {r0}
    39fa:	9507      	str	r5, [sp, #28]
    39fc:	cd08      	ldmia	r5!, {r3}
    39fe:	9303      	str	r3, [sp, #12]
    3a00:	b283      	uxth	r3, r0
    3a02:	4363      	muls	r3, r4
    3a04:	0019      	movs	r1, r3
    3a06:	466b      	mov	r3, sp
    3a08:	0c00      	lsrs	r0, r0, #16
    3a0a:	899b      	ldrh	r3, [r3, #12]
    3a0c:	4360      	muls	r0, r4
    3a0e:	18cb      	adds	r3, r1, r3
    3a10:	9903      	ldr	r1, [sp, #12]
    3a12:	199b      	adds	r3, r3, r6
    3a14:	0c09      	lsrs	r1, r1, #16
    3a16:	1841      	adds	r1, r0, r1
    3a18:	0c18      	lsrs	r0, r3, #16
    3a1a:	1809      	adds	r1, r1, r0
    3a1c:	0c0e      	lsrs	r6, r1, #16
    3a1e:	b29b      	uxth	r3, r3
    3a20:	0409      	lsls	r1, r1, #16
    3a22:	430b      	orrs	r3, r1
    3a24:	9907      	ldr	r1, [sp, #28]
    3a26:	600b      	str	r3, [r1, #0]
    3a28:	9b05      	ldr	r3, [sp, #20]
    3a2a:	42bb      	cmp	r3, r7
    3a2c:	d8e4      	bhi.n	39f8 <__multiply+0x8e>
    3a2e:	602e      	str	r6, [r5, #0]
    3a30:	6813      	ldr	r3, [r2, #0]
    3a32:	0c1b      	lsrs	r3, r3, #16
    3a34:	9303      	str	r3, [sp, #12]
    3a36:	d01e      	beq.n	3a76 <__multiply+0x10c>
    3a38:	2600      	movs	r6, #0
    3a3a:	9b00      	ldr	r3, [sp, #0]
    3a3c:	9c02      	ldr	r4, [sp, #8]
    3a3e:	681b      	ldr	r3, [r3, #0]
    3a40:	9800      	ldr	r0, [sp, #0]
    3a42:	0007      	movs	r7, r0
    3a44:	8821      	ldrh	r1, [r4, #0]
    3a46:	9d03      	ldr	r5, [sp, #12]
    3a48:	b29b      	uxth	r3, r3
    3a4a:	4369      	muls	r1, r5
    3a4c:	c820      	ldmia	r0!, {r5}
    3a4e:	0c2d      	lsrs	r5, r5, #16
    3a50:	1949      	adds	r1, r1, r5
    3a52:	198e      	adds	r6, r1, r6
    3a54:	0431      	lsls	r1, r6, #16
    3a56:	430b      	orrs	r3, r1
    3a58:	603b      	str	r3, [r7, #0]
    3a5a:	cc08      	ldmia	r4!, {r3}
    3a5c:	9903      	ldr	r1, [sp, #12]
    3a5e:	0c1b      	lsrs	r3, r3, #16
    3a60:	434b      	muls	r3, r1
    3a62:	6879      	ldr	r1, [r7, #4]
    3a64:	0c36      	lsrs	r6, r6, #16
    3a66:	b289      	uxth	r1, r1
    3a68:	185b      	adds	r3, r3, r1
    3a6a:	9905      	ldr	r1, [sp, #20]
    3a6c:	199b      	adds	r3, r3, r6
    3a6e:	0c1e      	lsrs	r6, r3, #16
    3a70:	42a1      	cmp	r1, r4
    3a72:	d8e6      	bhi.n	3a42 <__multiply+0xd8>
    3a74:	6003      	str	r3, [r0, #0]
    3a76:	9b00      	ldr	r3, [sp, #0]
    3a78:	3204      	adds	r2, #4
    3a7a:	3304      	adds	r3, #4
    3a7c:	9300      	str	r3, [sp, #0]
    3a7e:	e7a0      	b.n	39c2 <__multiply+0x58>
    3a80:	9b01      	ldr	r3, [sp, #4]
    3a82:	3b01      	subs	r3, #1
    3a84:	9301      	str	r3, [sp, #4]
    3a86:	e79f      	b.n	39c8 <__multiply+0x5e>

00003a88 <__pow5mult>:
    3a88:	2303      	movs	r3, #3
    3a8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3a8c:	4013      	ands	r3, r2
    3a8e:	0005      	movs	r5, r0
    3a90:	000e      	movs	r6, r1
    3a92:	0014      	movs	r4, r2
    3a94:	2b00      	cmp	r3, #0
    3a96:	d008      	beq.n	3aaa <__pow5mult+0x22>
    3a98:	4922      	ldr	r1, [pc, #136]	; (3b24 <__pow5mult+0x9c>)
    3a9a:	3b01      	subs	r3, #1
    3a9c:	009a      	lsls	r2, r3, #2
    3a9e:	5852      	ldr	r2, [r2, r1]
    3aa0:	2300      	movs	r3, #0
    3aa2:	0031      	movs	r1, r6
    3aa4:	f7ff fed3 	bl	384e <__multadd>
    3aa8:	0006      	movs	r6, r0
    3aaa:	10a3      	asrs	r3, r4, #2
    3aac:	9301      	str	r3, [sp, #4]
    3aae:	d036      	beq.n	3b1e <__pow5mult+0x96>
    3ab0:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    3ab2:	2c00      	cmp	r4, #0
    3ab4:	d107      	bne.n	3ac6 <__pow5mult+0x3e>
    3ab6:	2010      	movs	r0, #16
    3ab8:	f7ff fe5a 	bl	3770 <malloc>
    3abc:	6268      	str	r0, [r5, #36]	; 0x24
    3abe:	6044      	str	r4, [r0, #4]
    3ac0:	6084      	str	r4, [r0, #8]
    3ac2:	6004      	str	r4, [r0, #0]
    3ac4:	60c4      	str	r4, [r0, #12]
    3ac6:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    3ac8:	68bc      	ldr	r4, [r7, #8]
    3aca:	2c00      	cmp	r4, #0
    3acc:	d107      	bne.n	3ade <__pow5mult+0x56>
    3ace:	4916      	ldr	r1, [pc, #88]	; (3b28 <__pow5mult+0xa0>)
    3ad0:	0028      	movs	r0, r5
    3ad2:	f7ff ff41 	bl	3958 <__i2b>
    3ad6:	2300      	movs	r3, #0
    3ad8:	0004      	movs	r4, r0
    3ada:	60b8      	str	r0, [r7, #8]
    3adc:	6003      	str	r3, [r0, #0]
    3ade:	2201      	movs	r2, #1
    3ae0:	9b01      	ldr	r3, [sp, #4]
    3ae2:	4213      	tst	r3, r2
    3ae4:	d00a      	beq.n	3afc <__pow5mult+0x74>
    3ae6:	0031      	movs	r1, r6
    3ae8:	0022      	movs	r2, r4
    3aea:	0028      	movs	r0, r5
    3aec:	f7ff ff3d 	bl	396a <__multiply>
    3af0:	0007      	movs	r7, r0
    3af2:	0031      	movs	r1, r6
    3af4:	0028      	movs	r0, r5
    3af6:	f7ff fe91 	bl	381c <_Bfree>
    3afa:	003e      	movs	r6, r7
    3afc:	9b01      	ldr	r3, [sp, #4]
    3afe:	105b      	asrs	r3, r3, #1
    3b00:	9301      	str	r3, [sp, #4]
    3b02:	d00c      	beq.n	3b1e <__pow5mult+0x96>
    3b04:	6820      	ldr	r0, [r4, #0]
    3b06:	2800      	cmp	r0, #0
    3b08:	d107      	bne.n	3b1a <__pow5mult+0x92>
    3b0a:	0022      	movs	r2, r4
    3b0c:	0021      	movs	r1, r4
    3b0e:	0028      	movs	r0, r5
    3b10:	f7ff ff2b 	bl	396a <__multiply>
    3b14:	2300      	movs	r3, #0
    3b16:	6020      	str	r0, [r4, #0]
    3b18:	6003      	str	r3, [r0, #0]
    3b1a:	0004      	movs	r4, r0
    3b1c:	e7df      	b.n	3ade <__pow5mult+0x56>
    3b1e:	0030      	movs	r0, r6
    3b20:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    3b22:	46c0      	nop			; (mov r8, r8)
    3b24:	00006728 	.word	0x00006728
    3b28:	00000271 	.word	0x00000271

00003b2c <__lshift>:
    3b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b2e:	000d      	movs	r5, r1
    3b30:	0017      	movs	r7, r2
    3b32:	692b      	ldr	r3, [r5, #16]
    3b34:	1154      	asrs	r4, r2, #5
    3b36:	b085      	sub	sp, #20
    3b38:	18e3      	adds	r3, r4, r3
    3b3a:	9302      	str	r3, [sp, #8]
    3b3c:	3301      	adds	r3, #1
    3b3e:	9301      	str	r3, [sp, #4]
    3b40:	6849      	ldr	r1, [r1, #4]
    3b42:	68ab      	ldr	r3, [r5, #8]
    3b44:	9003      	str	r0, [sp, #12]
    3b46:	9a01      	ldr	r2, [sp, #4]
    3b48:	4293      	cmp	r3, r2
    3b4a:	db34      	blt.n	3bb6 <__lshift+0x8a>
    3b4c:	9803      	ldr	r0, [sp, #12]
    3b4e:	f7ff fe2d 	bl	37ac <_Balloc>
    3b52:	2300      	movs	r3, #0
    3b54:	0002      	movs	r2, r0
    3b56:	0006      	movs	r6, r0
    3b58:	0019      	movs	r1, r3
    3b5a:	3214      	adds	r2, #20
    3b5c:	42a3      	cmp	r3, r4
    3b5e:	db2d      	blt.n	3bbc <__lshift+0x90>
    3b60:	43e3      	mvns	r3, r4
    3b62:	17db      	asrs	r3, r3, #31
    3b64:	401c      	ands	r4, r3
    3b66:	002b      	movs	r3, r5
    3b68:	211f      	movs	r1, #31
    3b6a:	00a4      	lsls	r4, r4, #2
    3b6c:	1914      	adds	r4, r2, r4
    3b6e:	692a      	ldr	r2, [r5, #16]
    3b70:	3314      	adds	r3, #20
    3b72:	0092      	lsls	r2, r2, #2
    3b74:	189a      	adds	r2, r3, r2
    3b76:	400f      	ands	r7, r1
    3b78:	d024      	beq.n	3bc4 <__lshift+0x98>
    3b7a:	3101      	adds	r1, #1
    3b7c:	1bc9      	subs	r1, r1, r7
    3b7e:	468c      	mov	ip, r1
    3b80:	2100      	movs	r1, #0
    3b82:	6818      	ldr	r0, [r3, #0]
    3b84:	40b8      	lsls	r0, r7
    3b86:	4301      	orrs	r1, r0
    3b88:	4660      	mov	r0, ip
    3b8a:	6021      	str	r1, [r4, #0]
    3b8c:	cb02      	ldmia	r3!, {r1}
    3b8e:	3404      	adds	r4, #4
    3b90:	40c1      	lsrs	r1, r0
    3b92:	429a      	cmp	r2, r3
    3b94:	d8f5      	bhi.n	3b82 <__lshift+0x56>
    3b96:	6021      	str	r1, [r4, #0]
    3b98:	2900      	cmp	r1, #0
    3b9a:	d002      	beq.n	3ba2 <__lshift+0x76>
    3b9c:	9b02      	ldr	r3, [sp, #8]
    3b9e:	3302      	adds	r3, #2
    3ba0:	9301      	str	r3, [sp, #4]
    3ba2:	9b01      	ldr	r3, [sp, #4]
    3ba4:	9803      	ldr	r0, [sp, #12]
    3ba6:	3b01      	subs	r3, #1
    3ba8:	6133      	str	r3, [r6, #16]
    3baa:	0029      	movs	r1, r5
    3bac:	f7ff fe36 	bl	381c <_Bfree>
    3bb0:	0030      	movs	r0, r6
    3bb2:	b005      	add	sp, #20
    3bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3bb6:	3101      	adds	r1, #1
    3bb8:	005b      	lsls	r3, r3, #1
    3bba:	e7c4      	b.n	3b46 <__lshift+0x1a>
    3bbc:	0098      	lsls	r0, r3, #2
    3bbe:	5011      	str	r1, [r2, r0]
    3bc0:	3301      	adds	r3, #1
    3bc2:	e7cb      	b.n	3b5c <__lshift+0x30>
    3bc4:	cb02      	ldmia	r3!, {r1}
    3bc6:	c402      	stmia	r4!, {r1}
    3bc8:	429a      	cmp	r2, r3
    3bca:	d8fb      	bhi.n	3bc4 <__lshift+0x98>
    3bcc:	e7e9      	b.n	3ba2 <__lshift+0x76>

00003bce <__mcmp>:
    3bce:	690a      	ldr	r2, [r1, #16]
    3bd0:	6903      	ldr	r3, [r0, #16]
    3bd2:	b530      	push	{r4, r5, lr}
    3bd4:	1a9b      	subs	r3, r3, r2
    3bd6:	d10e      	bne.n	3bf6 <__mcmp+0x28>
    3bd8:	0092      	lsls	r2, r2, #2
    3bda:	3014      	adds	r0, #20
    3bdc:	3114      	adds	r1, #20
    3bde:	1884      	adds	r4, r0, r2
    3be0:	1889      	adds	r1, r1, r2
    3be2:	3c04      	subs	r4, #4
    3be4:	3904      	subs	r1, #4
    3be6:	6822      	ldr	r2, [r4, #0]
    3be8:	680d      	ldr	r5, [r1, #0]
    3bea:	42aa      	cmp	r2, r5
    3bec:	d005      	beq.n	3bfa <__mcmp+0x2c>
    3bee:	42aa      	cmp	r2, r5
    3bf0:	4192      	sbcs	r2, r2
    3bf2:	2301      	movs	r3, #1
    3bf4:	4313      	orrs	r3, r2
    3bf6:	0018      	movs	r0, r3
    3bf8:	bd30      	pop	{r4, r5, pc}
    3bfa:	42a0      	cmp	r0, r4
    3bfc:	d3f1      	bcc.n	3be2 <__mcmp+0x14>
    3bfe:	e7fa      	b.n	3bf6 <__mcmp+0x28>

00003c00 <__mdiff>:
    3c00:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c02:	000d      	movs	r5, r1
    3c04:	b085      	sub	sp, #20
    3c06:	0007      	movs	r7, r0
    3c08:	0011      	movs	r1, r2
    3c0a:	0028      	movs	r0, r5
    3c0c:	0014      	movs	r4, r2
    3c0e:	f7ff ffde 	bl	3bce <__mcmp>
    3c12:	1e06      	subs	r6, r0, #0
    3c14:	d108      	bne.n	3c28 <__mdiff+0x28>
    3c16:	0001      	movs	r1, r0
    3c18:	0038      	movs	r0, r7
    3c1a:	f7ff fdc7 	bl	37ac <_Balloc>
    3c1e:	2301      	movs	r3, #1
    3c20:	6146      	str	r6, [r0, #20]
    3c22:	6103      	str	r3, [r0, #16]
    3c24:	b005      	add	sp, #20
    3c26:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c28:	2301      	movs	r3, #1
    3c2a:	9301      	str	r3, [sp, #4]
    3c2c:	2800      	cmp	r0, #0
    3c2e:	db04      	blt.n	3c3a <__mdiff+0x3a>
    3c30:	0023      	movs	r3, r4
    3c32:	002c      	movs	r4, r5
    3c34:	001d      	movs	r5, r3
    3c36:	2300      	movs	r3, #0
    3c38:	9301      	str	r3, [sp, #4]
    3c3a:	6861      	ldr	r1, [r4, #4]
    3c3c:	0038      	movs	r0, r7
    3c3e:	f7ff fdb5 	bl	37ac <_Balloc>
    3c42:	002f      	movs	r7, r5
    3c44:	2200      	movs	r2, #0
    3c46:	9b01      	ldr	r3, [sp, #4]
    3c48:	6926      	ldr	r6, [r4, #16]
    3c4a:	60c3      	str	r3, [r0, #12]
    3c4c:	3414      	adds	r4, #20
    3c4e:	00b3      	lsls	r3, r6, #2
    3c50:	18e3      	adds	r3, r4, r3
    3c52:	9302      	str	r3, [sp, #8]
    3c54:	692b      	ldr	r3, [r5, #16]
    3c56:	3714      	adds	r7, #20
    3c58:	009b      	lsls	r3, r3, #2
    3c5a:	18fb      	adds	r3, r7, r3
    3c5c:	9303      	str	r3, [sp, #12]
    3c5e:	0003      	movs	r3, r0
    3c60:	4694      	mov	ip, r2
    3c62:	3314      	adds	r3, #20
    3c64:	cc20      	ldmia	r4!, {r5}
    3c66:	cf04      	ldmia	r7!, {r2}
    3c68:	9201      	str	r2, [sp, #4]
    3c6a:	b2aa      	uxth	r2, r5
    3c6c:	4494      	add	ip, r2
    3c6e:	466a      	mov	r2, sp
    3c70:	4661      	mov	r1, ip
    3c72:	8892      	ldrh	r2, [r2, #4]
    3c74:	0c2d      	lsrs	r5, r5, #16
    3c76:	1a8a      	subs	r2, r1, r2
    3c78:	9901      	ldr	r1, [sp, #4]
    3c7a:	0c09      	lsrs	r1, r1, #16
    3c7c:	1a69      	subs	r1, r5, r1
    3c7e:	1415      	asrs	r5, r2, #16
    3c80:	1949      	adds	r1, r1, r5
    3c82:	140d      	asrs	r5, r1, #16
    3c84:	b292      	uxth	r2, r2
    3c86:	0409      	lsls	r1, r1, #16
    3c88:	430a      	orrs	r2, r1
    3c8a:	601a      	str	r2, [r3, #0]
    3c8c:	9a03      	ldr	r2, [sp, #12]
    3c8e:	46ac      	mov	ip, r5
    3c90:	3304      	adds	r3, #4
    3c92:	42ba      	cmp	r2, r7
    3c94:	d8e6      	bhi.n	3c64 <__mdiff+0x64>
    3c96:	9902      	ldr	r1, [sp, #8]
    3c98:	001a      	movs	r2, r3
    3c9a:	428c      	cmp	r4, r1
    3c9c:	d305      	bcc.n	3caa <__mdiff+0xaa>
    3c9e:	3a04      	subs	r2, #4
    3ca0:	6813      	ldr	r3, [r2, #0]
    3ca2:	2b00      	cmp	r3, #0
    3ca4:	d00e      	beq.n	3cc4 <__mdiff+0xc4>
    3ca6:	6106      	str	r6, [r0, #16]
    3ca8:	e7bc      	b.n	3c24 <__mdiff+0x24>
    3caa:	cc04      	ldmia	r4!, {r2}
    3cac:	b291      	uxth	r1, r2
    3cae:	4461      	add	r1, ip
    3cb0:	140d      	asrs	r5, r1, #16
    3cb2:	0c12      	lsrs	r2, r2, #16
    3cb4:	1952      	adds	r2, r2, r5
    3cb6:	1415      	asrs	r5, r2, #16
    3cb8:	b289      	uxth	r1, r1
    3cba:	0412      	lsls	r2, r2, #16
    3cbc:	430a      	orrs	r2, r1
    3cbe:	46ac      	mov	ip, r5
    3cc0:	c304      	stmia	r3!, {r2}
    3cc2:	e7e8      	b.n	3c96 <__mdiff+0x96>
    3cc4:	3e01      	subs	r6, #1
    3cc6:	e7ea      	b.n	3c9e <__mdiff+0x9e>

00003cc8 <__d2b>:
    3cc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3cca:	001d      	movs	r5, r3
    3ccc:	2101      	movs	r1, #1
    3cce:	9f08      	ldr	r7, [sp, #32]
    3cd0:	0014      	movs	r4, r2
    3cd2:	f7ff fd6b 	bl	37ac <_Balloc>
    3cd6:	032b      	lsls	r3, r5, #12
    3cd8:	006d      	lsls	r5, r5, #1
    3cda:	0006      	movs	r6, r0
    3cdc:	0b1b      	lsrs	r3, r3, #12
    3cde:	0d6d      	lsrs	r5, r5, #21
    3ce0:	d124      	bne.n	3d2c <__d2b+0x64>
    3ce2:	9301      	str	r3, [sp, #4]
    3ce4:	2c00      	cmp	r4, #0
    3ce6:	d027      	beq.n	3d38 <__d2b+0x70>
    3ce8:	4668      	mov	r0, sp
    3cea:	9400      	str	r4, [sp, #0]
    3cec:	f7ff fe05 	bl	38fa <__lo0bits>
    3cf0:	9c00      	ldr	r4, [sp, #0]
    3cf2:	2800      	cmp	r0, #0
    3cf4:	d01e      	beq.n	3d34 <__d2b+0x6c>
    3cf6:	9b01      	ldr	r3, [sp, #4]
    3cf8:	2120      	movs	r1, #32
    3cfa:	001a      	movs	r2, r3
    3cfc:	1a09      	subs	r1, r1, r0
    3cfe:	408a      	lsls	r2, r1
    3d00:	40c3      	lsrs	r3, r0
    3d02:	4322      	orrs	r2, r4
    3d04:	6172      	str	r2, [r6, #20]
    3d06:	9301      	str	r3, [sp, #4]
    3d08:	9c01      	ldr	r4, [sp, #4]
    3d0a:	61b4      	str	r4, [r6, #24]
    3d0c:	1e63      	subs	r3, r4, #1
    3d0e:	419c      	sbcs	r4, r3
    3d10:	3401      	adds	r4, #1
    3d12:	6134      	str	r4, [r6, #16]
    3d14:	2d00      	cmp	r5, #0
    3d16:	d018      	beq.n	3d4a <__d2b+0x82>
    3d18:	4b12      	ldr	r3, [pc, #72]	; (3d64 <__d2b+0x9c>)
    3d1a:	18ed      	adds	r5, r5, r3
    3d1c:	2335      	movs	r3, #53	; 0x35
    3d1e:	182d      	adds	r5, r5, r0
    3d20:	603d      	str	r5, [r7, #0]
    3d22:	1a18      	subs	r0, r3, r0
    3d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3d26:	6018      	str	r0, [r3, #0]
    3d28:	0030      	movs	r0, r6
    3d2a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    3d2c:	2280      	movs	r2, #128	; 0x80
    3d2e:	0352      	lsls	r2, r2, #13
    3d30:	4313      	orrs	r3, r2
    3d32:	e7d6      	b.n	3ce2 <__d2b+0x1a>
    3d34:	6174      	str	r4, [r6, #20]
    3d36:	e7e7      	b.n	3d08 <__d2b+0x40>
    3d38:	a801      	add	r0, sp, #4
    3d3a:	f7ff fdde 	bl	38fa <__lo0bits>
    3d3e:	2401      	movs	r4, #1
    3d40:	9b01      	ldr	r3, [sp, #4]
    3d42:	6134      	str	r4, [r6, #16]
    3d44:	6173      	str	r3, [r6, #20]
    3d46:	3020      	adds	r0, #32
    3d48:	e7e4      	b.n	3d14 <__d2b+0x4c>
    3d4a:	4b07      	ldr	r3, [pc, #28]	; (3d68 <__d2b+0xa0>)
    3d4c:	18c0      	adds	r0, r0, r3
    3d4e:	4b07      	ldr	r3, [pc, #28]	; (3d6c <__d2b+0xa4>)
    3d50:	6038      	str	r0, [r7, #0]
    3d52:	18e3      	adds	r3, r4, r3
    3d54:	009b      	lsls	r3, r3, #2
    3d56:	18f3      	adds	r3, r6, r3
    3d58:	6958      	ldr	r0, [r3, #20]
    3d5a:	f7ff fdb4 	bl	38c6 <__hi0bits>
    3d5e:	0164      	lsls	r4, r4, #5
    3d60:	1a20      	subs	r0, r4, r0
    3d62:	e7df      	b.n	3d24 <__d2b+0x5c>
    3d64:	fffffbcd 	.word	0xfffffbcd
    3d68:	fffffbce 	.word	0xfffffbce
    3d6c:	3fffffff 	.word	0x3fffffff

00003d70 <_calloc_r>:
    3d70:	434a      	muls	r2, r1
    3d72:	b570      	push	{r4, r5, r6, lr}
    3d74:	0011      	movs	r1, r2
    3d76:	0014      	movs	r4, r2
    3d78:	f000 f852 	bl	3e20 <_malloc_r>
    3d7c:	1e05      	subs	r5, r0, #0
    3d7e:	d003      	beq.n	3d88 <_calloc_r+0x18>
    3d80:	0022      	movs	r2, r4
    3d82:	2100      	movs	r1, #0
    3d84:	f7fd fe02 	bl	198c <memset>
    3d88:	0028      	movs	r0, r5
    3d8a:	bd70      	pop	{r4, r5, r6, pc}

00003d8c <_free_r>:
    3d8c:	b570      	push	{r4, r5, r6, lr}
    3d8e:	0005      	movs	r5, r0
    3d90:	2900      	cmp	r1, #0
    3d92:	d010      	beq.n	3db6 <_free_r+0x2a>
    3d94:	1f0c      	subs	r4, r1, #4
    3d96:	6823      	ldr	r3, [r4, #0]
    3d98:	2b00      	cmp	r3, #0
    3d9a:	da00      	bge.n	3d9e <_free_r+0x12>
    3d9c:	18e4      	adds	r4, r4, r3
    3d9e:	0028      	movs	r0, r5
    3da0:	f000 faae 	bl	4300 <__malloc_lock>
    3da4:	4a1d      	ldr	r2, [pc, #116]	; (3e1c <_free_r+0x90>)
    3da6:	6813      	ldr	r3, [r2, #0]
    3da8:	2b00      	cmp	r3, #0
    3daa:	d105      	bne.n	3db8 <_free_r+0x2c>
    3dac:	6063      	str	r3, [r4, #4]
    3dae:	6014      	str	r4, [r2, #0]
    3db0:	0028      	movs	r0, r5
    3db2:	f000 faa6 	bl	4302 <__malloc_unlock>
    3db6:	bd70      	pop	{r4, r5, r6, pc}
    3db8:	42a3      	cmp	r3, r4
    3dba:	d909      	bls.n	3dd0 <_free_r+0x44>
    3dbc:	6821      	ldr	r1, [r4, #0]
    3dbe:	1860      	adds	r0, r4, r1
    3dc0:	4283      	cmp	r3, r0
    3dc2:	d1f3      	bne.n	3dac <_free_r+0x20>
    3dc4:	6818      	ldr	r0, [r3, #0]
    3dc6:	685b      	ldr	r3, [r3, #4]
    3dc8:	1841      	adds	r1, r0, r1
    3dca:	6021      	str	r1, [r4, #0]
    3dcc:	e7ee      	b.n	3dac <_free_r+0x20>
    3dce:	0013      	movs	r3, r2
    3dd0:	685a      	ldr	r2, [r3, #4]
    3dd2:	2a00      	cmp	r2, #0
    3dd4:	d001      	beq.n	3dda <_free_r+0x4e>
    3dd6:	42a2      	cmp	r2, r4
    3dd8:	d9f9      	bls.n	3dce <_free_r+0x42>
    3dda:	6819      	ldr	r1, [r3, #0]
    3ddc:	1858      	adds	r0, r3, r1
    3dde:	42a0      	cmp	r0, r4
    3de0:	d10b      	bne.n	3dfa <_free_r+0x6e>
    3de2:	6820      	ldr	r0, [r4, #0]
    3de4:	1809      	adds	r1, r1, r0
    3de6:	1858      	adds	r0, r3, r1
    3de8:	6019      	str	r1, [r3, #0]
    3dea:	4282      	cmp	r2, r0
    3dec:	d1e0      	bne.n	3db0 <_free_r+0x24>
    3dee:	6810      	ldr	r0, [r2, #0]
    3df0:	6852      	ldr	r2, [r2, #4]
    3df2:	1841      	adds	r1, r0, r1
    3df4:	6019      	str	r1, [r3, #0]
    3df6:	605a      	str	r2, [r3, #4]
    3df8:	e7da      	b.n	3db0 <_free_r+0x24>
    3dfa:	42a0      	cmp	r0, r4
    3dfc:	d902      	bls.n	3e04 <_free_r+0x78>
    3dfe:	230c      	movs	r3, #12
    3e00:	602b      	str	r3, [r5, #0]
    3e02:	e7d5      	b.n	3db0 <_free_r+0x24>
    3e04:	6821      	ldr	r1, [r4, #0]
    3e06:	1860      	adds	r0, r4, r1
    3e08:	4282      	cmp	r2, r0
    3e0a:	d103      	bne.n	3e14 <_free_r+0x88>
    3e0c:	6810      	ldr	r0, [r2, #0]
    3e0e:	6852      	ldr	r2, [r2, #4]
    3e10:	1841      	adds	r1, r0, r1
    3e12:	6021      	str	r1, [r4, #0]
    3e14:	6062      	str	r2, [r4, #4]
    3e16:	605c      	str	r4, [r3, #4]
    3e18:	e7ca      	b.n	3db0 <_free_r+0x24>
    3e1a:	46c0      	nop			; (mov r8, r8)
    3e1c:	20000294 	.word	0x20000294

00003e20 <_malloc_r>:
    3e20:	2303      	movs	r3, #3
    3e22:	b570      	push	{r4, r5, r6, lr}
    3e24:	1ccd      	adds	r5, r1, #3
    3e26:	439d      	bics	r5, r3
    3e28:	3508      	adds	r5, #8
    3e2a:	0006      	movs	r6, r0
    3e2c:	2d0c      	cmp	r5, #12
    3e2e:	d21e      	bcs.n	3e6e <_malloc_r+0x4e>
    3e30:	250c      	movs	r5, #12
    3e32:	42a9      	cmp	r1, r5
    3e34:	d81d      	bhi.n	3e72 <_malloc_r+0x52>
    3e36:	0030      	movs	r0, r6
    3e38:	f000 fa62 	bl	4300 <__malloc_lock>
    3e3c:	4a25      	ldr	r2, [pc, #148]	; (3ed4 <_malloc_r+0xb4>)
    3e3e:	6814      	ldr	r4, [r2, #0]
    3e40:	0021      	movs	r1, r4
    3e42:	2900      	cmp	r1, #0
    3e44:	d119      	bne.n	3e7a <_malloc_r+0x5a>
    3e46:	4c24      	ldr	r4, [pc, #144]	; (3ed8 <_malloc_r+0xb8>)
    3e48:	6823      	ldr	r3, [r4, #0]
    3e4a:	2b00      	cmp	r3, #0
    3e4c:	d103      	bne.n	3e56 <_malloc_r+0x36>
    3e4e:	0030      	movs	r0, r6
    3e50:	f000 f988 	bl	4164 <_sbrk_r>
    3e54:	6020      	str	r0, [r4, #0]
    3e56:	0029      	movs	r1, r5
    3e58:	0030      	movs	r0, r6
    3e5a:	f000 f983 	bl	4164 <_sbrk_r>
    3e5e:	1c43      	adds	r3, r0, #1
    3e60:	d12c      	bne.n	3ebc <_malloc_r+0x9c>
    3e62:	230c      	movs	r3, #12
    3e64:	0030      	movs	r0, r6
    3e66:	6033      	str	r3, [r6, #0]
    3e68:	f000 fa4b 	bl	4302 <__malloc_unlock>
    3e6c:	e003      	b.n	3e76 <_malloc_r+0x56>
    3e6e:	2d00      	cmp	r5, #0
    3e70:	dadf      	bge.n	3e32 <_malloc_r+0x12>
    3e72:	230c      	movs	r3, #12
    3e74:	6033      	str	r3, [r6, #0]
    3e76:	2000      	movs	r0, #0
    3e78:	bd70      	pop	{r4, r5, r6, pc}
    3e7a:	680b      	ldr	r3, [r1, #0]
    3e7c:	1b5b      	subs	r3, r3, r5
    3e7e:	d41a      	bmi.n	3eb6 <_malloc_r+0x96>
    3e80:	2b0b      	cmp	r3, #11
    3e82:	d903      	bls.n	3e8c <_malloc_r+0x6c>
    3e84:	600b      	str	r3, [r1, #0]
    3e86:	18cc      	adds	r4, r1, r3
    3e88:	6025      	str	r5, [r4, #0]
    3e8a:	e003      	b.n	3e94 <_malloc_r+0x74>
    3e8c:	428c      	cmp	r4, r1
    3e8e:	d10e      	bne.n	3eae <_malloc_r+0x8e>
    3e90:	6863      	ldr	r3, [r4, #4]
    3e92:	6013      	str	r3, [r2, #0]
    3e94:	0030      	movs	r0, r6
    3e96:	f000 fa34 	bl	4302 <__malloc_unlock>
    3e9a:	0020      	movs	r0, r4
    3e9c:	2207      	movs	r2, #7
    3e9e:	300b      	adds	r0, #11
    3ea0:	1d23      	adds	r3, r4, #4
    3ea2:	4390      	bics	r0, r2
    3ea4:	1ac3      	subs	r3, r0, r3
    3ea6:	d0e7      	beq.n	3e78 <_malloc_r+0x58>
    3ea8:	425a      	negs	r2, r3
    3eaa:	50e2      	str	r2, [r4, r3]
    3eac:	e7e4      	b.n	3e78 <_malloc_r+0x58>
    3eae:	684b      	ldr	r3, [r1, #4]
    3eb0:	6063      	str	r3, [r4, #4]
    3eb2:	000c      	movs	r4, r1
    3eb4:	e7ee      	b.n	3e94 <_malloc_r+0x74>
    3eb6:	000c      	movs	r4, r1
    3eb8:	6849      	ldr	r1, [r1, #4]
    3eba:	e7c2      	b.n	3e42 <_malloc_r+0x22>
    3ebc:	2303      	movs	r3, #3
    3ebe:	1cc4      	adds	r4, r0, #3
    3ec0:	439c      	bics	r4, r3
    3ec2:	42a0      	cmp	r0, r4
    3ec4:	d0e0      	beq.n	3e88 <_malloc_r+0x68>
    3ec6:	1a21      	subs	r1, r4, r0
    3ec8:	0030      	movs	r0, r6
    3eca:	f000 f94b 	bl	4164 <_sbrk_r>
    3ece:	1c43      	adds	r3, r0, #1
    3ed0:	d1da      	bne.n	3e88 <_malloc_r+0x68>
    3ed2:	e7c6      	b.n	3e62 <_malloc_r+0x42>
    3ed4:	20000294 	.word	0x20000294
    3ed8:	20000298 	.word	0x20000298

00003edc <__sfputc_r>:
    3edc:	6893      	ldr	r3, [r2, #8]
    3ede:	b510      	push	{r4, lr}
    3ee0:	3b01      	subs	r3, #1
    3ee2:	6093      	str	r3, [r2, #8]
    3ee4:	2b00      	cmp	r3, #0
    3ee6:	da05      	bge.n	3ef4 <__sfputc_r+0x18>
    3ee8:	6994      	ldr	r4, [r2, #24]
    3eea:	42a3      	cmp	r3, r4
    3eec:	db08      	blt.n	3f00 <__sfputc_r+0x24>
    3eee:	b2cb      	uxtb	r3, r1
    3ef0:	2b0a      	cmp	r3, #10
    3ef2:	d005      	beq.n	3f00 <__sfputc_r+0x24>
    3ef4:	6813      	ldr	r3, [r2, #0]
    3ef6:	1c58      	adds	r0, r3, #1
    3ef8:	6010      	str	r0, [r2, #0]
    3efa:	7019      	strb	r1, [r3, #0]
    3efc:	b2c8      	uxtb	r0, r1
    3efe:	bd10      	pop	{r4, pc}
    3f00:	f7fe fafe 	bl	2500 <__swbuf_r>
    3f04:	e7fb      	b.n	3efe <__sfputc_r+0x22>

00003f06 <__sfputs_r>:
    3f06:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3f08:	0006      	movs	r6, r0
    3f0a:	000f      	movs	r7, r1
    3f0c:	0014      	movs	r4, r2
    3f0e:	18d5      	adds	r5, r2, r3
    3f10:	42ac      	cmp	r4, r5
    3f12:	d101      	bne.n	3f18 <__sfputs_r+0x12>
    3f14:	2000      	movs	r0, #0
    3f16:	e007      	b.n	3f28 <__sfputs_r+0x22>
    3f18:	7821      	ldrb	r1, [r4, #0]
    3f1a:	003a      	movs	r2, r7
    3f1c:	0030      	movs	r0, r6
    3f1e:	f7ff ffdd 	bl	3edc <__sfputc_r>
    3f22:	3401      	adds	r4, #1
    3f24:	1c43      	adds	r3, r0, #1
    3f26:	d1f3      	bne.n	3f10 <__sfputs_r+0xa>
    3f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00003f2c <_vfiprintf_r>:
    3f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f2e:	b09f      	sub	sp, #124	; 0x7c
    3f30:	0006      	movs	r6, r0
    3f32:	000f      	movs	r7, r1
    3f34:	0014      	movs	r4, r2
    3f36:	9305      	str	r3, [sp, #20]
    3f38:	2800      	cmp	r0, #0
    3f3a:	d004      	beq.n	3f46 <_vfiprintf_r+0x1a>
    3f3c:	6983      	ldr	r3, [r0, #24]
    3f3e:	2b00      	cmp	r3, #0
    3f40:	d101      	bne.n	3f46 <_vfiprintf_r+0x1a>
    3f42:	f7ff fb0d 	bl	3560 <__sinit>
    3f46:	4b7f      	ldr	r3, [pc, #508]	; (4144 <_vfiprintf_r+0x218>)
    3f48:	429f      	cmp	r7, r3
    3f4a:	d15c      	bne.n	4006 <_vfiprintf_r+0xda>
    3f4c:	6877      	ldr	r7, [r6, #4]
    3f4e:	89bb      	ldrh	r3, [r7, #12]
    3f50:	071b      	lsls	r3, r3, #28
    3f52:	d562      	bpl.n	401a <_vfiprintf_r+0xee>
    3f54:	693b      	ldr	r3, [r7, #16]
    3f56:	2b00      	cmp	r3, #0
    3f58:	d05f      	beq.n	401a <_vfiprintf_r+0xee>
    3f5a:	2300      	movs	r3, #0
    3f5c:	ad06      	add	r5, sp, #24
    3f5e:	616b      	str	r3, [r5, #20]
    3f60:	3320      	adds	r3, #32
    3f62:	766b      	strb	r3, [r5, #25]
    3f64:	3310      	adds	r3, #16
    3f66:	76ab      	strb	r3, [r5, #26]
    3f68:	9402      	str	r4, [sp, #8]
    3f6a:	9c02      	ldr	r4, [sp, #8]
    3f6c:	7823      	ldrb	r3, [r4, #0]
    3f6e:	2b00      	cmp	r3, #0
    3f70:	d15d      	bne.n	402e <_vfiprintf_r+0x102>
    3f72:	9b02      	ldr	r3, [sp, #8]
    3f74:	1ae3      	subs	r3, r4, r3
    3f76:	9304      	str	r3, [sp, #16]
    3f78:	d00d      	beq.n	3f96 <_vfiprintf_r+0x6a>
    3f7a:	9b04      	ldr	r3, [sp, #16]
    3f7c:	9a02      	ldr	r2, [sp, #8]
    3f7e:	0039      	movs	r1, r7
    3f80:	0030      	movs	r0, r6
    3f82:	f7ff ffc0 	bl	3f06 <__sfputs_r>
    3f86:	1c43      	adds	r3, r0, #1
    3f88:	d100      	bne.n	3f8c <_vfiprintf_r+0x60>
    3f8a:	e0cc      	b.n	4126 <_vfiprintf_r+0x1fa>
    3f8c:	696a      	ldr	r2, [r5, #20]
    3f8e:	9b04      	ldr	r3, [sp, #16]
    3f90:	4694      	mov	ip, r2
    3f92:	4463      	add	r3, ip
    3f94:	616b      	str	r3, [r5, #20]
    3f96:	7823      	ldrb	r3, [r4, #0]
    3f98:	2b00      	cmp	r3, #0
    3f9a:	d100      	bne.n	3f9e <_vfiprintf_r+0x72>
    3f9c:	e0c3      	b.n	4126 <_vfiprintf_r+0x1fa>
    3f9e:	2201      	movs	r2, #1
    3fa0:	2300      	movs	r3, #0
    3fa2:	4252      	negs	r2, r2
    3fa4:	606a      	str	r2, [r5, #4]
    3fa6:	a902      	add	r1, sp, #8
    3fa8:	3254      	adds	r2, #84	; 0x54
    3faa:	1852      	adds	r2, r2, r1
    3fac:	3401      	adds	r4, #1
    3fae:	602b      	str	r3, [r5, #0]
    3fb0:	60eb      	str	r3, [r5, #12]
    3fb2:	60ab      	str	r3, [r5, #8]
    3fb4:	7013      	strb	r3, [r2, #0]
    3fb6:	65ab      	str	r3, [r5, #88]	; 0x58
    3fb8:	7821      	ldrb	r1, [r4, #0]
    3fba:	2205      	movs	r2, #5
    3fbc:	4862      	ldr	r0, [pc, #392]	; (4148 <_vfiprintf_r+0x21c>)
    3fbe:	f7ff fbe1 	bl	3784 <memchr>
    3fc2:	1c63      	adds	r3, r4, #1
    3fc4:	469c      	mov	ip, r3
    3fc6:	2800      	cmp	r0, #0
    3fc8:	d135      	bne.n	4036 <_vfiprintf_r+0x10a>
    3fca:	6829      	ldr	r1, [r5, #0]
    3fcc:	06cb      	lsls	r3, r1, #27
    3fce:	d504      	bpl.n	3fda <_vfiprintf_r+0xae>
    3fd0:	2353      	movs	r3, #83	; 0x53
    3fd2:	aa02      	add	r2, sp, #8
    3fd4:	3020      	adds	r0, #32
    3fd6:	189b      	adds	r3, r3, r2
    3fd8:	7018      	strb	r0, [r3, #0]
    3fda:	070b      	lsls	r3, r1, #28
    3fdc:	d504      	bpl.n	3fe8 <_vfiprintf_r+0xbc>
    3fde:	2353      	movs	r3, #83	; 0x53
    3fe0:	202b      	movs	r0, #43	; 0x2b
    3fe2:	aa02      	add	r2, sp, #8
    3fe4:	189b      	adds	r3, r3, r2
    3fe6:	7018      	strb	r0, [r3, #0]
    3fe8:	7823      	ldrb	r3, [r4, #0]
    3fea:	2b2a      	cmp	r3, #42	; 0x2a
    3fec:	d02c      	beq.n	4048 <_vfiprintf_r+0x11c>
    3fee:	2000      	movs	r0, #0
    3ff0:	210a      	movs	r1, #10
    3ff2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3ff4:	7822      	ldrb	r2, [r4, #0]
    3ff6:	3a30      	subs	r2, #48	; 0x30
    3ff8:	2a09      	cmp	r2, #9
    3ffa:	d800      	bhi.n	3ffe <_vfiprintf_r+0xd2>
    3ffc:	e06b      	b.n	40d6 <_vfiprintf_r+0x1aa>
    3ffe:	2800      	cmp	r0, #0
    4000:	d02a      	beq.n	4058 <_vfiprintf_r+0x12c>
    4002:	9309      	str	r3, [sp, #36]	; 0x24
    4004:	e028      	b.n	4058 <_vfiprintf_r+0x12c>
    4006:	4b51      	ldr	r3, [pc, #324]	; (414c <_vfiprintf_r+0x220>)
    4008:	429f      	cmp	r7, r3
    400a:	d101      	bne.n	4010 <_vfiprintf_r+0xe4>
    400c:	68b7      	ldr	r7, [r6, #8]
    400e:	e79e      	b.n	3f4e <_vfiprintf_r+0x22>
    4010:	4b4f      	ldr	r3, [pc, #316]	; (4150 <_vfiprintf_r+0x224>)
    4012:	429f      	cmp	r7, r3
    4014:	d19b      	bne.n	3f4e <_vfiprintf_r+0x22>
    4016:	68f7      	ldr	r7, [r6, #12]
    4018:	e799      	b.n	3f4e <_vfiprintf_r+0x22>
    401a:	0039      	movs	r1, r7
    401c:	0030      	movs	r0, r6
    401e:	f7fe fac5 	bl	25ac <__swsetup_r>
    4022:	2800      	cmp	r0, #0
    4024:	d099      	beq.n	3f5a <_vfiprintf_r+0x2e>
    4026:	2001      	movs	r0, #1
    4028:	4240      	negs	r0, r0
    402a:	b01f      	add	sp, #124	; 0x7c
    402c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    402e:	2b25      	cmp	r3, #37	; 0x25
    4030:	d09f      	beq.n	3f72 <_vfiprintf_r+0x46>
    4032:	3401      	adds	r4, #1
    4034:	e79a      	b.n	3f6c <_vfiprintf_r+0x40>
    4036:	4b44      	ldr	r3, [pc, #272]	; (4148 <_vfiprintf_r+0x21c>)
    4038:	6829      	ldr	r1, [r5, #0]
    403a:	1ac0      	subs	r0, r0, r3
    403c:	2301      	movs	r3, #1
    403e:	4083      	lsls	r3, r0
    4040:	430b      	orrs	r3, r1
    4042:	602b      	str	r3, [r5, #0]
    4044:	4664      	mov	r4, ip
    4046:	e7b7      	b.n	3fb8 <_vfiprintf_r+0x8c>
    4048:	9b05      	ldr	r3, [sp, #20]
    404a:	1d18      	adds	r0, r3, #4
    404c:	681b      	ldr	r3, [r3, #0]
    404e:	9005      	str	r0, [sp, #20]
    4050:	2b00      	cmp	r3, #0
    4052:	db3a      	blt.n	40ca <_vfiprintf_r+0x19e>
    4054:	9309      	str	r3, [sp, #36]	; 0x24
    4056:	4664      	mov	r4, ip
    4058:	7823      	ldrb	r3, [r4, #0]
    405a:	2b2e      	cmp	r3, #46	; 0x2e
    405c:	d10b      	bne.n	4076 <_vfiprintf_r+0x14a>
    405e:	7863      	ldrb	r3, [r4, #1]
    4060:	1c62      	adds	r2, r4, #1
    4062:	2b2a      	cmp	r3, #42	; 0x2a
    4064:	d13f      	bne.n	40e6 <_vfiprintf_r+0x1ba>
    4066:	9b05      	ldr	r3, [sp, #20]
    4068:	3402      	adds	r4, #2
    406a:	1d1a      	adds	r2, r3, #4
    406c:	681b      	ldr	r3, [r3, #0]
    406e:	9205      	str	r2, [sp, #20]
    4070:	2b00      	cmp	r3, #0
    4072:	db35      	blt.n	40e0 <_vfiprintf_r+0x1b4>
    4074:	9307      	str	r3, [sp, #28]
    4076:	7821      	ldrb	r1, [r4, #0]
    4078:	2203      	movs	r2, #3
    407a:	4836      	ldr	r0, [pc, #216]	; (4154 <_vfiprintf_r+0x228>)
    407c:	f7ff fb82 	bl	3784 <memchr>
    4080:	2800      	cmp	r0, #0
    4082:	d007      	beq.n	4094 <_vfiprintf_r+0x168>
    4084:	4b33      	ldr	r3, [pc, #204]	; (4154 <_vfiprintf_r+0x228>)
    4086:	682a      	ldr	r2, [r5, #0]
    4088:	1ac0      	subs	r0, r0, r3
    408a:	2340      	movs	r3, #64	; 0x40
    408c:	4083      	lsls	r3, r0
    408e:	4313      	orrs	r3, r2
    4090:	602b      	str	r3, [r5, #0]
    4092:	3401      	adds	r4, #1
    4094:	7821      	ldrb	r1, [r4, #0]
    4096:	1c63      	adds	r3, r4, #1
    4098:	2206      	movs	r2, #6
    409a:	482f      	ldr	r0, [pc, #188]	; (4158 <_vfiprintf_r+0x22c>)
    409c:	9302      	str	r3, [sp, #8]
    409e:	7629      	strb	r1, [r5, #24]
    40a0:	f7ff fb70 	bl	3784 <memchr>
    40a4:	2800      	cmp	r0, #0
    40a6:	d044      	beq.n	4132 <_vfiprintf_r+0x206>
    40a8:	4b2c      	ldr	r3, [pc, #176]	; (415c <_vfiprintf_r+0x230>)
    40aa:	2b00      	cmp	r3, #0
    40ac:	d12f      	bne.n	410e <_vfiprintf_r+0x1e2>
    40ae:	6829      	ldr	r1, [r5, #0]
    40b0:	9b05      	ldr	r3, [sp, #20]
    40b2:	2207      	movs	r2, #7
    40b4:	05c9      	lsls	r1, r1, #23
    40b6:	d528      	bpl.n	410a <_vfiprintf_r+0x1de>
    40b8:	189b      	adds	r3, r3, r2
    40ba:	4393      	bics	r3, r2
    40bc:	3308      	adds	r3, #8
    40be:	9305      	str	r3, [sp, #20]
    40c0:	696b      	ldr	r3, [r5, #20]
    40c2:	9a03      	ldr	r2, [sp, #12]
    40c4:	189b      	adds	r3, r3, r2
    40c6:	616b      	str	r3, [r5, #20]
    40c8:	e74f      	b.n	3f6a <_vfiprintf_r+0x3e>
    40ca:	425b      	negs	r3, r3
    40cc:	60eb      	str	r3, [r5, #12]
    40ce:	2302      	movs	r3, #2
    40d0:	430b      	orrs	r3, r1
    40d2:	602b      	str	r3, [r5, #0]
    40d4:	e7bf      	b.n	4056 <_vfiprintf_r+0x12a>
    40d6:	434b      	muls	r3, r1
    40d8:	3401      	adds	r4, #1
    40da:	189b      	adds	r3, r3, r2
    40dc:	2001      	movs	r0, #1
    40de:	e789      	b.n	3ff4 <_vfiprintf_r+0xc8>
    40e0:	2301      	movs	r3, #1
    40e2:	425b      	negs	r3, r3
    40e4:	e7c6      	b.n	4074 <_vfiprintf_r+0x148>
    40e6:	2300      	movs	r3, #0
    40e8:	0014      	movs	r4, r2
    40ea:	200a      	movs	r0, #10
    40ec:	001a      	movs	r2, r3
    40ee:	606b      	str	r3, [r5, #4]
    40f0:	7821      	ldrb	r1, [r4, #0]
    40f2:	3930      	subs	r1, #48	; 0x30
    40f4:	2909      	cmp	r1, #9
    40f6:	d903      	bls.n	4100 <_vfiprintf_r+0x1d4>
    40f8:	2b00      	cmp	r3, #0
    40fa:	d0bc      	beq.n	4076 <_vfiprintf_r+0x14a>
    40fc:	9207      	str	r2, [sp, #28]
    40fe:	e7ba      	b.n	4076 <_vfiprintf_r+0x14a>
    4100:	4342      	muls	r2, r0
    4102:	3401      	adds	r4, #1
    4104:	1852      	adds	r2, r2, r1
    4106:	2301      	movs	r3, #1
    4108:	e7f2      	b.n	40f0 <_vfiprintf_r+0x1c4>
    410a:	3307      	adds	r3, #7
    410c:	e7d5      	b.n	40ba <_vfiprintf_r+0x18e>
    410e:	ab05      	add	r3, sp, #20
    4110:	9300      	str	r3, [sp, #0]
    4112:	003a      	movs	r2, r7
    4114:	4b12      	ldr	r3, [pc, #72]	; (4160 <_vfiprintf_r+0x234>)
    4116:	0029      	movs	r1, r5
    4118:	0030      	movs	r0, r6
    411a:	f7fd fcdb 	bl	1ad4 <_printf_float>
    411e:	9003      	str	r0, [sp, #12]
    4120:	9b03      	ldr	r3, [sp, #12]
    4122:	3301      	adds	r3, #1
    4124:	d1cc      	bne.n	40c0 <_vfiprintf_r+0x194>
    4126:	89bb      	ldrh	r3, [r7, #12]
    4128:	065b      	lsls	r3, r3, #25
    412a:	d500      	bpl.n	412e <_vfiprintf_r+0x202>
    412c:	e77b      	b.n	4026 <_vfiprintf_r+0xfa>
    412e:	980b      	ldr	r0, [sp, #44]	; 0x2c
    4130:	e77b      	b.n	402a <_vfiprintf_r+0xfe>
    4132:	ab05      	add	r3, sp, #20
    4134:	9300      	str	r3, [sp, #0]
    4136:	003a      	movs	r2, r7
    4138:	4b09      	ldr	r3, [pc, #36]	; (4160 <_vfiprintf_r+0x234>)
    413a:	0029      	movs	r1, r5
    413c:	0030      	movs	r0, r6
    413e:	f7fd ff83 	bl	2048 <_printf_i>
    4142:	e7ec      	b.n	411e <_vfiprintf_r+0x1f2>
    4144:	000065f8 	.word	0x000065f8
    4148:	00006734 	.word	0x00006734
    414c:	00006618 	.word	0x00006618
    4150:	000065d8 	.word	0x000065d8
    4154:	0000673a 	.word	0x0000673a
    4158:	0000673e 	.word	0x0000673e
    415c:	00001ad5 	.word	0x00001ad5
    4160:	00003f07 	.word	0x00003f07

00004164 <_sbrk_r>:
    4164:	2300      	movs	r3, #0
    4166:	b570      	push	{r4, r5, r6, lr}
    4168:	4c06      	ldr	r4, [pc, #24]	; (4184 <_sbrk_r+0x20>)
    416a:	0005      	movs	r5, r0
    416c:	0008      	movs	r0, r1
    416e:	6023      	str	r3, [r4, #0]
    4170:	f7fd fbca 	bl	1908 <_sbrk>
    4174:	1c43      	adds	r3, r0, #1
    4176:	d103      	bne.n	4180 <_sbrk_r+0x1c>
    4178:	6823      	ldr	r3, [r4, #0]
    417a:	2b00      	cmp	r3, #0
    417c:	d000      	beq.n	4180 <_sbrk_r+0x1c>
    417e:	602b      	str	r3, [r5, #0]
    4180:	bd70      	pop	{r4, r5, r6, pc}
    4182:	46c0      	nop			; (mov r8, r8)
    4184:	200002a8 	.word	0x200002a8

00004188 <__sread>:
    4188:	b570      	push	{r4, r5, r6, lr}
    418a:	000c      	movs	r4, r1
    418c:	250e      	movs	r5, #14
    418e:	5f49      	ldrsh	r1, [r1, r5]
    4190:	f000 f8b8 	bl	4304 <_read_r>
    4194:	2800      	cmp	r0, #0
    4196:	db03      	blt.n	41a0 <__sread+0x18>
    4198:	6d63      	ldr	r3, [r4, #84]	; 0x54
    419a:	181b      	adds	r3, r3, r0
    419c:	6563      	str	r3, [r4, #84]	; 0x54
    419e:	bd70      	pop	{r4, r5, r6, pc}
    41a0:	89a3      	ldrh	r3, [r4, #12]
    41a2:	4a02      	ldr	r2, [pc, #8]	; (41ac <__sread+0x24>)
    41a4:	4013      	ands	r3, r2
    41a6:	81a3      	strh	r3, [r4, #12]
    41a8:	e7f9      	b.n	419e <__sread+0x16>
    41aa:	46c0      	nop			; (mov r8, r8)
    41ac:	ffffefff 	.word	0xffffefff

000041b0 <__swrite>:
    41b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    41b2:	001f      	movs	r7, r3
    41b4:	898b      	ldrh	r3, [r1, #12]
    41b6:	0005      	movs	r5, r0
    41b8:	000c      	movs	r4, r1
    41ba:	0016      	movs	r6, r2
    41bc:	05db      	lsls	r3, r3, #23
    41be:	d505      	bpl.n	41cc <__swrite+0x1c>
    41c0:	230e      	movs	r3, #14
    41c2:	5ec9      	ldrsh	r1, [r1, r3]
    41c4:	2200      	movs	r2, #0
    41c6:	2302      	movs	r3, #2
    41c8:	f000 f874 	bl	42b4 <_lseek_r>
    41cc:	89a3      	ldrh	r3, [r4, #12]
    41ce:	4a05      	ldr	r2, [pc, #20]	; (41e4 <__swrite+0x34>)
    41d0:	0028      	movs	r0, r5
    41d2:	4013      	ands	r3, r2
    41d4:	81a3      	strh	r3, [r4, #12]
    41d6:	0032      	movs	r2, r6
    41d8:	230e      	movs	r3, #14
    41da:	5ee1      	ldrsh	r1, [r4, r3]
    41dc:	003b      	movs	r3, r7
    41de:	f000 f81f 	bl	4220 <_write_r>
    41e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    41e4:	ffffefff 	.word	0xffffefff

000041e8 <__sseek>:
    41e8:	b570      	push	{r4, r5, r6, lr}
    41ea:	000c      	movs	r4, r1
    41ec:	250e      	movs	r5, #14
    41ee:	5f49      	ldrsh	r1, [r1, r5]
    41f0:	f000 f860 	bl	42b4 <_lseek_r>
    41f4:	89a3      	ldrh	r3, [r4, #12]
    41f6:	1c42      	adds	r2, r0, #1
    41f8:	d103      	bne.n	4202 <__sseek+0x1a>
    41fa:	4a05      	ldr	r2, [pc, #20]	; (4210 <__sseek+0x28>)
    41fc:	4013      	ands	r3, r2
    41fe:	81a3      	strh	r3, [r4, #12]
    4200:	bd70      	pop	{r4, r5, r6, pc}
    4202:	2280      	movs	r2, #128	; 0x80
    4204:	0152      	lsls	r2, r2, #5
    4206:	4313      	orrs	r3, r2
    4208:	81a3      	strh	r3, [r4, #12]
    420a:	6560      	str	r0, [r4, #84]	; 0x54
    420c:	e7f8      	b.n	4200 <__sseek+0x18>
    420e:	46c0      	nop			; (mov r8, r8)
    4210:	ffffefff 	.word	0xffffefff

00004214 <__sclose>:
    4214:	b510      	push	{r4, lr}
    4216:	230e      	movs	r3, #14
    4218:	5ec9      	ldrsh	r1, [r1, r3]
    421a:	f000 f815 	bl	4248 <_close_r>
    421e:	bd10      	pop	{r4, pc}

00004220 <_write_r>:
    4220:	b570      	push	{r4, r5, r6, lr}
    4222:	0005      	movs	r5, r0
    4224:	0008      	movs	r0, r1
    4226:	0011      	movs	r1, r2
    4228:	2200      	movs	r2, #0
    422a:	4c06      	ldr	r4, [pc, #24]	; (4244 <_write_r+0x24>)
    422c:	6022      	str	r2, [r4, #0]
    422e:	001a      	movs	r2, r3
    4230:	f7fd fb42 	bl	18b8 <_write>
    4234:	1c43      	adds	r3, r0, #1
    4236:	d103      	bne.n	4240 <_write_r+0x20>
    4238:	6823      	ldr	r3, [r4, #0]
    423a:	2b00      	cmp	r3, #0
    423c:	d000      	beq.n	4240 <_write_r+0x20>
    423e:	602b      	str	r3, [r5, #0]
    4240:	bd70      	pop	{r4, r5, r6, pc}
    4242:	46c0      	nop			; (mov r8, r8)
    4244:	200002a8 	.word	0x200002a8

00004248 <_close_r>:
    4248:	2300      	movs	r3, #0
    424a:	b570      	push	{r4, r5, r6, lr}
    424c:	4c06      	ldr	r4, [pc, #24]	; (4268 <_close_r+0x20>)
    424e:	0005      	movs	r5, r0
    4250:	0008      	movs	r0, r1
    4252:	6023      	str	r3, [r4, #0]
    4254:	f7fd fb6a 	bl	192c <_close>
    4258:	1c43      	adds	r3, r0, #1
    425a:	d103      	bne.n	4264 <_close_r+0x1c>
    425c:	6823      	ldr	r3, [r4, #0]
    425e:	2b00      	cmp	r3, #0
    4260:	d000      	beq.n	4264 <_close_r+0x1c>
    4262:	602b      	str	r3, [r5, #0]
    4264:	bd70      	pop	{r4, r5, r6, pc}
    4266:	46c0      	nop			; (mov r8, r8)
    4268:	200002a8 	.word	0x200002a8

0000426c <_fstat_r>:
    426c:	2300      	movs	r3, #0
    426e:	b570      	push	{r4, r5, r6, lr}
    4270:	4c06      	ldr	r4, [pc, #24]	; (428c <_fstat_r+0x20>)
    4272:	0005      	movs	r5, r0
    4274:	0008      	movs	r0, r1
    4276:	0011      	movs	r1, r2
    4278:	6023      	str	r3, [r4, #0]
    427a:	f7fd fb5a 	bl	1932 <_fstat>
    427e:	1c43      	adds	r3, r0, #1
    4280:	d103      	bne.n	428a <_fstat_r+0x1e>
    4282:	6823      	ldr	r3, [r4, #0]
    4284:	2b00      	cmp	r3, #0
    4286:	d000      	beq.n	428a <_fstat_r+0x1e>
    4288:	602b      	str	r3, [r5, #0]
    428a:	bd70      	pop	{r4, r5, r6, pc}
    428c:	200002a8 	.word	0x200002a8

00004290 <_isatty_r>:
    4290:	2300      	movs	r3, #0
    4292:	b570      	push	{r4, r5, r6, lr}
    4294:	4c06      	ldr	r4, [pc, #24]	; (42b0 <_isatty_r+0x20>)
    4296:	0005      	movs	r5, r0
    4298:	0008      	movs	r0, r1
    429a:	6023      	str	r3, [r4, #0]
    429c:	f7fd fb4e 	bl	193c <_isatty>
    42a0:	1c43      	adds	r3, r0, #1
    42a2:	d103      	bne.n	42ac <_isatty_r+0x1c>
    42a4:	6823      	ldr	r3, [r4, #0]
    42a6:	2b00      	cmp	r3, #0
    42a8:	d000      	beq.n	42ac <_isatty_r+0x1c>
    42aa:	602b      	str	r3, [r5, #0]
    42ac:	bd70      	pop	{r4, r5, r6, pc}
    42ae:	46c0      	nop			; (mov r8, r8)
    42b0:	200002a8 	.word	0x200002a8

000042b4 <_lseek_r>:
    42b4:	b570      	push	{r4, r5, r6, lr}
    42b6:	0005      	movs	r5, r0
    42b8:	0008      	movs	r0, r1
    42ba:	0011      	movs	r1, r2
    42bc:	2200      	movs	r2, #0
    42be:	4c06      	ldr	r4, [pc, #24]	; (42d8 <_lseek_r+0x24>)
    42c0:	6022      	str	r2, [r4, #0]
    42c2:	001a      	movs	r2, r3
    42c4:	f7fd fb3c 	bl	1940 <_lseek>
    42c8:	1c43      	adds	r3, r0, #1
    42ca:	d103      	bne.n	42d4 <_lseek_r+0x20>
    42cc:	6823      	ldr	r3, [r4, #0]
    42ce:	2b00      	cmp	r3, #0
    42d0:	d000      	beq.n	42d4 <_lseek_r+0x20>
    42d2:	602b      	str	r3, [r5, #0]
    42d4:	bd70      	pop	{r4, r5, r6, pc}
    42d6:	46c0      	nop			; (mov r8, r8)
    42d8:	200002a8 	.word	0x200002a8

000042dc <__ascii_mbtowc>:
    42dc:	b082      	sub	sp, #8
    42de:	2900      	cmp	r1, #0
    42e0:	d100      	bne.n	42e4 <__ascii_mbtowc+0x8>
    42e2:	a901      	add	r1, sp, #4
    42e4:	1e10      	subs	r0, r2, #0
    42e6:	d006      	beq.n	42f6 <__ascii_mbtowc+0x1a>
    42e8:	2b00      	cmp	r3, #0
    42ea:	d006      	beq.n	42fa <__ascii_mbtowc+0x1e>
    42ec:	7813      	ldrb	r3, [r2, #0]
    42ee:	600b      	str	r3, [r1, #0]
    42f0:	7810      	ldrb	r0, [r2, #0]
    42f2:	1e43      	subs	r3, r0, #1
    42f4:	4198      	sbcs	r0, r3
    42f6:	b002      	add	sp, #8
    42f8:	4770      	bx	lr
    42fa:	2002      	movs	r0, #2
    42fc:	4240      	negs	r0, r0
    42fe:	e7fa      	b.n	42f6 <__ascii_mbtowc+0x1a>

00004300 <__malloc_lock>:
    4300:	4770      	bx	lr

00004302 <__malloc_unlock>:
    4302:	4770      	bx	lr

00004304 <_read_r>:
    4304:	b570      	push	{r4, r5, r6, lr}
    4306:	0005      	movs	r5, r0
    4308:	0008      	movs	r0, r1
    430a:	0011      	movs	r1, r2
    430c:	2200      	movs	r2, #0
    430e:	4c06      	ldr	r4, [pc, #24]	; (4328 <_read_r+0x24>)
    4310:	6022      	str	r2, [r4, #0]
    4312:	001a      	movs	r2, r3
    4314:	f7fd faae 	bl	1874 <_read>
    4318:	1c43      	adds	r3, r0, #1
    431a:	d103      	bne.n	4324 <_read_r+0x20>
    431c:	6823      	ldr	r3, [r4, #0]
    431e:	2b00      	cmp	r3, #0
    4320:	d000      	beq.n	4324 <_read_r+0x20>
    4322:	602b      	str	r3, [r5, #0]
    4324:	bd70      	pop	{r4, r5, r6, pc}
    4326:	46c0      	nop			; (mov r8, r8)
    4328:	200002a8 	.word	0x200002a8

0000432c <__ascii_wctomb>:
    432c:	1e0b      	subs	r3, r1, #0
    432e:	d004      	beq.n	433a <__ascii_wctomb+0xe>
    4330:	2aff      	cmp	r2, #255	; 0xff
    4332:	d904      	bls.n	433e <__ascii_wctomb+0x12>
    4334:	238a      	movs	r3, #138	; 0x8a
    4336:	6003      	str	r3, [r0, #0]
    4338:	3b8b      	subs	r3, #139	; 0x8b
    433a:	0018      	movs	r0, r3
    433c:	4770      	bx	lr
    433e:	700a      	strb	r2, [r1, #0]
    4340:	2301      	movs	r3, #1
    4342:	e7fa      	b.n	433a <__ascii_wctomb+0xe>

00004344 <__gnu_thumb1_case_uqi>:
    4344:	b402      	push	{r1}
    4346:	4671      	mov	r1, lr
    4348:	0849      	lsrs	r1, r1, #1
    434a:	0049      	lsls	r1, r1, #1
    434c:	5c09      	ldrb	r1, [r1, r0]
    434e:	0049      	lsls	r1, r1, #1
    4350:	448e      	add	lr, r1
    4352:	bc02      	pop	{r1}
    4354:	4770      	bx	lr
    4356:	46c0      	nop			; (mov r8, r8)

00004358 <__udivsi3>:
    4358:	2200      	movs	r2, #0
    435a:	0843      	lsrs	r3, r0, #1
    435c:	428b      	cmp	r3, r1
    435e:	d374      	bcc.n	444a <__udivsi3+0xf2>
    4360:	0903      	lsrs	r3, r0, #4
    4362:	428b      	cmp	r3, r1
    4364:	d35f      	bcc.n	4426 <__udivsi3+0xce>
    4366:	0a03      	lsrs	r3, r0, #8
    4368:	428b      	cmp	r3, r1
    436a:	d344      	bcc.n	43f6 <__udivsi3+0x9e>
    436c:	0b03      	lsrs	r3, r0, #12
    436e:	428b      	cmp	r3, r1
    4370:	d328      	bcc.n	43c4 <__udivsi3+0x6c>
    4372:	0c03      	lsrs	r3, r0, #16
    4374:	428b      	cmp	r3, r1
    4376:	d30d      	bcc.n	4394 <__udivsi3+0x3c>
    4378:	22ff      	movs	r2, #255	; 0xff
    437a:	0209      	lsls	r1, r1, #8
    437c:	ba12      	rev	r2, r2
    437e:	0c03      	lsrs	r3, r0, #16
    4380:	428b      	cmp	r3, r1
    4382:	d302      	bcc.n	438a <__udivsi3+0x32>
    4384:	1212      	asrs	r2, r2, #8
    4386:	0209      	lsls	r1, r1, #8
    4388:	d065      	beq.n	4456 <__udivsi3+0xfe>
    438a:	0b03      	lsrs	r3, r0, #12
    438c:	428b      	cmp	r3, r1
    438e:	d319      	bcc.n	43c4 <__udivsi3+0x6c>
    4390:	e000      	b.n	4394 <__udivsi3+0x3c>
    4392:	0a09      	lsrs	r1, r1, #8
    4394:	0bc3      	lsrs	r3, r0, #15
    4396:	428b      	cmp	r3, r1
    4398:	d301      	bcc.n	439e <__udivsi3+0x46>
    439a:	03cb      	lsls	r3, r1, #15
    439c:	1ac0      	subs	r0, r0, r3
    439e:	4152      	adcs	r2, r2
    43a0:	0b83      	lsrs	r3, r0, #14
    43a2:	428b      	cmp	r3, r1
    43a4:	d301      	bcc.n	43aa <__udivsi3+0x52>
    43a6:	038b      	lsls	r3, r1, #14
    43a8:	1ac0      	subs	r0, r0, r3
    43aa:	4152      	adcs	r2, r2
    43ac:	0b43      	lsrs	r3, r0, #13
    43ae:	428b      	cmp	r3, r1
    43b0:	d301      	bcc.n	43b6 <__udivsi3+0x5e>
    43b2:	034b      	lsls	r3, r1, #13
    43b4:	1ac0      	subs	r0, r0, r3
    43b6:	4152      	adcs	r2, r2
    43b8:	0b03      	lsrs	r3, r0, #12
    43ba:	428b      	cmp	r3, r1
    43bc:	d301      	bcc.n	43c2 <__udivsi3+0x6a>
    43be:	030b      	lsls	r3, r1, #12
    43c0:	1ac0      	subs	r0, r0, r3
    43c2:	4152      	adcs	r2, r2
    43c4:	0ac3      	lsrs	r3, r0, #11
    43c6:	428b      	cmp	r3, r1
    43c8:	d301      	bcc.n	43ce <__udivsi3+0x76>
    43ca:	02cb      	lsls	r3, r1, #11
    43cc:	1ac0      	subs	r0, r0, r3
    43ce:	4152      	adcs	r2, r2
    43d0:	0a83      	lsrs	r3, r0, #10
    43d2:	428b      	cmp	r3, r1
    43d4:	d301      	bcc.n	43da <__udivsi3+0x82>
    43d6:	028b      	lsls	r3, r1, #10
    43d8:	1ac0      	subs	r0, r0, r3
    43da:	4152      	adcs	r2, r2
    43dc:	0a43      	lsrs	r3, r0, #9
    43de:	428b      	cmp	r3, r1
    43e0:	d301      	bcc.n	43e6 <__udivsi3+0x8e>
    43e2:	024b      	lsls	r3, r1, #9
    43e4:	1ac0      	subs	r0, r0, r3
    43e6:	4152      	adcs	r2, r2
    43e8:	0a03      	lsrs	r3, r0, #8
    43ea:	428b      	cmp	r3, r1
    43ec:	d301      	bcc.n	43f2 <__udivsi3+0x9a>
    43ee:	020b      	lsls	r3, r1, #8
    43f0:	1ac0      	subs	r0, r0, r3
    43f2:	4152      	adcs	r2, r2
    43f4:	d2cd      	bcs.n	4392 <__udivsi3+0x3a>
    43f6:	09c3      	lsrs	r3, r0, #7
    43f8:	428b      	cmp	r3, r1
    43fa:	d301      	bcc.n	4400 <__udivsi3+0xa8>
    43fc:	01cb      	lsls	r3, r1, #7
    43fe:	1ac0      	subs	r0, r0, r3
    4400:	4152      	adcs	r2, r2
    4402:	0983      	lsrs	r3, r0, #6
    4404:	428b      	cmp	r3, r1
    4406:	d301      	bcc.n	440c <__udivsi3+0xb4>
    4408:	018b      	lsls	r3, r1, #6
    440a:	1ac0      	subs	r0, r0, r3
    440c:	4152      	adcs	r2, r2
    440e:	0943      	lsrs	r3, r0, #5
    4410:	428b      	cmp	r3, r1
    4412:	d301      	bcc.n	4418 <__udivsi3+0xc0>
    4414:	014b      	lsls	r3, r1, #5
    4416:	1ac0      	subs	r0, r0, r3
    4418:	4152      	adcs	r2, r2
    441a:	0903      	lsrs	r3, r0, #4
    441c:	428b      	cmp	r3, r1
    441e:	d301      	bcc.n	4424 <__udivsi3+0xcc>
    4420:	010b      	lsls	r3, r1, #4
    4422:	1ac0      	subs	r0, r0, r3
    4424:	4152      	adcs	r2, r2
    4426:	08c3      	lsrs	r3, r0, #3
    4428:	428b      	cmp	r3, r1
    442a:	d301      	bcc.n	4430 <__udivsi3+0xd8>
    442c:	00cb      	lsls	r3, r1, #3
    442e:	1ac0      	subs	r0, r0, r3
    4430:	4152      	adcs	r2, r2
    4432:	0883      	lsrs	r3, r0, #2
    4434:	428b      	cmp	r3, r1
    4436:	d301      	bcc.n	443c <__udivsi3+0xe4>
    4438:	008b      	lsls	r3, r1, #2
    443a:	1ac0      	subs	r0, r0, r3
    443c:	4152      	adcs	r2, r2
    443e:	0843      	lsrs	r3, r0, #1
    4440:	428b      	cmp	r3, r1
    4442:	d301      	bcc.n	4448 <__udivsi3+0xf0>
    4444:	004b      	lsls	r3, r1, #1
    4446:	1ac0      	subs	r0, r0, r3
    4448:	4152      	adcs	r2, r2
    444a:	1a41      	subs	r1, r0, r1
    444c:	d200      	bcs.n	4450 <__udivsi3+0xf8>
    444e:	4601      	mov	r1, r0
    4450:	4152      	adcs	r2, r2
    4452:	4610      	mov	r0, r2
    4454:	4770      	bx	lr
    4456:	e7ff      	b.n	4458 <__udivsi3+0x100>
    4458:	b501      	push	{r0, lr}
    445a:	2000      	movs	r0, #0
    445c:	f000 f8f0 	bl	4640 <__aeabi_idiv0>
    4460:	bd02      	pop	{r1, pc}
    4462:	46c0      	nop			; (mov r8, r8)

00004464 <__aeabi_uidivmod>:
    4464:	2900      	cmp	r1, #0
    4466:	d0f7      	beq.n	4458 <__udivsi3+0x100>
    4468:	e776      	b.n	4358 <__udivsi3>
    446a:	4770      	bx	lr

0000446c <__divsi3>:
    446c:	4603      	mov	r3, r0
    446e:	430b      	orrs	r3, r1
    4470:	d47f      	bmi.n	4572 <__divsi3+0x106>
    4472:	2200      	movs	r2, #0
    4474:	0843      	lsrs	r3, r0, #1
    4476:	428b      	cmp	r3, r1
    4478:	d374      	bcc.n	4564 <__divsi3+0xf8>
    447a:	0903      	lsrs	r3, r0, #4
    447c:	428b      	cmp	r3, r1
    447e:	d35f      	bcc.n	4540 <__divsi3+0xd4>
    4480:	0a03      	lsrs	r3, r0, #8
    4482:	428b      	cmp	r3, r1
    4484:	d344      	bcc.n	4510 <__divsi3+0xa4>
    4486:	0b03      	lsrs	r3, r0, #12
    4488:	428b      	cmp	r3, r1
    448a:	d328      	bcc.n	44de <__divsi3+0x72>
    448c:	0c03      	lsrs	r3, r0, #16
    448e:	428b      	cmp	r3, r1
    4490:	d30d      	bcc.n	44ae <__divsi3+0x42>
    4492:	22ff      	movs	r2, #255	; 0xff
    4494:	0209      	lsls	r1, r1, #8
    4496:	ba12      	rev	r2, r2
    4498:	0c03      	lsrs	r3, r0, #16
    449a:	428b      	cmp	r3, r1
    449c:	d302      	bcc.n	44a4 <__divsi3+0x38>
    449e:	1212      	asrs	r2, r2, #8
    44a0:	0209      	lsls	r1, r1, #8
    44a2:	d065      	beq.n	4570 <__divsi3+0x104>
    44a4:	0b03      	lsrs	r3, r0, #12
    44a6:	428b      	cmp	r3, r1
    44a8:	d319      	bcc.n	44de <__divsi3+0x72>
    44aa:	e000      	b.n	44ae <__divsi3+0x42>
    44ac:	0a09      	lsrs	r1, r1, #8
    44ae:	0bc3      	lsrs	r3, r0, #15
    44b0:	428b      	cmp	r3, r1
    44b2:	d301      	bcc.n	44b8 <__divsi3+0x4c>
    44b4:	03cb      	lsls	r3, r1, #15
    44b6:	1ac0      	subs	r0, r0, r3
    44b8:	4152      	adcs	r2, r2
    44ba:	0b83      	lsrs	r3, r0, #14
    44bc:	428b      	cmp	r3, r1
    44be:	d301      	bcc.n	44c4 <__divsi3+0x58>
    44c0:	038b      	lsls	r3, r1, #14
    44c2:	1ac0      	subs	r0, r0, r3
    44c4:	4152      	adcs	r2, r2
    44c6:	0b43      	lsrs	r3, r0, #13
    44c8:	428b      	cmp	r3, r1
    44ca:	d301      	bcc.n	44d0 <__divsi3+0x64>
    44cc:	034b      	lsls	r3, r1, #13
    44ce:	1ac0      	subs	r0, r0, r3
    44d0:	4152      	adcs	r2, r2
    44d2:	0b03      	lsrs	r3, r0, #12
    44d4:	428b      	cmp	r3, r1
    44d6:	d301      	bcc.n	44dc <__divsi3+0x70>
    44d8:	030b      	lsls	r3, r1, #12
    44da:	1ac0      	subs	r0, r0, r3
    44dc:	4152      	adcs	r2, r2
    44de:	0ac3      	lsrs	r3, r0, #11
    44e0:	428b      	cmp	r3, r1
    44e2:	d301      	bcc.n	44e8 <__divsi3+0x7c>
    44e4:	02cb      	lsls	r3, r1, #11
    44e6:	1ac0      	subs	r0, r0, r3
    44e8:	4152      	adcs	r2, r2
    44ea:	0a83      	lsrs	r3, r0, #10
    44ec:	428b      	cmp	r3, r1
    44ee:	d301      	bcc.n	44f4 <__divsi3+0x88>
    44f0:	028b      	lsls	r3, r1, #10
    44f2:	1ac0      	subs	r0, r0, r3
    44f4:	4152      	adcs	r2, r2
    44f6:	0a43      	lsrs	r3, r0, #9
    44f8:	428b      	cmp	r3, r1
    44fa:	d301      	bcc.n	4500 <__divsi3+0x94>
    44fc:	024b      	lsls	r3, r1, #9
    44fe:	1ac0      	subs	r0, r0, r3
    4500:	4152      	adcs	r2, r2
    4502:	0a03      	lsrs	r3, r0, #8
    4504:	428b      	cmp	r3, r1
    4506:	d301      	bcc.n	450c <__divsi3+0xa0>
    4508:	020b      	lsls	r3, r1, #8
    450a:	1ac0      	subs	r0, r0, r3
    450c:	4152      	adcs	r2, r2
    450e:	d2cd      	bcs.n	44ac <__divsi3+0x40>
    4510:	09c3      	lsrs	r3, r0, #7
    4512:	428b      	cmp	r3, r1
    4514:	d301      	bcc.n	451a <__divsi3+0xae>
    4516:	01cb      	lsls	r3, r1, #7
    4518:	1ac0      	subs	r0, r0, r3
    451a:	4152      	adcs	r2, r2
    451c:	0983      	lsrs	r3, r0, #6
    451e:	428b      	cmp	r3, r1
    4520:	d301      	bcc.n	4526 <__divsi3+0xba>
    4522:	018b      	lsls	r3, r1, #6
    4524:	1ac0      	subs	r0, r0, r3
    4526:	4152      	adcs	r2, r2
    4528:	0943      	lsrs	r3, r0, #5
    452a:	428b      	cmp	r3, r1
    452c:	d301      	bcc.n	4532 <__divsi3+0xc6>
    452e:	014b      	lsls	r3, r1, #5
    4530:	1ac0      	subs	r0, r0, r3
    4532:	4152      	adcs	r2, r2
    4534:	0903      	lsrs	r3, r0, #4
    4536:	428b      	cmp	r3, r1
    4538:	d301      	bcc.n	453e <__divsi3+0xd2>
    453a:	010b      	lsls	r3, r1, #4
    453c:	1ac0      	subs	r0, r0, r3
    453e:	4152      	adcs	r2, r2
    4540:	08c3      	lsrs	r3, r0, #3
    4542:	428b      	cmp	r3, r1
    4544:	d301      	bcc.n	454a <__divsi3+0xde>
    4546:	00cb      	lsls	r3, r1, #3
    4548:	1ac0      	subs	r0, r0, r3
    454a:	4152      	adcs	r2, r2
    454c:	0883      	lsrs	r3, r0, #2
    454e:	428b      	cmp	r3, r1
    4550:	d301      	bcc.n	4556 <__divsi3+0xea>
    4552:	008b      	lsls	r3, r1, #2
    4554:	1ac0      	subs	r0, r0, r3
    4556:	4152      	adcs	r2, r2
    4558:	0843      	lsrs	r3, r0, #1
    455a:	428b      	cmp	r3, r1
    455c:	d301      	bcc.n	4562 <__divsi3+0xf6>
    455e:	004b      	lsls	r3, r1, #1
    4560:	1ac0      	subs	r0, r0, r3
    4562:	4152      	adcs	r2, r2
    4564:	1a41      	subs	r1, r0, r1
    4566:	d200      	bcs.n	456a <__divsi3+0xfe>
    4568:	4601      	mov	r1, r0
    456a:	4152      	adcs	r2, r2
    456c:	4610      	mov	r0, r2
    456e:	4770      	bx	lr
    4570:	e05d      	b.n	462e <__divsi3+0x1c2>
    4572:	0fca      	lsrs	r2, r1, #31
    4574:	d000      	beq.n	4578 <__divsi3+0x10c>
    4576:	4249      	negs	r1, r1
    4578:	1003      	asrs	r3, r0, #32
    457a:	d300      	bcc.n	457e <__divsi3+0x112>
    457c:	4240      	negs	r0, r0
    457e:	4053      	eors	r3, r2
    4580:	2200      	movs	r2, #0
    4582:	469c      	mov	ip, r3
    4584:	0903      	lsrs	r3, r0, #4
    4586:	428b      	cmp	r3, r1
    4588:	d32d      	bcc.n	45e6 <__divsi3+0x17a>
    458a:	0a03      	lsrs	r3, r0, #8
    458c:	428b      	cmp	r3, r1
    458e:	d312      	bcc.n	45b6 <__divsi3+0x14a>
    4590:	22fc      	movs	r2, #252	; 0xfc
    4592:	0189      	lsls	r1, r1, #6
    4594:	ba12      	rev	r2, r2
    4596:	0a03      	lsrs	r3, r0, #8
    4598:	428b      	cmp	r3, r1
    459a:	d30c      	bcc.n	45b6 <__divsi3+0x14a>
    459c:	0189      	lsls	r1, r1, #6
    459e:	1192      	asrs	r2, r2, #6
    45a0:	428b      	cmp	r3, r1
    45a2:	d308      	bcc.n	45b6 <__divsi3+0x14a>
    45a4:	0189      	lsls	r1, r1, #6
    45a6:	1192      	asrs	r2, r2, #6
    45a8:	428b      	cmp	r3, r1
    45aa:	d304      	bcc.n	45b6 <__divsi3+0x14a>
    45ac:	0189      	lsls	r1, r1, #6
    45ae:	d03a      	beq.n	4626 <__divsi3+0x1ba>
    45b0:	1192      	asrs	r2, r2, #6
    45b2:	e000      	b.n	45b6 <__divsi3+0x14a>
    45b4:	0989      	lsrs	r1, r1, #6
    45b6:	09c3      	lsrs	r3, r0, #7
    45b8:	428b      	cmp	r3, r1
    45ba:	d301      	bcc.n	45c0 <__divsi3+0x154>
    45bc:	01cb      	lsls	r3, r1, #7
    45be:	1ac0      	subs	r0, r0, r3
    45c0:	4152      	adcs	r2, r2
    45c2:	0983      	lsrs	r3, r0, #6
    45c4:	428b      	cmp	r3, r1
    45c6:	d301      	bcc.n	45cc <__divsi3+0x160>
    45c8:	018b      	lsls	r3, r1, #6
    45ca:	1ac0      	subs	r0, r0, r3
    45cc:	4152      	adcs	r2, r2
    45ce:	0943      	lsrs	r3, r0, #5
    45d0:	428b      	cmp	r3, r1
    45d2:	d301      	bcc.n	45d8 <__divsi3+0x16c>
    45d4:	014b      	lsls	r3, r1, #5
    45d6:	1ac0      	subs	r0, r0, r3
    45d8:	4152      	adcs	r2, r2
    45da:	0903      	lsrs	r3, r0, #4
    45dc:	428b      	cmp	r3, r1
    45de:	d301      	bcc.n	45e4 <__divsi3+0x178>
    45e0:	010b      	lsls	r3, r1, #4
    45e2:	1ac0      	subs	r0, r0, r3
    45e4:	4152      	adcs	r2, r2
    45e6:	08c3      	lsrs	r3, r0, #3
    45e8:	428b      	cmp	r3, r1
    45ea:	d301      	bcc.n	45f0 <__divsi3+0x184>
    45ec:	00cb      	lsls	r3, r1, #3
    45ee:	1ac0      	subs	r0, r0, r3
    45f0:	4152      	adcs	r2, r2
    45f2:	0883      	lsrs	r3, r0, #2
    45f4:	428b      	cmp	r3, r1
    45f6:	d301      	bcc.n	45fc <__divsi3+0x190>
    45f8:	008b      	lsls	r3, r1, #2
    45fa:	1ac0      	subs	r0, r0, r3
    45fc:	4152      	adcs	r2, r2
    45fe:	d2d9      	bcs.n	45b4 <__divsi3+0x148>
    4600:	0843      	lsrs	r3, r0, #1
    4602:	428b      	cmp	r3, r1
    4604:	d301      	bcc.n	460a <__divsi3+0x19e>
    4606:	004b      	lsls	r3, r1, #1
    4608:	1ac0      	subs	r0, r0, r3
    460a:	4152      	adcs	r2, r2
    460c:	1a41      	subs	r1, r0, r1
    460e:	d200      	bcs.n	4612 <__divsi3+0x1a6>
    4610:	4601      	mov	r1, r0
    4612:	4663      	mov	r3, ip
    4614:	4152      	adcs	r2, r2
    4616:	105b      	asrs	r3, r3, #1
    4618:	4610      	mov	r0, r2
    461a:	d301      	bcc.n	4620 <__divsi3+0x1b4>
    461c:	4240      	negs	r0, r0
    461e:	2b00      	cmp	r3, #0
    4620:	d500      	bpl.n	4624 <__divsi3+0x1b8>
    4622:	4249      	negs	r1, r1
    4624:	4770      	bx	lr
    4626:	4663      	mov	r3, ip
    4628:	105b      	asrs	r3, r3, #1
    462a:	d300      	bcc.n	462e <__divsi3+0x1c2>
    462c:	4240      	negs	r0, r0
    462e:	b501      	push	{r0, lr}
    4630:	2000      	movs	r0, #0
    4632:	f000 f805 	bl	4640 <__aeabi_idiv0>
    4636:	bd02      	pop	{r1, pc}

00004638 <__aeabi_idivmod>:
    4638:	2900      	cmp	r1, #0
    463a:	d0f8      	beq.n	462e <__divsi3+0x1c2>
    463c:	e716      	b.n	446c <__divsi3>
    463e:	4770      	bx	lr

00004640 <__aeabi_idiv0>:
    4640:	4770      	bx	lr
    4642:	46c0      	nop			; (mov r8, r8)

00004644 <__aeabi_cdrcmple>:
    4644:	4684      	mov	ip, r0
    4646:	1c10      	adds	r0, r2, #0
    4648:	4662      	mov	r2, ip
    464a:	468c      	mov	ip, r1
    464c:	1c19      	adds	r1, r3, #0
    464e:	4663      	mov	r3, ip
    4650:	e000      	b.n	4654 <__aeabi_cdcmpeq>
    4652:	46c0      	nop			; (mov r8, r8)

00004654 <__aeabi_cdcmpeq>:
    4654:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    4656:	f000 ff8f 	bl	5578 <__ledf2>
    465a:	2800      	cmp	r0, #0
    465c:	d401      	bmi.n	4662 <__aeabi_cdcmpeq+0xe>
    465e:	2100      	movs	r1, #0
    4660:	42c8      	cmn	r0, r1
    4662:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00004664 <__aeabi_dcmpeq>:
    4664:	b510      	push	{r4, lr}
    4666:	f000 fee9 	bl	543c <__eqdf2>
    466a:	4240      	negs	r0, r0
    466c:	3001      	adds	r0, #1
    466e:	bd10      	pop	{r4, pc}

00004670 <__aeabi_dcmplt>:
    4670:	b510      	push	{r4, lr}
    4672:	f000 ff81 	bl	5578 <__ledf2>
    4676:	2800      	cmp	r0, #0
    4678:	db01      	blt.n	467e <__aeabi_dcmplt+0xe>
    467a:	2000      	movs	r0, #0
    467c:	bd10      	pop	{r4, pc}
    467e:	2001      	movs	r0, #1
    4680:	bd10      	pop	{r4, pc}
    4682:	46c0      	nop			; (mov r8, r8)

00004684 <__aeabi_dcmple>:
    4684:	b510      	push	{r4, lr}
    4686:	f000 ff77 	bl	5578 <__ledf2>
    468a:	2800      	cmp	r0, #0
    468c:	dd01      	ble.n	4692 <__aeabi_dcmple+0xe>
    468e:	2000      	movs	r0, #0
    4690:	bd10      	pop	{r4, pc}
    4692:	2001      	movs	r0, #1
    4694:	bd10      	pop	{r4, pc}
    4696:	46c0      	nop			; (mov r8, r8)

00004698 <__aeabi_dcmpgt>:
    4698:	b510      	push	{r4, lr}
    469a:	f000 ff09 	bl	54b0 <__gedf2>
    469e:	2800      	cmp	r0, #0
    46a0:	dc01      	bgt.n	46a6 <__aeabi_dcmpgt+0xe>
    46a2:	2000      	movs	r0, #0
    46a4:	bd10      	pop	{r4, pc}
    46a6:	2001      	movs	r0, #1
    46a8:	bd10      	pop	{r4, pc}
    46aa:	46c0      	nop			; (mov r8, r8)

000046ac <__aeabi_dcmpge>:
    46ac:	b510      	push	{r4, lr}
    46ae:	f000 feff 	bl	54b0 <__gedf2>
    46b2:	2800      	cmp	r0, #0
    46b4:	da01      	bge.n	46ba <__aeabi_dcmpge+0xe>
    46b6:	2000      	movs	r0, #0
    46b8:	bd10      	pop	{r4, pc}
    46ba:	2001      	movs	r0, #1
    46bc:	bd10      	pop	{r4, pc}
    46be:	46c0      	nop			; (mov r8, r8)

000046c0 <__aeabi_lmul>:
    46c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    46c2:	46ce      	mov	lr, r9
    46c4:	4647      	mov	r7, r8
    46c6:	0415      	lsls	r5, r2, #16
    46c8:	0c2d      	lsrs	r5, r5, #16
    46ca:	002e      	movs	r6, r5
    46cc:	b580      	push	{r7, lr}
    46ce:	0407      	lsls	r7, r0, #16
    46d0:	0c14      	lsrs	r4, r2, #16
    46d2:	0c3f      	lsrs	r7, r7, #16
    46d4:	4699      	mov	r9, r3
    46d6:	0c03      	lsrs	r3, r0, #16
    46d8:	437e      	muls	r6, r7
    46da:	435d      	muls	r5, r3
    46dc:	4367      	muls	r7, r4
    46de:	4363      	muls	r3, r4
    46e0:	197f      	adds	r7, r7, r5
    46e2:	0c34      	lsrs	r4, r6, #16
    46e4:	19e4      	adds	r4, r4, r7
    46e6:	469c      	mov	ip, r3
    46e8:	42a5      	cmp	r5, r4
    46ea:	d903      	bls.n	46f4 <__aeabi_lmul+0x34>
    46ec:	2380      	movs	r3, #128	; 0x80
    46ee:	025b      	lsls	r3, r3, #9
    46f0:	4698      	mov	r8, r3
    46f2:	44c4      	add	ip, r8
    46f4:	464b      	mov	r3, r9
    46f6:	4351      	muls	r1, r2
    46f8:	4343      	muls	r3, r0
    46fa:	0436      	lsls	r6, r6, #16
    46fc:	0c36      	lsrs	r6, r6, #16
    46fe:	0c25      	lsrs	r5, r4, #16
    4700:	0424      	lsls	r4, r4, #16
    4702:	4465      	add	r5, ip
    4704:	19a4      	adds	r4, r4, r6
    4706:	1859      	adds	r1, r3, r1
    4708:	1949      	adds	r1, r1, r5
    470a:	0020      	movs	r0, r4
    470c:	bc0c      	pop	{r2, r3}
    470e:	4690      	mov	r8, r2
    4710:	4699      	mov	r9, r3
    4712:	bdf0      	pop	{r4, r5, r6, r7, pc}

00004714 <__aeabi_i2f>:
    4714:	b570      	push	{r4, r5, r6, lr}
    4716:	2800      	cmp	r0, #0
    4718:	d030      	beq.n	477c <__aeabi_i2f+0x68>
    471a:	17c3      	asrs	r3, r0, #31
    471c:	18c4      	adds	r4, r0, r3
    471e:	405c      	eors	r4, r3
    4720:	0fc5      	lsrs	r5, r0, #31
    4722:	0020      	movs	r0, r4
    4724:	f001 feca 	bl	64bc <__clzsi2>
    4728:	239e      	movs	r3, #158	; 0x9e
    472a:	1a1b      	subs	r3, r3, r0
    472c:	2b96      	cmp	r3, #150	; 0x96
    472e:	dc0d      	bgt.n	474c <__aeabi_i2f+0x38>
    4730:	2296      	movs	r2, #150	; 0x96
    4732:	1ad2      	subs	r2, r2, r3
    4734:	4094      	lsls	r4, r2
    4736:	002a      	movs	r2, r5
    4738:	0264      	lsls	r4, r4, #9
    473a:	0a64      	lsrs	r4, r4, #9
    473c:	b2db      	uxtb	r3, r3
    473e:	0264      	lsls	r4, r4, #9
    4740:	05db      	lsls	r3, r3, #23
    4742:	0a60      	lsrs	r0, r4, #9
    4744:	07d2      	lsls	r2, r2, #31
    4746:	4318      	orrs	r0, r3
    4748:	4310      	orrs	r0, r2
    474a:	bd70      	pop	{r4, r5, r6, pc}
    474c:	2b99      	cmp	r3, #153	; 0x99
    474e:	dc19      	bgt.n	4784 <__aeabi_i2f+0x70>
    4750:	2299      	movs	r2, #153	; 0x99
    4752:	1ad2      	subs	r2, r2, r3
    4754:	2a00      	cmp	r2, #0
    4756:	dd29      	ble.n	47ac <__aeabi_i2f+0x98>
    4758:	4094      	lsls	r4, r2
    475a:	0022      	movs	r2, r4
    475c:	4c14      	ldr	r4, [pc, #80]	; (47b0 <__aeabi_i2f+0x9c>)
    475e:	4014      	ands	r4, r2
    4760:	0751      	lsls	r1, r2, #29
    4762:	d004      	beq.n	476e <__aeabi_i2f+0x5a>
    4764:	210f      	movs	r1, #15
    4766:	400a      	ands	r2, r1
    4768:	2a04      	cmp	r2, #4
    476a:	d000      	beq.n	476e <__aeabi_i2f+0x5a>
    476c:	3404      	adds	r4, #4
    476e:	0162      	lsls	r2, r4, #5
    4770:	d413      	bmi.n	479a <__aeabi_i2f+0x86>
    4772:	01a4      	lsls	r4, r4, #6
    4774:	0a64      	lsrs	r4, r4, #9
    4776:	b2db      	uxtb	r3, r3
    4778:	002a      	movs	r2, r5
    477a:	e7e0      	b.n	473e <__aeabi_i2f+0x2a>
    477c:	2200      	movs	r2, #0
    477e:	2300      	movs	r3, #0
    4780:	2400      	movs	r4, #0
    4782:	e7dc      	b.n	473e <__aeabi_i2f+0x2a>
    4784:	2205      	movs	r2, #5
    4786:	0021      	movs	r1, r4
    4788:	1a12      	subs	r2, r2, r0
    478a:	40d1      	lsrs	r1, r2
    478c:	22b9      	movs	r2, #185	; 0xb9
    478e:	1ad2      	subs	r2, r2, r3
    4790:	4094      	lsls	r4, r2
    4792:	1e62      	subs	r2, r4, #1
    4794:	4194      	sbcs	r4, r2
    4796:	430c      	orrs	r4, r1
    4798:	e7da      	b.n	4750 <__aeabi_i2f+0x3c>
    479a:	4b05      	ldr	r3, [pc, #20]	; (47b0 <__aeabi_i2f+0x9c>)
    479c:	002a      	movs	r2, r5
    479e:	401c      	ands	r4, r3
    47a0:	239f      	movs	r3, #159	; 0x9f
    47a2:	01a4      	lsls	r4, r4, #6
    47a4:	1a1b      	subs	r3, r3, r0
    47a6:	0a64      	lsrs	r4, r4, #9
    47a8:	b2db      	uxtb	r3, r3
    47aa:	e7c8      	b.n	473e <__aeabi_i2f+0x2a>
    47ac:	0022      	movs	r2, r4
    47ae:	e7d5      	b.n	475c <__aeabi_i2f+0x48>
    47b0:	fbffffff 	.word	0xfbffffff

000047b4 <__aeabi_dadd>:
    47b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    47b6:	4645      	mov	r5, r8
    47b8:	46de      	mov	lr, fp
    47ba:	4657      	mov	r7, sl
    47bc:	464e      	mov	r6, r9
    47be:	030c      	lsls	r4, r1, #12
    47c0:	b5e0      	push	{r5, r6, r7, lr}
    47c2:	004e      	lsls	r6, r1, #1
    47c4:	0fc9      	lsrs	r1, r1, #31
    47c6:	4688      	mov	r8, r1
    47c8:	000d      	movs	r5, r1
    47ca:	0a61      	lsrs	r1, r4, #9
    47cc:	0f44      	lsrs	r4, r0, #29
    47ce:	430c      	orrs	r4, r1
    47d0:	00c7      	lsls	r7, r0, #3
    47d2:	0319      	lsls	r1, r3, #12
    47d4:	0058      	lsls	r0, r3, #1
    47d6:	0fdb      	lsrs	r3, r3, #31
    47d8:	469b      	mov	fp, r3
    47da:	0a4b      	lsrs	r3, r1, #9
    47dc:	0f51      	lsrs	r1, r2, #29
    47de:	430b      	orrs	r3, r1
    47e0:	0d76      	lsrs	r6, r6, #21
    47e2:	0d40      	lsrs	r0, r0, #21
    47e4:	0019      	movs	r1, r3
    47e6:	00d2      	lsls	r2, r2, #3
    47e8:	45d8      	cmp	r8, fp
    47ea:	d100      	bne.n	47ee <__aeabi_dadd+0x3a>
    47ec:	e0ae      	b.n	494c <__aeabi_dadd+0x198>
    47ee:	1a35      	subs	r5, r6, r0
    47f0:	2d00      	cmp	r5, #0
    47f2:	dc00      	bgt.n	47f6 <__aeabi_dadd+0x42>
    47f4:	e0f6      	b.n	49e4 <__aeabi_dadd+0x230>
    47f6:	2800      	cmp	r0, #0
    47f8:	d10f      	bne.n	481a <__aeabi_dadd+0x66>
    47fa:	4313      	orrs	r3, r2
    47fc:	d100      	bne.n	4800 <__aeabi_dadd+0x4c>
    47fe:	e0db      	b.n	49b8 <__aeabi_dadd+0x204>
    4800:	1e6b      	subs	r3, r5, #1
    4802:	2b00      	cmp	r3, #0
    4804:	d000      	beq.n	4808 <__aeabi_dadd+0x54>
    4806:	e137      	b.n	4a78 <__aeabi_dadd+0x2c4>
    4808:	1aba      	subs	r2, r7, r2
    480a:	4297      	cmp	r7, r2
    480c:	41bf      	sbcs	r7, r7
    480e:	1a64      	subs	r4, r4, r1
    4810:	427f      	negs	r7, r7
    4812:	1be4      	subs	r4, r4, r7
    4814:	2601      	movs	r6, #1
    4816:	0017      	movs	r7, r2
    4818:	e024      	b.n	4864 <__aeabi_dadd+0xb0>
    481a:	4bc6      	ldr	r3, [pc, #792]	; (4b34 <__aeabi_dadd+0x380>)
    481c:	429e      	cmp	r6, r3
    481e:	d04d      	beq.n	48bc <__aeabi_dadd+0x108>
    4820:	2380      	movs	r3, #128	; 0x80
    4822:	041b      	lsls	r3, r3, #16
    4824:	4319      	orrs	r1, r3
    4826:	2d38      	cmp	r5, #56	; 0x38
    4828:	dd00      	ble.n	482c <__aeabi_dadd+0x78>
    482a:	e107      	b.n	4a3c <__aeabi_dadd+0x288>
    482c:	2d1f      	cmp	r5, #31
    482e:	dd00      	ble.n	4832 <__aeabi_dadd+0x7e>
    4830:	e138      	b.n	4aa4 <__aeabi_dadd+0x2f0>
    4832:	2020      	movs	r0, #32
    4834:	1b43      	subs	r3, r0, r5
    4836:	469a      	mov	sl, r3
    4838:	000b      	movs	r3, r1
    483a:	4650      	mov	r0, sl
    483c:	4083      	lsls	r3, r0
    483e:	4699      	mov	r9, r3
    4840:	0013      	movs	r3, r2
    4842:	4648      	mov	r0, r9
    4844:	40eb      	lsrs	r3, r5
    4846:	4318      	orrs	r0, r3
    4848:	0003      	movs	r3, r0
    484a:	4650      	mov	r0, sl
    484c:	4082      	lsls	r2, r0
    484e:	1e50      	subs	r0, r2, #1
    4850:	4182      	sbcs	r2, r0
    4852:	40e9      	lsrs	r1, r5
    4854:	431a      	orrs	r2, r3
    4856:	1aba      	subs	r2, r7, r2
    4858:	1a61      	subs	r1, r4, r1
    485a:	4297      	cmp	r7, r2
    485c:	41a4      	sbcs	r4, r4
    485e:	0017      	movs	r7, r2
    4860:	4264      	negs	r4, r4
    4862:	1b0c      	subs	r4, r1, r4
    4864:	0223      	lsls	r3, r4, #8
    4866:	d562      	bpl.n	492e <__aeabi_dadd+0x17a>
    4868:	0264      	lsls	r4, r4, #9
    486a:	0a65      	lsrs	r5, r4, #9
    486c:	2d00      	cmp	r5, #0
    486e:	d100      	bne.n	4872 <__aeabi_dadd+0xbe>
    4870:	e0df      	b.n	4a32 <__aeabi_dadd+0x27e>
    4872:	0028      	movs	r0, r5
    4874:	f001 fe22 	bl	64bc <__clzsi2>
    4878:	0003      	movs	r3, r0
    487a:	3b08      	subs	r3, #8
    487c:	2b1f      	cmp	r3, #31
    487e:	dd00      	ble.n	4882 <__aeabi_dadd+0xce>
    4880:	e0d2      	b.n	4a28 <__aeabi_dadd+0x274>
    4882:	2220      	movs	r2, #32
    4884:	003c      	movs	r4, r7
    4886:	1ad2      	subs	r2, r2, r3
    4888:	409d      	lsls	r5, r3
    488a:	40d4      	lsrs	r4, r2
    488c:	409f      	lsls	r7, r3
    488e:	4325      	orrs	r5, r4
    4890:	429e      	cmp	r6, r3
    4892:	dd00      	ble.n	4896 <__aeabi_dadd+0xe2>
    4894:	e0c4      	b.n	4a20 <__aeabi_dadd+0x26c>
    4896:	1b9e      	subs	r6, r3, r6
    4898:	1c73      	adds	r3, r6, #1
    489a:	2b1f      	cmp	r3, #31
    489c:	dd00      	ble.n	48a0 <__aeabi_dadd+0xec>
    489e:	e0f1      	b.n	4a84 <__aeabi_dadd+0x2d0>
    48a0:	2220      	movs	r2, #32
    48a2:	0038      	movs	r0, r7
    48a4:	0029      	movs	r1, r5
    48a6:	1ad2      	subs	r2, r2, r3
    48a8:	40d8      	lsrs	r0, r3
    48aa:	4091      	lsls	r1, r2
    48ac:	4097      	lsls	r7, r2
    48ae:	002c      	movs	r4, r5
    48b0:	4301      	orrs	r1, r0
    48b2:	1e78      	subs	r0, r7, #1
    48b4:	4187      	sbcs	r7, r0
    48b6:	40dc      	lsrs	r4, r3
    48b8:	2600      	movs	r6, #0
    48ba:	430f      	orrs	r7, r1
    48bc:	077b      	lsls	r3, r7, #29
    48be:	d009      	beq.n	48d4 <__aeabi_dadd+0x120>
    48c0:	230f      	movs	r3, #15
    48c2:	403b      	ands	r3, r7
    48c4:	2b04      	cmp	r3, #4
    48c6:	d005      	beq.n	48d4 <__aeabi_dadd+0x120>
    48c8:	1d3b      	adds	r3, r7, #4
    48ca:	42bb      	cmp	r3, r7
    48cc:	41bf      	sbcs	r7, r7
    48ce:	427f      	negs	r7, r7
    48d0:	19e4      	adds	r4, r4, r7
    48d2:	001f      	movs	r7, r3
    48d4:	0223      	lsls	r3, r4, #8
    48d6:	d52c      	bpl.n	4932 <__aeabi_dadd+0x17e>
    48d8:	4b96      	ldr	r3, [pc, #600]	; (4b34 <__aeabi_dadd+0x380>)
    48da:	3601      	adds	r6, #1
    48dc:	429e      	cmp	r6, r3
    48de:	d100      	bne.n	48e2 <__aeabi_dadd+0x12e>
    48e0:	e09a      	b.n	4a18 <__aeabi_dadd+0x264>
    48e2:	4645      	mov	r5, r8
    48e4:	4b94      	ldr	r3, [pc, #592]	; (4b38 <__aeabi_dadd+0x384>)
    48e6:	08ff      	lsrs	r7, r7, #3
    48e8:	401c      	ands	r4, r3
    48ea:	0760      	lsls	r0, r4, #29
    48ec:	0576      	lsls	r6, r6, #21
    48ee:	0264      	lsls	r4, r4, #9
    48f0:	4307      	orrs	r7, r0
    48f2:	0b24      	lsrs	r4, r4, #12
    48f4:	0d76      	lsrs	r6, r6, #21
    48f6:	2100      	movs	r1, #0
    48f8:	0324      	lsls	r4, r4, #12
    48fa:	0b23      	lsrs	r3, r4, #12
    48fc:	0d0c      	lsrs	r4, r1, #20
    48fe:	4a8f      	ldr	r2, [pc, #572]	; (4b3c <__aeabi_dadd+0x388>)
    4900:	0524      	lsls	r4, r4, #20
    4902:	431c      	orrs	r4, r3
    4904:	4014      	ands	r4, r2
    4906:	0533      	lsls	r3, r6, #20
    4908:	4323      	orrs	r3, r4
    490a:	005b      	lsls	r3, r3, #1
    490c:	07ed      	lsls	r5, r5, #31
    490e:	085b      	lsrs	r3, r3, #1
    4910:	432b      	orrs	r3, r5
    4912:	0038      	movs	r0, r7
    4914:	0019      	movs	r1, r3
    4916:	bc3c      	pop	{r2, r3, r4, r5}
    4918:	4690      	mov	r8, r2
    491a:	4699      	mov	r9, r3
    491c:	46a2      	mov	sl, r4
    491e:	46ab      	mov	fp, r5
    4920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4922:	4664      	mov	r4, ip
    4924:	4304      	orrs	r4, r0
    4926:	d100      	bne.n	492a <__aeabi_dadd+0x176>
    4928:	e211      	b.n	4d4e <__aeabi_dadd+0x59a>
    492a:	0004      	movs	r4, r0
    492c:	4667      	mov	r7, ip
    492e:	077b      	lsls	r3, r7, #29
    4930:	d1c6      	bne.n	48c0 <__aeabi_dadd+0x10c>
    4932:	4645      	mov	r5, r8
    4934:	0760      	lsls	r0, r4, #29
    4936:	08ff      	lsrs	r7, r7, #3
    4938:	4307      	orrs	r7, r0
    493a:	08e4      	lsrs	r4, r4, #3
    493c:	4b7d      	ldr	r3, [pc, #500]	; (4b34 <__aeabi_dadd+0x380>)
    493e:	429e      	cmp	r6, r3
    4940:	d030      	beq.n	49a4 <__aeabi_dadd+0x1f0>
    4942:	0324      	lsls	r4, r4, #12
    4944:	0576      	lsls	r6, r6, #21
    4946:	0b24      	lsrs	r4, r4, #12
    4948:	0d76      	lsrs	r6, r6, #21
    494a:	e7d4      	b.n	48f6 <__aeabi_dadd+0x142>
    494c:	1a33      	subs	r3, r6, r0
    494e:	469a      	mov	sl, r3
    4950:	2b00      	cmp	r3, #0
    4952:	dd78      	ble.n	4a46 <__aeabi_dadd+0x292>
    4954:	2800      	cmp	r0, #0
    4956:	d031      	beq.n	49bc <__aeabi_dadd+0x208>
    4958:	4876      	ldr	r0, [pc, #472]	; (4b34 <__aeabi_dadd+0x380>)
    495a:	4286      	cmp	r6, r0
    495c:	d0ae      	beq.n	48bc <__aeabi_dadd+0x108>
    495e:	2080      	movs	r0, #128	; 0x80
    4960:	0400      	lsls	r0, r0, #16
    4962:	4301      	orrs	r1, r0
    4964:	4653      	mov	r3, sl
    4966:	2b38      	cmp	r3, #56	; 0x38
    4968:	dc00      	bgt.n	496c <__aeabi_dadd+0x1b8>
    496a:	e0e9      	b.n	4b40 <__aeabi_dadd+0x38c>
    496c:	430a      	orrs	r2, r1
    496e:	1e51      	subs	r1, r2, #1
    4970:	418a      	sbcs	r2, r1
    4972:	2100      	movs	r1, #0
    4974:	19d2      	adds	r2, r2, r7
    4976:	42ba      	cmp	r2, r7
    4978:	41bf      	sbcs	r7, r7
    497a:	1909      	adds	r1, r1, r4
    497c:	427c      	negs	r4, r7
    497e:	0017      	movs	r7, r2
    4980:	190c      	adds	r4, r1, r4
    4982:	0223      	lsls	r3, r4, #8
    4984:	d5d3      	bpl.n	492e <__aeabi_dadd+0x17a>
    4986:	4b6b      	ldr	r3, [pc, #428]	; (4b34 <__aeabi_dadd+0x380>)
    4988:	3601      	adds	r6, #1
    498a:	429e      	cmp	r6, r3
    498c:	d100      	bne.n	4990 <__aeabi_dadd+0x1dc>
    498e:	e13a      	b.n	4c06 <__aeabi_dadd+0x452>
    4990:	2001      	movs	r0, #1
    4992:	4b69      	ldr	r3, [pc, #420]	; (4b38 <__aeabi_dadd+0x384>)
    4994:	401c      	ands	r4, r3
    4996:	087b      	lsrs	r3, r7, #1
    4998:	4007      	ands	r7, r0
    499a:	431f      	orrs	r7, r3
    499c:	07e0      	lsls	r0, r4, #31
    499e:	4307      	orrs	r7, r0
    49a0:	0864      	lsrs	r4, r4, #1
    49a2:	e78b      	b.n	48bc <__aeabi_dadd+0x108>
    49a4:	0023      	movs	r3, r4
    49a6:	433b      	orrs	r3, r7
    49a8:	d100      	bne.n	49ac <__aeabi_dadd+0x1f8>
    49aa:	e1cb      	b.n	4d44 <__aeabi_dadd+0x590>
    49ac:	2280      	movs	r2, #128	; 0x80
    49ae:	0312      	lsls	r2, r2, #12
    49b0:	4314      	orrs	r4, r2
    49b2:	0324      	lsls	r4, r4, #12
    49b4:	0b24      	lsrs	r4, r4, #12
    49b6:	e79e      	b.n	48f6 <__aeabi_dadd+0x142>
    49b8:	002e      	movs	r6, r5
    49ba:	e77f      	b.n	48bc <__aeabi_dadd+0x108>
    49bc:	0008      	movs	r0, r1
    49be:	4310      	orrs	r0, r2
    49c0:	d100      	bne.n	49c4 <__aeabi_dadd+0x210>
    49c2:	e0b4      	b.n	4b2e <__aeabi_dadd+0x37a>
    49c4:	1e58      	subs	r0, r3, #1
    49c6:	2800      	cmp	r0, #0
    49c8:	d000      	beq.n	49cc <__aeabi_dadd+0x218>
    49ca:	e0de      	b.n	4b8a <__aeabi_dadd+0x3d6>
    49cc:	18ba      	adds	r2, r7, r2
    49ce:	42ba      	cmp	r2, r7
    49d0:	419b      	sbcs	r3, r3
    49d2:	1864      	adds	r4, r4, r1
    49d4:	425b      	negs	r3, r3
    49d6:	18e4      	adds	r4, r4, r3
    49d8:	0017      	movs	r7, r2
    49da:	2601      	movs	r6, #1
    49dc:	0223      	lsls	r3, r4, #8
    49de:	d5a6      	bpl.n	492e <__aeabi_dadd+0x17a>
    49e0:	2602      	movs	r6, #2
    49e2:	e7d5      	b.n	4990 <__aeabi_dadd+0x1dc>
    49e4:	2d00      	cmp	r5, #0
    49e6:	d16e      	bne.n	4ac6 <__aeabi_dadd+0x312>
    49e8:	1c70      	adds	r0, r6, #1
    49ea:	0540      	lsls	r0, r0, #21
    49ec:	0d40      	lsrs	r0, r0, #21
    49ee:	2801      	cmp	r0, #1
    49f0:	dc00      	bgt.n	49f4 <__aeabi_dadd+0x240>
    49f2:	e0f9      	b.n	4be8 <__aeabi_dadd+0x434>
    49f4:	1ab8      	subs	r0, r7, r2
    49f6:	4684      	mov	ip, r0
    49f8:	4287      	cmp	r7, r0
    49fa:	4180      	sbcs	r0, r0
    49fc:	1ae5      	subs	r5, r4, r3
    49fe:	4240      	negs	r0, r0
    4a00:	1a2d      	subs	r5, r5, r0
    4a02:	0228      	lsls	r0, r5, #8
    4a04:	d400      	bmi.n	4a08 <__aeabi_dadd+0x254>
    4a06:	e089      	b.n	4b1c <__aeabi_dadd+0x368>
    4a08:	1bd7      	subs	r7, r2, r7
    4a0a:	42ba      	cmp	r2, r7
    4a0c:	4192      	sbcs	r2, r2
    4a0e:	1b1c      	subs	r4, r3, r4
    4a10:	4252      	negs	r2, r2
    4a12:	1aa5      	subs	r5, r4, r2
    4a14:	46d8      	mov	r8, fp
    4a16:	e729      	b.n	486c <__aeabi_dadd+0xb8>
    4a18:	4645      	mov	r5, r8
    4a1a:	2400      	movs	r4, #0
    4a1c:	2700      	movs	r7, #0
    4a1e:	e76a      	b.n	48f6 <__aeabi_dadd+0x142>
    4a20:	4c45      	ldr	r4, [pc, #276]	; (4b38 <__aeabi_dadd+0x384>)
    4a22:	1af6      	subs	r6, r6, r3
    4a24:	402c      	ands	r4, r5
    4a26:	e749      	b.n	48bc <__aeabi_dadd+0x108>
    4a28:	003d      	movs	r5, r7
    4a2a:	3828      	subs	r0, #40	; 0x28
    4a2c:	4085      	lsls	r5, r0
    4a2e:	2700      	movs	r7, #0
    4a30:	e72e      	b.n	4890 <__aeabi_dadd+0xdc>
    4a32:	0038      	movs	r0, r7
    4a34:	f001 fd42 	bl	64bc <__clzsi2>
    4a38:	3020      	adds	r0, #32
    4a3a:	e71d      	b.n	4878 <__aeabi_dadd+0xc4>
    4a3c:	430a      	orrs	r2, r1
    4a3e:	1e51      	subs	r1, r2, #1
    4a40:	418a      	sbcs	r2, r1
    4a42:	2100      	movs	r1, #0
    4a44:	e707      	b.n	4856 <__aeabi_dadd+0xa2>
    4a46:	2b00      	cmp	r3, #0
    4a48:	d000      	beq.n	4a4c <__aeabi_dadd+0x298>
    4a4a:	e0f3      	b.n	4c34 <__aeabi_dadd+0x480>
    4a4c:	1c70      	adds	r0, r6, #1
    4a4e:	0543      	lsls	r3, r0, #21
    4a50:	0d5b      	lsrs	r3, r3, #21
    4a52:	2b01      	cmp	r3, #1
    4a54:	dc00      	bgt.n	4a58 <__aeabi_dadd+0x2a4>
    4a56:	e0ad      	b.n	4bb4 <__aeabi_dadd+0x400>
    4a58:	4b36      	ldr	r3, [pc, #216]	; (4b34 <__aeabi_dadd+0x380>)
    4a5a:	4298      	cmp	r0, r3
    4a5c:	d100      	bne.n	4a60 <__aeabi_dadd+0x2ac>
    4a5e:	e0d1      	b.n	4c04 <__aeabi_dadd+0x450>
    4a60:	18ba      	adds	r2, r7, r2
    4a62:	42ba      	cmp	r2, r7
    4a64:	41bf      	sbcs	r7, r7
    4a66:	1864      	adds	r4, r4, r1
    4a68:	427f      	negs	r7, r7
    4a6a:	19e4      	adds	r4, r4, r7
    4a6c:	07e7      	lsls	r7, r4, #31
    4a6e:	0852      	lsrs	r2, r2, #1
    4a70:	4317      	orrs	r7, r2
    4a72:	0864      	lsrs	r4, r4, #1
    4a74:	0006      	movs	r6, r0
    4a76:	e721      	b.n	48bc <__aeabi_dadd+0x108>
    4a78:	482e      	ldr	r0, [pc, #184]	; (4b34 <__aeabi_dadd+0x380>)
    4a7a:	4285      	cmp	r5, r0
    4a7c:	d100      	bne.n	4a80 <__aeabi_dadd+0x2cc>
    4a7e:	e093      	b.n	4ba8 <__aeabi_dadd+0x3f4>
    4a80:	001d      	movs	r5, r3
    4a82:	e6d0      	b.n	4826 <__aeabi_dadd+0x72>
    4a84:	0029      	movs	r1, r5
    4a86:	3e1f      	subs	r6, #31
    4a88:	40f1      	lsrs	r1, r6
    4a8a:	2b20      	cmp	r3, #32
    4a8c:	d100      	bne.n	4a90 <__aeabi_dadd+0x2dc>
    4a8e:	e08d      	b.n	4bac <__aeabi_dadd+0x3f8>
    4a90:	2240      	movs	r2, #64	; 0x40
    4a92:	1ad3      	subs	r3, r2, r3
    4a94:	409d      	lsls	r5, r3
    4a96:	432f      	orrs	r7, r5
    4a98:	1e7d      	subs	r5, r7, #1
    4a9a:	41af      	sbcs	r7, r5
    4a9c:	2400      	movs	r4, #0
    4a9e:	430f      	orrs	r7, r1
    4aa0:	2600      	movs	r6, #0
    4aa2:	e744      	b.n	492e <__aeabi_dadd+0x17a>
    4aa4:	002b      	movs	r3, r5
    4aa6:	0008      	movs	r0, r1
    4aa8:	3b20      	subs	r3, #32
    4aaa:	40d8      	lsrs	r0, r3
    4aac:	0003      	movs	r3, r0
    4aae:	2d20      	cmp	r5, #32
    4ab0:	d100      	bne.n	4ab4 <__aeabi_dadd+0x300>
    4ab2:	e07d      	b.n	4bb0 <__aeabi_dadd+0x3fc>
    4ab4:	2040      	movs	r0, #64	; 0x40
    4ab6:	1b45      	subs	r5, r0, r5
    4ab8:	40a9      	lsls	r1, r5
    4aba:	430a      	orrs	r2, r1
    4abc:	1e51      	subs	r1, r2, #1
    4abe:	418a      	sbcs	r2, r1
    4ac0:	2100      	movs	r1, #0
    4ac2:	431a      	orrs	r2, r3
    4ac4:	e6c7      	b.n	4856 <__aeabi_dadd+0xa2>
    4ac6:	2e00      	cmp	r6, #0
    4ac8:	d050      	beq.n	4b6c <__aeabi_dadd+0x3b8>
    4aca:	4e1a      	ldr	r6, [pc, #104]	; (4b34 <__aeabi_dadd+0x380>)
    4acc:	42b0      	cmp	r0, r6
    4ace:	d057      	beq.n	4b80 <__aeabi_dadd+0x3cc>
    4ad0:	2680      	movs	r6, #128	; 0x80
    4ad2:	426b      	negs	r3, r5
    4ad4:	4699      	mov	r9, r3
    4ad6:	0436      	lsls	r6, r6, #16
    4ad8:	4334      	orrs	r4, r6
    4ada:	464b      	mov	r3, r9
    4adc:	2b38      	cmp	r3, #56	; 0x38
    4ade:	dd00      	ble.n	4ae2 <__aeabi_dadd+0x32e>
    4ae0:	e0d6      	b.n	4c90 <__aeabi_dadd+0x4dc>
    4ae2:	2b1f      	cmp	r3, #31
    4ae4:	dd00      	ble.n	4ae8 <__aeabi_dadd+0x334>
    4ae6:	e135      	b.n	4d54 <__aeabi_dadd+0x5a0>
    4ae8:	2620      	movs	r6, #32
    4aea:	1af5      	subs	r5, r6, r3
    4aec:	0026      	movs	r6, r4
    4aee:	40ae      	lsls	r6, r5
    4af0:	46b2      	mov	sl, r6
    4af2:	003e      	movs	r6, r7
    4af4:	40de      	lsrs	r6, r3
    4af6:	46ac      	mov	ip, r5
    4af8:	0035      	movs	r5, r6
    4afa:	4656      	mov	r6, sl
    4afc:	432e      	orrs	r6, r5
    4afe:	4665      	mov	r5, ip
    4b00:	40af      	lsls	r7, r5
    4b02:	1e7d      	subs	r5, r7, #1
    4b04:	41af      	sbcs	r7, r5
    4b06:	40dc      	lsrs	r4, r3
    4b08:	4337      	orrs	r7, r6
    4b0a:	1bd7      	subs	r7, r2, r7
    4b0c:	42ba      	cmp	r2, r7
    4b0e:	4192      	sbcs	r2, r2
    4b10:	1b0c      	subs	r4, r1, r4
    4b12:	4252      	negs	r2, r2
    4b14:	1aa4      	subs	r4, r4, r2
    4b16:	0006      	movs	r6, r0
    4b18:	46d8      	mov	r8, fp
    4b1a:	e6a3      	b.n	4864 <__aeabi_dadd+0xb0>
    4b1c:	4664      	mov	r4, ip
    4b1e:	4667      	mov	r7, ip
    4b20:	432c      	orrs	r4, r5
    4b22:	d000      	beq.n	4b26 <__aeabi_dadd+0x372>
    4b24:	e6a2      	b.n	486c <__aeabi_dadd+0xb8>
    4b26:	2500      	movs	r5, #0
    4b28:	2600      	movs	r6, #0
    4b2a:	2700      	movs	r7, #0
    4b2c:	e706      	b.n	493c <__aeabi_dadd+0x188>
    4b2e:	001e      	movs	r6, r3
    4b30:	e6c4      	b.n	48bc <__aeabi_dadd+0x108>
    4b32:	46c0      	nop			; (mov r8, r8)
    4b34:	000007ff 	.word	0x000007ff
    4b38:	ff7fffff 	.word	0xff7fffff
    4b3c:	800fffff 	.word	0x800fffff
    4b40:	2b1f      	cmp	r3, #31
    4b42:	dc63      	bgt.n	4c0c <__aeabi_dadd+0x458>
    4b44:	2020      	movs	r0, #32
    4b46:	1ac3      	subs	r3, r0, r3
    4b48:	0008      	movs	r0, r1
    4b4a:	4098      	lsls	r0, r3
    4b4c:	469c      	mov	ip, r3
    4b4e:	4683      	mov	fp, r0
    4b50:	4653      	mov	r3, sl
    4b52:	0010      	movs	r0, r2
    4b54:	40d8      	lsrs	r0, r3
    4b56:	0003      	movs	r3, r0
    4b58:	4658      	mov	r0, fp
    4b5a:	4318      	orrs	r0, r3
    4b5c:	4663      	mov	r3, ip
    4b5e:	409a      	lsls	r2, r3
    4b60:	1e53      	subs	r3, r2, #1
    4b62:	419a      	sbcs	r2, r3
    4b64:	4653      	mov	r3, sl
    4b66:	4302      	orrs	r2, r0
    4b68:	40d9      	lsrs	r1, r3
    4b6a:	e703      	b.n	4974 <__aeabi_dadd+0x1c0>
    4b6c:	0026      	movs	r6, r4
    4b6e:	433e      	orrs	r6, r7
    4b70:	d006      	beq.n	4b80 <__aeabi_dadd+0x3cc>
    4b72:	43eb      	mvns	r3, r5
    4b74:	4699      	mov	r9, r3
    4b76:	2b00      	cmp	r3, #0
    4b78:	d0c7      	beq.n	4b0a <__aeabi_dadd+0x356>
    4b7a:	4e94      	ldr	r6, [pc, #592]	; (4dcc <__aeabi_dadd+0x618>)
    4b7c:	42b0      	cmp	r0, r6
    4b7e:	d1ac      	bne.n	4ada <__aeabi_dadd+0x326>
    4b80:	000c      	movs	r4, r1
    4b82:	0017      	movs	r7, r2
    4b84:	0006      	movs	r6, r0
    4b86:	46d8      	mov	r8, fp
    4b88:	e698      	b.n	48bc <__aeabi_dadd+0x108>
    4b8a:	4b90      	ldr	r3, [pc, #576]	; (4dcc <__aeabi_dadd+0x618>)
    4b8c:	459a      	cmp	sl, r3
    4b8e:	d00b      	beq.n	4ba8 <__aeabi_dadd+0x3f4>
    4b90:	4682      	mov	sl, r0
    4b92:	e6e7      	b.n	4964 <__aeabi_dadd+0x1b0>
    4b94:	2800      	cmp	r0, #0
    4b96:	d000      	beq.n	4b9a <__aeabi_dadd+0x3e6>
    4b98:	e09e      	b.n	4cd8 <__aeabi_dadd+0x524>
    4b9a:	0018      	movs	r0, r3
    4b9c:	4310      	orrs	r0, r2
    4b9e:	d100      	bne.n	4ba2 <__aeabi_dadd+0x3ee>
    4ba0:	e0e9      	b.n	4d76 <__aeabi_dadd+0x5c2>
    4ba2:	001c      	movs	r4, r3
    4ba4:	0017      	movs	r7, r2
    4ba6:	46d8      	mov	r8, fp
    4ba8:	4e88      	ldr	r6, [pc, #544]	; (4dcc <__aeabi_dadd+0x618>)
    4baa:	e687      	b.n	48bc <__aeabi_dadd+0x108>
    4bac:	2500      	movs	r5, #0
    4bae:	e772      	b.n	4a96 <__aeabi_dadd+0x2e2>
    4bb0:	2100      	movs	r1, #0
    4bb2:	e782      	b.n	4aba <__aeabi_dadd+0x306>
    4bb4:	0023      	movs	r3, r4
    4bb6:	433b      	orrs	r3, r7
    4bb8:	2e00      	cmp	r6, #0
    4bba:	d000      	beq.n	4bbe <__aeabi_dadd+0x40a>
    4bbc:	e0ab      	b.n	4d16 <__aeabi_dadd+0x562>
    4bbe:	2b00      	cmp	r3, #0
    4bc0:	d100      	bne.n	4bc4 <__aeabi_dadd+0x410>
    4bc2:	e0e7      	b.n	4d94 <__aeabi_dadd+0x5e0>
    4bc4:	000b      	movs	r3, r1
    4bc6:	4313      	orrs	r3, r2
    4bc8:	d100      	bne.n	4bcc <__aeabi_dadd+0x418>
    4bca:	e677      	b.n	48bc <__aeabi_dadd+0x108>
    4bcc:	18ba      	adds	r2, r7, r2
    4bce:	42ba      	cmp	r2, r7
    4bd0:	41bf      	sbcs	r7, r7
    4bd2:	1864      	adds	r4, r4, r1
    4bd4:	427f      	negs	r7, r7
    4bd6:	19e4      	adds	r4, r4, r7
    4bd8:	0223      	lsls	r3, r4, #8
    4bda:	d400      	bmi.n	4bde <__aeabi_dadd+0x42a>
    4bdc:	e0f2      	b.n	4dc4 <__aeabi_dadd+0x610>
    4bde:	4b7c      	ldr	r3, [pc, #496]	; (4dd0 <__aeabi_dadd+0x61c>)
    4be0:	0017      	movs	r7, r2
    4be2:	401c      	ands	r4, r3
    4be4:	0006      	movs	r6, r0
    4be6:	e669      	b.n	48bc <__aeabi_dadd+0x108>
    4be8:	0020      	movs	r0, r4
    4bea:	4338      	orrs	r0, r7
    4bec:	2e00      	cmp	r6, #0
    4bee:	d1d1      	bne.n	4b94 <__aeabi_dadd+0x3e0>
    4bf0:	2800      	cmp	r0, #0
    4bf2:	d15b      	bne.n	4cac <__aeabi_dadd+0x4f8>
    4bf4:	001c      	movs	r4, r3
    4bf6:	4314      	orrs	r4, r2
    4bf8:	d100      	bne.n	4bfc <__aeabi_dadd+0x448>
    4bfa:	e0a8      	b.n	4d4e <__aeabi_dadd+0x59a>
    4bfc:	001c      	movs	r4, r3
    4bfe:	0017      	movs	r7, r2
    4c00:	46d8      	mov	r8, fp
    4c02:	e65b      	b.n	48bc <__aeabi_dadd+0x108>
    4c04:	0006      	movs	r6, r0
    4c06:	2400      	movs	r4, #0
    4c08:	2700      	movs	r7, #0
    4c0a:	e697      	b.n	493c <__aeabi_dadd+0x188>
    4c0c:	4650      	mov	r0, sl
    4c0e:	000b      	movs	r3, r1
    4c10:	3820      	subs	r0, #32
    4c12:	40c3      	lsrs	r3, r0
    4c14:	4699      	mov	r9, r3
    4c16:	4653      	mov	r3, sl
    4c18:	2b20      	cmp	r3, #32
    4c1a:	d100      	bne.n	4c1e <__aeabi_dadd+0x46a>
    4c1c:	e095      	b.n	4d4a <__aeabi_dadd+0x596>
    4c1e:	2340      	movs	r3, #64	; 0x40
    4c20:	4650      	mov	r0, sl
    4c22:	1a1b      	subs	r3, r3, r0
    4c24:	4099      	lsls	r1, r3
    4c26:	430a      	orrs	r2, r1
    4c28:	1e51      	subs	r1, r2, #1
    4c2a:	418a      	sbcs	r2, r1
    4c2c:	464b      	mov	r3, r9
    4c2e:	2100      	movs	r1, #0
    4c30:	431a      	orrs	r2, r3
    4c32:	e69f      	b.n	4974 <__aeabi_dadd+0x1c0>
    4c34:	2e00      	cmp	r6, #0
    4c36:	d130      	bne.n	4c9a <__aeabi_dadd+0x4e6>
    4c38:	0026      	movs	r6, r4
    4c3a:	433e      	orrs	r6, r7
    4c3c:	d067      	beq.n	4d0e <__aeabi_dadd+0x55a>
    4c3e:	43db      	mvns	r3, r3
    4c40:	469a      	mov	sl, r3
    4c42:	2b00      	cmp	r3, #0
    4c44:	d01c      	beq.n	4c80 <__aeabi_dadd+0x4cc>
    4c46:	4e61      	ldr	r6, [pc, #388]	; (4dcc <__aeabi_dadd+0x618>)
    4c48:	42b0      	cmp	r0, r6
    4c4a:	d060      	beq.n	4d0e <__aeabi_dadd+0x55a>
    4c4c:	4653      	mov	r3, sl
    4c4e:	2b38      	cmp	r3, #56	; 0x38
    4c50:	dd00      	ble.n	4c54 <__aeabi_dadd+0x4a0>
    4c52:	e096      	b.n	4d82 <__aeabi_dadd+0x5ce>
    4c54:	2b1f      	cmp	r3, #31
    4c56:	dd00      	ble.n	4c5a <__aeabi_dadd+0x4a6>
    4c58:	e09f      	b.n	4d9a <__aeabi_dadd+0x5e6>
    4c5a:	2620      	movs	r6, #32
    4c5c:	1af3      	subs	r3, r6, r3
    4c5e:	0026      	movs	r6, r4
    4c60:	409e      	lsls	r6, r3
    4c62:	469c      	mov	ip, r3
    4c64:	46b3      	mov	fp, r6
    4c66:	4653      	mov	r3, sl
    4c68:	003e      	movs	r6, r7
    4c6a:	40de      	lsrs	r6, r3
    4c6c:	0033      	movs	r3, r6
    4c6e:	465e      	mov	r6, fp
    4c70:	431e      	orrs	r6, r3
    4c72:	4663      	mov	r3, ip
    4c74:	409f      	lsls	r7, r3
    4c76:	1e7b      	subs	r3, r7, #1
    4c78:	419f      	sbcs	r7, r3
    4c7a:	4653      	mov	r3, sl
    4c7c:	40dc      	lsrs	r4, r3
    4c7e:	4337      	orrs	r7, r6
    4c80:	18bf      	adds	r7, r7, r2
    4c82:	4297      	cmp	r7, r2
    4c84:	4192      	sbcs	r2, r2
    4c86:	1864      	adds	r4, r4, r1
    4c88:	4252      	negs	r2, r2
    4c8a:	18a4      	adds	r4, r4, r2
    4c8c:	0006      	movs	r6, r0
    4c8e:	e678      	b.n	4982 <__aeabi_dadd+0x1ce>
    4c90:	4327      	orrs	r7, r4
    4c92:	1e7c      	subs	r4, r7, #1
    4c94:	41a7      	sbcs	r7, r4
    4c96:	2400      	movs	r4, #0
    4c98:	e737      	b.n	4b0a <__aeabi_dadd+0x356>
    4c9a:	4e4c      	ldr	r6, [pc, #304]	; (4dcc <__aeabi_dadd+0x618>)
    4c9c:	42b0      	cmp	r0, r6
    4c9e:	d036      	beq.n	4d0e <__aeabi_dadd+0x55a>
    4ca0:	2680      	movs	r6, #128	; 0x80
    4ca2:	425b      	negs	r3, r3
    4ca4:	0436      	lsls	r6, r6, #16
    4ca6:	469a      	mov	sl, r3
    4ca8:	4334      	orrs	r4, r6
    4caa:	e7cf      	b.n	4c4c <__aeabi_dadd+0x498>
    4cac:	0018      	movs	r0, r3
    4cae:	4310      	orrs	r0, r2
    4cb0:	d100      	bne.n	4cb4 <__aeabi_dadd+0x500>
    4cb2:	e603      	b.n	48bc <__aeabi_dadd+0x108>
    4cb4:	1ab8      	subs	r0, r7, r2
    4cb6:	4684      	mov	ip, r0
    4cb8:	4567      	cmp	r7, ip
    4cba:	41ad      	sbcs	r5, r5
    4cbc:	1ae0      	subs	r0, r4, r3
    4cbe:	426d      	negs	r5, r5
    4cc0:	1b40      	subs	r0, r0, r5
    4cc2:	0205      	lsls	r5, r0, #8
    4cc4:	d400      	bmi.n	4cc8 <__aeabi_dadd+0x514>
    4cc6:	e62c      	b.n	4922 <__aeabi_dadd+0x16e>
    4cc8:	1bd7      	subs	r7, r2, r7
    4cca:	42ba      	cmp	r2, r7
    4ccc:	4192      	sbcs	r2, r2
    4cce:	1b1c      	subs	r4, r3, r4
    4cd0:	4252      	negs	r2, r2
    4cd2:	1aa4      	subs	r4, r4, r2
    4cd4:	46d8      	mov	r8, fp
    4cd6:	e5f1      	b.n	48bc <__aeabi_dadd+0x108>
    4cd8:	0018      	movs	r0, r3
    4cda:	4310      	orrs	r0, r2
    4cdc:	d100      	bne.n	4ce0 <__aeabi_dadd+0x52c>
    4cde:	e763      	b.n	4ba8 <__aeabi_dadd+0x3f4>
    4ce0:	08f8      	lsrs	r0, r7, #3
    4ce2:	0767      	lsls	r7, r4, #29
    4ce4:	4307      	orrs	r7, r0
    4ce6:	2080      	movs	r0, #128	; 0x80
    4ce8:	08e4      	lsrs	r4, r4, #3
    4cea:	0300      	lsls	r0, r0, #12
    4cec:	4204      	tst	r4, r0
    4cee:	d008      	beq.n	4d02 <__aeabi_dadd+0x54e>
    4cf0:	08dd      	lsrs	r5, r3, #3
    4cf2:	4205      	tst	r5, r0
    4cf4:	d105      	bne.n	4d02 <__aeabi_dadd+0x54e>
    4cf6:	08d2      	lsrs	r2, r2, #3
    4cf8:	0759      	lsls	r1, r3, #29
    4cfa:	4311      	orrs	r1, r2
    4cfc:	000f      	movs	r7, r1
    4cfe:	002c      	movs	r4, r5
    4d00:	46d8      	mov	r8, fp
    4d02:	0f7b      	lsrs	r3, r7, #29
    4d04:	00e4      	lsls	r4, r4, #3
    4d06:	431c      	orrs	r4, r3
    4d08:	00ff      	lsls	r7, r7, #3
    4d0a:	4e30      	ldr	r6, [pc, #192]	; (4dcc <__aeabi_dadd+0x618>)
    4d0c:	e5d6      	b.n	48bc <__aeabi_dadd+0x108>
    4d0e:	000c      	movs	r4, r1
    4d10:	0017      	movs	r7, r2
    4d12:	0006      	movs	r6, r0
    4d14:	e5d2      	b.n	48bc <__aeabi_dadd+0x108>
    4d16:	2b00      	cmp	r3, #0
    4d18:	d038      	beq.n	4d8c <__aeabi_dadd+0x5d8>
    4d1a:	000b      	movs	r3, r1
    4d1c:	4313      	orrs	r3, r2
    4d1e:	d100      	bne.n	4d22 <__aeabi_dadd+0x56e>
    4d20:	e742      	b.n	4ba8 <__aeabi_dadd+0x3f4>
    4d22:	08f8      	lsrs	r0, r7, #3
    4d24:	0767      	lsls	r7, r4, #29
    4d26:	4307      	orrs	r7, r0
    4d28:	2080      	movs	r0, #128	; 0x80
    4d2a:	08e4      	lsrs	r4, r4, #3
    4d2c:	0300      	lsls	r0, r0, #12
    4d2e:	4204      	tst	r4, r0
    4d30:	d0e7      	beq.n	4d02 <__aeabi_dadd+0x54e>
    4d32:	08cb      	lsrs	r3, r1, #3
    4d34:	4203      	tst	r3, r0
    4d36:	d1e4      	bne.n	4d02 <__aeabi_dadd+0x54e>
    4d38:	08d2      	lsrs	r2, r2, #3
    4d3a:	0749      	lsls	r1, r1, #29
    4d3c:	4311      	orrs	r1, r2
    4d3e:	000f      	movs	r7, r1
    4d40:	001c      	movs	r4, r3
    4d42:	e7de      	b.n	4d02 <__aeabi_dadd+0x54e>
    4d44:	2700      	movs	r7, #0
    4d46:	2400      	movs	r4, #0
    4d48:	e5d5      	b.n	48f6 <__aeabi_dadd+0x142>
    4d4a:	2100      	movs	r1, #0
    4d4c:	e76b      	b.n	4c26 <__aeabi_dadd+0x472>
    4d4e:	2500      	movs	r5, #0
    4d50:	2700      	movs	r7, #0
    4d52:	e5f3      	b.n	493c <__aeabi_dadd+0x188>
    4d54:	464e      	mov	r6, r9
    4d56:	0025      	movs	r5, r4
    4d58:	3e20      	subs	r6, #32
    4d5a:	40f5      	lsrs	r5, r6
    4d5c:	464b      	mov	r3, r9
    4d5e:	002e      	movs	r6, r5
    4d60:	2b20      	cmp	r3, #32
    4d62:	d02d      	beq.n	4dc0 <__aeabi_dadd+0x60c>
    4d64:	2540      	movs	r5, #64	; 0x40
    4d66:	1aed      	subs	r5, r5, r3
    4d68:	40ac      	lsls	r4, r5
    4d6a:	4327      	orrs	r7, r4
    4d6c:	1e7c      	subs	r4, r7, #1
    4d6e:	41a7      	sbcs	r7, r4
    4d70:	2400      	movs	r4, #0
    4d72:	4337      	orrs	r7, r6
    4d74:	e6c9      	b.n	4b0a <__aeabi_dadd+0x356>
    4d76:	2480      	movs	r4, #128	; 0x80
    4d78:	2500      	movs	r5, #0
    4d7a:	0324      	lsls	r4, r4, #12
    4d7c:	4e13      	ldr	r6, [pc, #76]	; (4dcc <__aeabi_dadd+0x618>)
    4d7e:	2700      	movs	r7, #0
    4d80:	e5dc      	b.n	493c <__aeabi_dadd+0x188>
    4d82:	4327      	orrs	r7, r4
    4d84:	1e7c      	subs	r4, r7, #1
    4d86:	41a7      	sbcs	r7, r4
    4d88:	2400      	movs	r4, #0
    4d8a:	e779      	b.n	4c80 <__aeabi_dadd+0x4cc>
    4d8c:	000c      	movs	r4, r1
    4d8e:	0017      	movs	r7, r2
    4d90:	4e0e      	ldr	r6, [pc, #56]	; (4dcc <__aeabi_dadd+0x618>)
    4d92:	e593      	b.n	48bc <__aeabi_dadd+0x108>
    4d94:	000c      	movs	r4, r1
    4d96:	0017      	movs	r7, r2
    4d98:	e590      	b.n	48bc <__aeabi_dadd+0x108>
    4d9a:	4656      	mov	r6, sl
    4d9c:	0023      	movs	r3, r4
    4d9e:	3e20      	subs	r6, #32
    4da0:	40f3      	lsrs	r3, r6
    4da2:	4699      	mov	r9, r3
    4da4:	4653      	mov	r3, sl
    4da6:	2b20      	cmp	r3, #32
    4da8:	d00e      	beq.n	4dc8 <__aeabi_dadd+0x614>
    4daa:	2340      	movs	r3, #64	; 0x40
    4dac:	4656      	mov	r6, sl
    4dae:	1b9b      	subs	r3, r3, r6
    4db0:	409c      	lsls	r4, r3
    4db2:	4327      	orrs	r7, r4
    4db4:	1e7c      	subs	r4, r7, #1
    4db6:	41a7      	sbcs	r7, r4
    4db8:	464b      	mov	r3, r9
    4dba:	2400      	movs	r4, #0
    4dbc:	431f      	orrs	r7, r3
    4dbe:	e75f      	b.n	4c80 <__aeabi_dadd+0x4cc>
    4dc0:	2400      	movs	r4, #0
    4dc2:	e7d2      	b.n	4d6a <__aeabi_dadd+0x5b6>
    4dc4:	0017      	movs	r7, r2
    4dc6:	e5b2      	b.n	492e <__aeabi_dadd+0x17a>
    4dc8:	2400      	movs	r4, #0
    4dca:	e7f2      	b.n	4db2 <__aeabi_dadd+0x5fe>
    4dcc:	000007ff 	.word	0x000007ff
    4dd0:	ff7fffff 	.word	0xff7fffff

00004dd4 <__aeabi_ddiv>:
    4dd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    4dd6:	4657      	mov	r7, sl
    4dd8:	4645      	mov	r5, r8
    4dda:	46de      	mov	lr, fp
    4ddc:	464e      	mov	r6, r9
    4dde:	b5e0      	push	{r5, r6, r7, lr}
    4de0:	004c      	lsls	r4, r1, #1
    4de2:	030e      	lsls	r6, r1, #12
    4de4:	b087      	sub	sp, #28
    4de6:	4683      	mov	fp, r0
    4de8:	4692      	mov	sl, r2
    4dea:	001d      	movs	r5, r3
    4dec:	4680      	mov	r8, r0
    4dee:	0b36      	lsrs	r6, r6, #12
    4df0:	0d64      	lsrs	r4, r4, #21
    4df2:	0fcf      	lsrs	r7, r1, #31
    4df4:	2c00      	cmp	r4, #0
    4df6:	d04f      	beq.n	4e98 <__aeabi_ddiv+0xc4>
    4df8:	4b6f      	ldr	r3, [pc, #444]	; (4fb8 <__aeabi_ddiv+0x1e4>)
    4dfa:	429c      	cmp	r4, r3
    4dfc:	d035      	beq.n	4e6a <__aeabi_ddiv+0x96>
    4dfe:	2380      	movs	r3, #128	; 0x80
    4e00:	0f42      	lsrs	r2, r0, #29
    4e02:	041b      	lsls	r3, r3, #16
    4e04:	00f6      	lsls	r6, r6, #3
    4e06:	4313      	orrs	r3, r2
    4e08:	4333      	orrs	r3, r6
    4e0a:	4699      	mov	r9, r3
    4e0c:	00c3      	lsls	r3, r0, #3
    4e0e:	4698      	mov	r8, r3
    4e10:	4b6a      	ldr	r3, [pc, #424]	; (4fbc <__aeabi_ddiv+0x1e8>)
    4e12:	2600      	movs	r6, #0
    4e14:	469c      	mov	ip, r3
    4e16:	2300      	movs	r3, #0
    4e18:	4464      	add	r4, ip
    4e1a:	9303      	str	r3, [sp, #12]
    4e1c:	032b      	lsls	r3, r5, #12
    4e1e:	0b1b      	lsrs	r3, r3, #12
    4e20:	469b      	mov	fp, r3
    4e22:	006b      	lsls	r3, r5, #1
    4e24:	0fed      	lsrs	r5, r5, #31
    4e26:	4650      	mov	r0, sl
    4e28:	0d5b      	lsrs	r3, r3, #21
    4e2a:	9501      	str	r5, [sp, #4]
    4e2c:	d05e      	beq.n	4eec <__aeabi_ddiv+0x118>
    4e2e:	4a62      	ldr	r2, [pc, #392]	; (4fb8 <__aeabi_ddiv+0x1e4>)
    4e30:	4293      	cmp	r3, r2
    4e32:	d053      	beq.n	4edc <__aeabi_ddiv+0x108>
    4e34:	465a      	mov	r2, fp
    4e36:	00d1      	lsls	r1, r2, #3
    4e38:	2280      	movs	r2, #128	; 0x80
    4e3a:	0f40      	lsrs	r0, r0, #29
    4e3c:	0412      	lsls	r2, r2, #16
    4e3e:	4302      	orrs	r2, r0
    4e40:	430a      	orrs	r2, r1
    4e42:	4693      	mov	fp, r2
    4e44:	4652      	mov	r2, sl
    4e46:	00d1      	lsls	r1, r2, #3
    4e48:	4a5c      	ldr	r2, [pc, #368]	; (4fbc <__aeabi_ddiv+0x1e8>)
    4e4a:	4694      	mov	ip, r2
    4e4c:	2200      	movs	r2, #0
    4e4e:	4463      	add	r3, ip
    4e50:	0038      	movs	r0, r7
    4e52:	4068      	eors	r0, r5
    4e54:	4684      	mov	ip, r0
    4e56:	9002      	str	r0, [sp, #8]
    4e58:	1ae4      	subs	r4, r4, r3
    4e5a:	4316      	orrs	r6, r2
    4e5c:	2e0f      	cmp	r6, #15
    4e5e:	d900      	bls.n	4e62 <__aeabi_ddiv+0x8e>
    4e60:	e0b4      	b.n	4fcc <__aeabi_ddiv+0x1f8>
    4e62:	4b57      	ldr	r3, [pc, #348]	; (4fc0 <__aeabi_ddiv+0x1ec>)
    4e64:	00b6      	lsls	r6, r6, #2
    4e66:	599b      	ldr	r3, [r3, r6]
    4e68:	469f      	mov	pc, r3
    4e6a:	0003      	movs	r3, r0
    4e6c:	4333      	orrs	r3, r6
    4e6e:	4699      	mov	r9, r3
    4e70:	d16c      	bne.n	4f4c <__aeabi_ddiv+0x178>
    4e72:	2300      	movs	r3, #0
    4e74:	4698      	mov	r8, r3
    4e76:	3302      	adds	r3, #2
    4e78:	2608      	movs	r6, #8
    4e7a:	9303      	str	r3, [sp, #12]
    4e7c:	e7ce      	b.n	4e1c <__aeabi_ddiv+0x48>
    4e7e:	46cb      	mov	fp, r9
    4e80:	4641      	mov	r1, r8
    4e82:	9a03      	ldr	r2, [sp, #12]
    4e84:	9701      	str	r7, [sp, #4]
    4e86:	2a02      	cmp	r2, #2
    4e88:	d165      	bne.n	4f56 <__aeabi_ddiv+0x182>
    4e8a:	9b01      	ldr	r3, [sp, #4]
    4e8c:	4c4a      	ldr	r4, [pc, #296]	; (4fb8 <__aeabi_ddiv+0x1e4>)
    4e8e:	469c      	mov	ip, r3
    4e90:	2300      	movs	r3, #0
    4e92:	2200      	movs	r2, #0
    4e94:	4698      	mov	r8, r3
    4e96:	e06b      	b.n	4f70 <__aeabi_ddiv+0x19c>
    4e98:	0003      	movs	r3, r0
    4e9a:	4333      	orrs	r3, r6
    4e9c:	4699      	mov	r9, r3
    4e9e:	d04e      	beq.n	4f3e <__aeabi_ddiv+0x16a>
    4ea0:	2e00      	cmp	r6, #0
    4ea2:	d100      	bne.n	4ea6 <__aeabi_ddiv+0xd2>
    4ea4:	e1bc      	b.n	5220 <__aeabi_ddiv+0x44c>
    4ea6:	0030      	movs	r0, r6
    4ea8:	f001 fb08 	bl	64bc <__clzsi2>
    4eac:	0003      	movs	r3, r0
    4eae:	3b0b      	subs	r3, #11
    4eb0:	2b1c      	cmp	r3, #28
    4eb2:	dd00      	ble.n	4eb6 <__aeabi_ddiv+0xe2>
    4eb4:	e1ac      	b.n	5210 <__aeabi_ddiv+0x43c>
    4eb6:	221d      	movs	r2, #29
    4eb8:	1ad3      	subs	r3, r2, r3
    4eba:	465a      	mov	r2, fp
    4ebc:	0001      	movs	r1, r0
    4ebe:	40da      	lsrs	r2, r3
    4ec0:	3908      	subs	r1, #8
    4ec2:	408e      	lsls	r6, r1
    4ec4:	0013      	movs	r3, r2
    4ec6:	4333      	orrs	r3, r6
    4ec8:	4699      	mov	r9, r3
    4eca:	465b      	mov	r3, fp
    4ecc:	408b      	lsls	r3, r1
    4ece:	4698      	mov	r8, r3
    4ed0:	2300      	movs	r3, #0
    4ed2:	4c3c      	ldr	r4, [pc, #240]	; (4fc4 <__aeabi_ddiv+0x1f0>)
    4ed4:	2600      	movs	r6, #0
    4ed6:	1a24      	subs	r4, r4, r0
    4ed8:	9303      	str	r3, [sp, #12]
    4eda:	e79f      	b.n	4e1c <__aeabi_ddiv+0x48>
    4edc:	4651      	mov	r1, sl
    4ede:	465a      	mov	r2, fp
    4ee0:	4311      	orrs	r1, r2
    4ee2:	d129      	bne.n	4f38 <__aeabi_ddiv+0x164>
    4ee4:	2200      	movs	r2, #0
    4ee6:	4693      	mov	fp, r2
    4ee8:	3202      	adds	r2, #2
    4eea:	e7b1      	b.n	4e50 <__aeabi_ddiv+0x7c>
    4eec:	4659      	mov	r1, fp
    4eee:	4301      	orrs	r1, r0
    4ef0:	d01e      	beq.n	4f30 <__aeabi_ddiv+0x15c>
    4ef2:	465b      	mov	r3, fp
    4ef4:	2b00      	cmp	r3, #0
    4ef6:	d100      	bne.n	4efa <__aeabi_ddiv+0x126>
    4ef8:	e19e      	b.n	5238 <__aeabi_ddiv+0x464>
    4efa:	4658      	mov	r0, fp
    4efc:	f001 fade 	bl	64bc <__clzsi2>
    4f00:	0003      	movs	r3, r0
    4f02:	3b0b      	subs	r3, #11
    4f04:	2b1c      	cmp	r3, #28
    4f06:	dd00      	ble.n	4f0a <__aeabi_ddiv+0x136>
    4f08:	e18f      	b.n	522a <__aeabi_ddiv+0x456>
    4f0a:	0002      	movs	r2, r0
    4f0c:	4659      	mov	r1, fp
    4f0e:	3a08      	subs	r2, #8
    4f10:	4091      	lsls	r1, r2
    4f12:	468b      	mov	fp, r1
    4f14:	211d      	movs	r1, #29
    4f16:	1acb      	subs	r3, r1, r3
    4f18:	4651      	mov	r1, sl
    4f1a:	40d9      	lsrs	r1, r3
    4f1c:	000b      	movs	r3, r1
    4f1e:	4659      	mov	r1, fp
    4f20:	430b      	orrs	r3, r1
    4f22:	4651      	mov	r1, sl
    4f24:	469b      	mov	fp, r3
    4f26:	4091      	lsls	r1, r2
    4f28:	4b26      	ldr	r3, [pc, #152]	; (4fc4 <__aeabi_ddiv+0x1f0>)
    4f2a:	2200      	movs	r2, #0
    4f2c:	1a1b      	subs	r3, r3, r0
    4f2e:	e78f      	b.n	4e50 <__aeabi_ddiv+0x7c>
    4f30:	2300      	movs	r3, #0
    4f32:	2201      	movs	r2, #1
    4f34:	469b      	mov	fp, r3
    4f36:	e78b      	b.n	4e50 <__aeabi_ddiv+0x7c>
    4f38:	4651      	mov	r1, sl
    4f3a:	2203      	movs	r2, #3
    4f3c:	e788      	b.n	4e50 <__aeabi_ddiv+0x7c>
    4f3e:	2300      	movs	r3, #0
    4f40:	4698      	mov	r8, r3
    4f42:	3301      	adds	r3, #1
    4f44:	2604      	movs	r6, #4
    4f46:	2400      	movs	r4, #0
    4f48:	9303      	str	r3, [sp, #12]
    4f4a:	e767      	b.n	4e1c <__aeabi_ddiv+0x48>
    4f4c:	2303      	movs	r3, #3
    4f4e:	46b1      	mov	r9, r6
    4f50:	9303      	str	r3, [sp, #12]
    4f52:	260c      	movs	r6, #12
    4f54:	e762      	b.n	4e1c <__aeabi_ddiv+0x48>
    4f56:	2a03      	cmp	r2, #3
    4f58:	d100      	bne.n	4f5c <__aeabi_ddiv+0x188>
    4f5a:	e25c      	b.n	5416 <__aeabi_ddiv+0x642>
    4f5c:	9b01      	ldr	r3, [sp, #4]
    4f5e:	2a01      	cmp	r2, #1
    4f60:	d000      	beq.n	4f64 <__aeabi_ddiv+0x190>
    4f62:	e1e4      	b.n	532e <__aeabi_ddiv+0x55a>
    4f64:	4013      	ands	r3, r2
    4f66:	469c      	mov	ip, r3
    4f68:	2300      	movs	r3, #0
    4f6a:	2400      	movs	r4, #0
    4f6c:	2200      	movs	r2, #0
    4f6e:	4698      	mov	r8, r3
    4f70:	2100      	movs	r1, #0
    4f72:	0312      	lsls	r2, r2, #12
    4f74:	0b13      	lsrs	r3, r2, #12
    4f76:	0d0a      	lsrs	r2, r1, #20
    4f78:	0512      	lsls	r2, r2, #20
    4f7a:	431a      	orrs	r2, r3
    4f7c:	0523      	lsls	r3, r4, #20
    4f7e:	4c12      	ldr	r4, [pc, #72]	; (4fc8 <__aeabi_ddiv+0x1f4>)
    4f80:	4640      	mov	r0, r8
    4f82:	4022      	ands	r2, r4
    4f84:	4313      	orrs	r3, r2
    4f86:	4662      	mov	r2, ip
    4f88:	005b      	lsls	r3, r3, #1
    4f8a:	07d2      	lsls	r2, r2, #31
    4f8c:	085b      	lsrs	r3, r3, #1
    4f8e:	4313      	orrs	r3, r2
    4f90:	0019      	movs	r1, r3
    4f92:	b007      	add	sp, #28
    4f94:	bc3c      	pop	{r2, r3, r4, r5}
    4f96:	4690      	mov	r8, r2
    4f98:	4699      	mov	r9, r3
    4f9a:	46a2      	mov	sl, r4
    4f9c:	46ab      	mov	fp, r5
    4f9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4fa0:	2300      	movs	r3, #0
    4fa2:	2280      	movs	r2, #128	; 0x80
    4fa4:	469c      	mov	ip, r3
    4fa6:	0312      	lsls	r2, r2, #12
    4fa8:	4698      	mov	r8, r3
    4faa:	4c03      	ldr	r4, [pc, #12]	; (4fb8 <__aeabi_ddiv+0x1e4>)
    4fac:	e7e0      	b.n	4f70 <__aeabi_ddiv+0x19c>
    4fae:	2300      	movs	r3, #0
    4fb0:	4c01      	ldr	r4, [pc, #4]	; (4fb8 <__aeabi_ddiv+0x1e4>)
    4fb2:	2200      	movs	r2, #0
    4fb4:	4698      	mov	r8, r3
    4fb6:	e7db      	b.n	4f70 <__aeabi_ddiv+0x19c>
    4fb8:	000007ff 	.word	0x000007ff
    4fbc:	fffffc01 	.word	0xfffffc01
    4fc0:	00006850 	.word	0x00006850
    4fc4:	fffffc0d 	.word	0xfffffc0d
    4fc8:	800fffff 	.word	0x800fffff
    4fcc:	45d9      	cmp	r9, fp
    4fce:	d900      	bls.n	4fd2 <__aeabi_ddiv+0x1fe>
    4fd0:	e139      	b.n	5246 <__aeabi_ddiv+0x472>
    4fd2:	d100      	bne.n	4fd6 <__aeabi_ddiv+0x202>
    4fd4:	e134      	b.n	5240 <__aeabi_ddiv+0x46c>
    4fd6:	2300      	movs	r3, #0
    4fd8:	4646      	mov	r6, r8
    4fda:	464d      	mov	r5, r9
    4fdc:	469a      	mov	sl, r3
    4fde:	3c01      	subs	r4, #1
    4fe0:	465b      	mov	r3, fp
    4fe2:	0e0a      	lsrs	r2, r1, #24
    4fe4:	021b      	lsls	r3, r3, #8
    4fe6:	431a      	orrs	r2, r3
    4fe8:	020b      	lsls	r3, r1, #8
    4fea:	0c17      	lsrs	r7, r2, #16
    4fec:	9303      	str	r3, [sp, #12]
    4fee:	0413      	lsls	r3, r2, #16
    4ff0:	0c1b      	lsrs	r3, r3, #16
    4ff2:	0039      	movs	r1, r7
    4ff4:	0028      	movs	r0, r5
    4ff6:	4690      	mov	r8, r2
    4ff8:	9301      	str	r3, [sp, #4]
    4ffa:	f7ff f9ad 	bl	4358 <__udivsi3>
    4ffe:	0002      	movs	r2, r0
    5000:	9b01      	ldr	r3, [sp, #4]
    5002:	4683      	mov	fp, r0
    5004:	435a      	muls	r2, r3
    5006:	0028      	movs	r0, r5
    5008:	0039      	movs	r1, r7
    500a:	4691      	mov	r9, r2
    500c:	f7ff fa2a 	bl	4464 <__aeabi_uidivmod>
    5010:	0c35      	lsrs	r5, r6, #16
    5012:	0409      	lsls	r1, r1, #16
    5014:	430d      	orrs	r5, r1
    5016:	45a9      	cmp	r9, r5
    5018:	d90d      	bls.n	5036 <__aeabi_ddiv+0x262>
    501a:	465b      	mov	r3, fp
    501c:	4445      	add	r5, r8
    501e:	3b01      	subs	r3, #1
    5020:	45a8      	cmp	r8, r5
    5022:	d900      	bls.n	5026 <__aeabi_ddiv+0x252>
    5024:	e13a      	b.n	529c <__aeabi_ddiv+0x4c8>
    5026:	45a9      	cmp	r9, r5
    5028:	d800      	bhi.n	502c <__aeabi_ddiv+0x258>
    502a:	e137      	b.n	529c <__aeabi_ddiv+0x4c8>
    502c:	2302      	movs	r3, #2
    502e:	425b      	negs	r3, r3
    5030:	469c      	mov	ip, r3
    5032:	4445      	add	r5, r8
    5034:	44e3      	add	fp, ip
    5036:	464b      	mov	r3, r9
    5038:	1aeb      	subs	r3, r5, r3
    503a:	0039      	movs	r1, r7
    503c:	0018      	movs	r0, r3
    503e:	9304      	str	r3, [sp, #16]
    5040:	f7ff f98a 	bl	4358 <__udivsi3>
    5044:	9b01      	ldr	r3, [sp, #4]
    5046:	0005      	movs	r5, r0
    5048:	4343      	muls	r3, r0
    504a:	0039      	movs	r1, r7
    504c:	9804      	ldr	r0, [sp, #16]
    504e:	4699      	mov	r9, r3
    5050:	f7ff fa08 	bl	4464 <__aeabi_uidivmod>
    5054:	0433      	lsls	r3, r6, #16
    5056:	0409      	lsls	r1, r1, #16
    5058:	0c1b      	lsrs	r3, r3, #16
    505a:	430b      	orrs	r3, r1
    505c:	4599      	cmp	r9, r3
    505e:	d909      	bls.n	5074 <__aeabi_ddiv+0x2a0>
    5060:	4443      	add	r3, r8
    5062:	1e6a      	subs	r2, r5, #1
    5064:	4598      	cmp	r8, r3
    5066:	d900      	bls.n	506a <__aeabi_ddiv+0x296>
    5068:	e11a      	b.n	52a0 <__aeabi_ddiv+0x4cc>
    506a:	4599      	cmp	r9, r3
    506c:	d800      	bhi.n	5070 <__aeabi_ddiv+0x29c>
    506e:	e117      	b.n	52a0 <__aeabi_ddiv+0x4cc>
    5070:	3d02      	subs	r5, #2
    5072:	4443      	add	r3, r8
    5074:	464a      	mov	r2, r9
    5076:	1a9b      	subs	r3, r3, r2
    5078:	465a      	mov	r2, fp
    507a:	0412      	lsls	r2, r2, #16
    507c:	432a      	orrs	r2, r5
    507e:	9903      	ldr	r1, [sp, #12]
    5080:	4693      	mov	fp, r2
    5082:	0c10      	lsrs	r0, r2, #16
    5084:	0c0a      	lsrs	r2, r1, #16
    5086:	4691      	mov	r9, r2
    5088:	0409      	lsls	r1, r1, #16
    508a:	465a      	mov	r2, fp
    508c:	0c09      	lsrs	r1, r1, #16
    508e:	464e      	mov	r6, r9
    5090:	000d      	movs	r5, r1
    5092:	0412      	lsls	r2, r2, #16
    5094:	0c12      	lsrs	r2, r2, #16
    5096:	4345      	muls	r5, r0
    5098:	9105      	str	r1, [sp, #20]
    509a:	4351      	muls	r1, r2
    509c:	4372      	muls	r2, r6
    509e:	4370      	muls	r0, r6
    50a0:	1952      	adds	r2, r2, r5
    50a2:	0c0e      	lsrs	r6, r1, #16
    50a4:	18b2      	adds	r2, r6, r2
    50a6:	4295      	cmp	r5, r2
    50a8:	d903      	bls.n	50b2 <__aeabi_ddiv+0x2de>
    50aa:	2580      	movs	r5, #128	; 0x80
    50ac:	026d      	lsls	r5, r5, #9
    50ae:	46ac      	mov	ip, r5
    50b0:	4460      	add	r0, ip
    50b2:	0c15      	lsrs	r5, r2, #16
    50b4:	0409      	lsls	r1, r1, #16
    50b6:	0412      	lsls	r2, r2, #16
    50b8:	0c09      	lsrs	r1, r1, #16
    50ba:	1828      	adds	r0, r5, r0
    50bc:	1852      	adds	r2, r2, r1
    50be:	4283      	cmp	r3, r0
    50c0:	d200      	bcs.n	50c4 <__aeabi_ddiv+0x2f0>
    50c2:	e0ce      	b.n	5262 <__aeabi_ddiv+0x48e>
    50c4:	d100      	bne.n	50c8 <__aeabi_ddiv+0x2f4>
    50c6:	e0c8      	b.n	525a <__aeabi_ddiv+0x486>
    50c8:	1a1d      	subs	r5, r3, r0
    50ca:	4653      	mov	r3, sl
    50cc:	1a9e      	subs	r6, r3, r2
    50ce:	45b2      	cmp	sl, r6
    50d0:	4192      	sbcs	r2, r2
    50d2:	4252      	negs	r2, r2
    50d4:	1aab      	subs	r3, r5, r2
    50d6:	469a      	mov	sl, r3
    50d8:	4598      	cmp	r8, r3
    50da:	d100      	bne.n	50de <__aeabi_ddiv+0x30a>
    50dc:	e117      	b.n	530e <__aeabi_ddiv+0x53a>
    50de:	0039      	movs	r1, r7
    50e0:	0018      	movs	r0, r3
    50e2:	f7ff f939 	bl	4358 <__udivsi3>
    50e6:	9b01      	ldr	r3, [sp, #4]
    50e8:	0005      	movs	r5, r0
    50ea:	4343      	muls	r3, r0
    50ec:	0039      	movs	r1, r7
    50ee:	4650      	mov	r0, sl
    50f0:	9304      	str	r3, [sp, #16]
    50f2:	f7ff f9b7 	bl	4464 <__aeabi_uidivmod>
    50f6:	9804      	ldr	r0, [sp, #16]
    50f8:	040b      	lsls	r3, r1, #16
    50fa:	0c31      	lsrs	r1, r6, #16
    50fc:	4319      	orrs	r1, r3
    50fe:	4288      	cmp	r0, r1
    5100:	d909      	bls.n	5116 <__aeabi_ddiv+0x342>
    5102:	4441      	add	r1, r8
    5104:	1e6b      	subs	r3, r5, #1
    5106:	4588      	cmp	r8, r1
    5108:	d900      	bls.n	510c <__aeabi_ddiv+0x338>
    510a:	e107      	b.n	531c <__aeabi_ddiv+0x548>
    510c:	4288      	cmp	r0, r1
    510e:	d800      	bhi.n	5112 <__aeabi_ddiv+0x33e>
    5110:	e104      	b.n	531c <__aeabi_ddiv+0x548>
    5112:	3d02      	subs	r5, #2
    5114:	4441      	add	r1, r8
    5116:	9b04      	ldr	r3, [sp, #16]
    5118:	1acb      	subs	r3, r1, r3
    511a:	0018      	movs	r0, r3
    511c:	0039      	movs	r1, r7
    511e:	9304      	str	r3, [sp, #16]
    5120:	f7ff f91a 	bl	4358 <__udivsi3>
    5124:	9b01      	ldr	r3, [sp, #4]
    5126:	4682      	mov	sl, r0
    5128:	4343      	muls	r3, r0
    512a:	0039      	movs	r1, r7
    512c:	9804      	ldr	r0, [sp, #16]
    512e:	9301      	str	r3, [sp, #4]
    5130:	f7ff f998 	bl	4464 <__aeabi_uidivmod>
    5134:	9801      	ldr	r0, [sp, #4]
    5136:	040b      	lsls	r3, r1, #16
    5138:	0431      	lsls	r1, r6, #16
    513a:	0c09      	lsrs	r1, r1, #16
    513c:	4319      	orrs	r1, r3
    513e:	4288      	cmp	r0, r1
    5140:	d90d      	bls.n	515e <__aeabi_ddiv+0x38a>
    5142:	4653      	mov	r3, sl
    5144:	4441      	add	r1, r8
    5146:	3b01      	subs	r3, #1
    5148:	4588      	cmp	r8, r1
    514a:	d900      	bls.n	514e <__aeabi_ddiv+0x37a>
    514c:	e0e8      	b.n	5320 <__aeabi_ddiv+0x54c>
    514e:	4288      	cmp	r0, r1
    5150:	d800      	bhi.n	5154 <__aeabi_ddiv+0x380>
    5152:	e0e5      	b.n	5320 <__aeabi_ddiv+0x54c>
    5154:	2302      	movs	r3, #2
    5156:	425b      	negs	r3, r3
    5158:	469c      	mov	ip, r3
    515a:	4441      	add	r1, r8
    515c:	44e2      	add	sl, ip
    515e:	9b01      	ldr	r3, [sp, #4]
    5160:	042d      	lsls	r5, r5, #16
    5162:	1ace      	subs	r6, r1, r3
    5164:	4651      	mov	r1, sl
    5166:	4329      	orrs	r1, r5
    5168:	9d05      	ldr	r5, [sp, #20]
    516a:	464f      	mov	r7, r9
    516c:	002a      	movs	r2, r5
    516e:	040b      	lsls	r3, r1, #16
    5170:	0c08      	lsrs	r0, r1, #16
    5172:	0c1b      	lsrs	r3, r3, #16
    5174:	435a      	muls	r2, r3
    5176:	4345      	muls	r5, r0
    5178:	437b      	muls	r3, r7
    517a:	4378      	muls	r0, r7
    517c:	195b      	adds	r3, r3, r5
    517e:	0c17      	lsrs	r7, r2, #16
    5180:	18fb      	adds	r3, r7, r3
    5182:	429d      	cmp	r5, r3
    5184:	d903      	bls.n	518e <__aeabi_ddiv+0x3ba>
    5186:	2580      	movs	r5, #128	; 0x80
    5188:	026d      	lsls	r5, r5, #9
    518a:	46ac      	mov	ip, r5
    518c:	4460      	add	r0, ip
    518e:	0c1d      	lsrs	r5, r3, #16
    5190:	0412      	lsls	r2, r2, #16
    5192:	041b      	lsls	r3, r3, #16
    5194:	0c12      	lsrs	r2, r2, #16
    5196:	1828      	adds	r0, r5, r0
    5198:	189b      	adds	r3, r3, r2
    519a:	4286      	cmp	r6, r0
    519c:	d200      	bcs.n	51a0 <__aeabi_ddiv+0x3cc>
    519e:	e093      	b.n	52c8 <__aeabi_ddiv+0x4f4>
    51a0:	d100      	bne.n	51a4 <__aeabi_ddiv+0x3d0>
    51a2:	e08e      	b.n	52c2 <__aeabi_ddiv+0x4ee>
    51a4:	2301      	movs	r3, #1
    51a6:	4319      	orrs	r1, r3
    51a8:	4ba0      	ldr	r3, [pc, #640]	; (542c <__aeabi_ddiv+0x658>)
    51aa:	18e3      	adds	r3, r4, r3
    51ac:	2b00      	cmp	r3, #0
    51ae:	dc00      	bgt.n	51b2 <__aeabi_ddiv+0x3de>
    51b0:	e099      	b.n	52e6 <__aeabi_ddiv+0x512>
    51b2:	074a      	lsls	r2, r1, #29
    51b4:	d000      	beq.n	51b8 <__aeabi_ddiv+0x3e4>
    51b6:	e09e      	b.n	52f6 <__aeabi_ddiv+0x522>
    51b8:	465a      	mov	r2, fp
    51ba:	01d2      	lsls	r2, r2, #7
    51bc:	d506      	bpl.n	51cc <__aeabi_ddiv+0x3f8>
    51be:	465a      	mov	r2, fp
    51c0:	4b9b      	ldr	r3, [pc, #620]	; (5430 <__aeabi_ddiv+0x65c>)
    51c2:	401a      	ands	r2, r3
    51c4:	2380      	movs	r3, #128	; 0x80
    51c6:	4693      	mov	fp, r2
    51c8:	00db      	lsls	r3, r3, #3
    51ca:	18e3      	adds	r3, r4, r3
    51cc:	4a99      	ldr	r2, [pc, #612]	; (5434 <__aeabi_ddiv+0x660>)
    51ce:	4293      	cmp	r3, r2
    51d0:	dd68      	ble.n	52a4 <__aeabi_ddiv+0x4d0>
    51d2:	2301      	movs	r3, #1
    51d4:	9a02      	ldr	r2, [sp, #8]
    51d6:	4c98      	ldr	r4, [pc, #608]	; (5438 <__aeabi_ddiv+0x664>)
    51d8:	401a      	ands	r2, r3
    51da:	2300      	movs	r3, #0
    51dc:	4694      	mov	ip, r2
    51de:	4698      	mov	r8, r3
    51e0:	2200      	movs	r2, #0
    51e2:	e6c5      	b.n	4f70 <__aeabi_ddiv+0x19c>
    51e4:	2280      	movs	r2, #128	; 0x80
    51e6:	464b      	mov	r3, r9
    51e8:	0312      	lsls	r2, r2, #12
    51ea:	4213      	tst	r3, r2
    51ec:	d00a      	beq.n	5204 <__aeabi_ddiv+0x430>
    51ee:	465b      	mov	r3, fp
    51f0:	4213      	tst	r3, r2
    51f2:	d106      	bne.n	5202 <__aeabi_ddiv+0x42e>
    51f4:	431a      	orrs	r2, r3
    51f6:	0312      	lsls	r2, r2, #12
    51f8:	0b12      	lsrs	r2, r2, #12
    51fa:	46ac      	mov	ip, r5
    51fc:	4688      	mov	r8, r1
    51fe:	4c8e      	ldr	r4, [pc, #568]	; (5438 <__aeabi_ddiv+0x664>)
    5200:	e6b6      	b.n	4f70 <__aeabi_ddiv+0x19c>
    5202:	464b      	mov	r3, r9
    5204:	431a      	orrs	r2, r3
    5206:	0312      	lsls	r2, r2, #12
    5208:	0b12      	lsrs	r2, r2, #12
    520a:	46bc      	mov	ip, r7
    520c:	4c8a      	ldr	r4, [pc, #552]	; (5438 <__aeabi_ddiv+0x664>)
    520e:	e6af      	b.n	4f70 <__aeabi_ddiv+0x19c>
    5210:	0003      	movs	r3, r0
    5212:	465a      	mov	r2, fp
    5214:	3b28      	subs	r3, #40	; 0x28
    5216:	409a      	lsls	r2, r3
    5218:	2300      	movs	r3, #0
    521a:	4691      	mov	r9, r2
    521c:	4698      	mov	r8, r3
    521e:	e657      	b.n	4ed0 <__aeabi_ddiv+0xfc>
    5220:	4658      	mov	r0, fp
    5222:	f001 f94b 	bl	64bc <__clzsi2>
    5226:	3020      	adds	r0, #32
    5228:	e640      	b.n	4eac <__aeabi_ddiv+0xd8>
    522a:	0003      	movs	r3, r0
    522c:	4652      	mov	r2, sl
    522e:	3b28      	subs	r3, #40	; 0x28
    5230:	409a      	lsls	r2, r3
    5232:	2100      	movs	r1, #0
    5234:	4693      	mov	fp, r2
    5236:	e677      	b.n	4f28 <__aeabi_ddiv+0x154>
    5238:	f001 f940 	bl	64bc <__clzsi2>
    523c:	3020      	adds	r0, #32
    523e:	e65f      	b.n	4f00 <__aeabi_ddiv+0x12c>
    5240:	4588      	cmp	r8, r1
    5242:	d200      	bcs.n	5246 <__aeabi_ddiv+0x472>
    5244:	e6c7      	b.n	4fd6 <__aeabi_ddiv+0x202>
    5246:	464b      	mov	r3, r9
    5248:	07de      	lsls	r6, r3, #31
    524a:	085d      	lsrs	r5, r3, #1
    524c:	4643      	mov	r3, r8
    524e:	085b      	lsrs	r3, r3, #1
    5250:	431e      	orrs	r6, r3
    5252:	4643      	mov	r3, r8
    5254:	07db      	lsls	r3, r3, #31
    5256:	469a      	mov	sl, r3
    5258:	e6c2      	b.n	4fe0 <__aeabi_ddiv+0x20c>
    525a:	2500      	movs	r5, #0
    525c:	4592      	cmp	sl, r2
    525e:	d300      	bcc.n	5262 <__aeabi_ddiv+0x48e>
    5260:	e733      	b.n	50ca <__aeabi_ddiv+0x2f6>
    5262:	9e03      	ldr	r6, [sp, #12]
    5264:	4659      	mov	r1, fp
    5266:	46b4      	mov	ip, r6
    5268:	44e2      	add	sl, ip
    526a:	45b2      	cmp	sl, r6
    526c:	41ad      	sbcs	r5, r5
    526e:	426d      	negs	r5, r5
    5270:	4445      	add	r5, r8
    5272:	18eb      	adds	r3, r5, r3
    5274:	3901      	subs	r1, #1
    5276:	4598      	cmp	r8, r3
    5278:	d207      	bcs.n	528a <__aeabi_ddiv+0x4b6>
    527a:	4298      	cmp	r0, r3
    527c:	d900      	bls.n	5280 <__aeabi_ddiv+0x4ac>
    527e:	e07f      	b.n	5380 <__aeabi_ddiv+0x5ac>
    5280:	d100      	bne.n	5284 <__aeabi_ddiv+0x4b0>
    5282:	e0bc      	b.n	53fe <__aeabi_ddiv+0x62a>
    5284:	1a1d      	subs	r5, r3, r0
    5286:	468b      	mov	fp, r1
    5288:	e71f      	b.n	50ca <__aeabi_ddiv+0x2f6>
    528a:	4598      	cmp	r8, r3
    528c:	d1fa      	bne.n	5284 <__aeabi_ddiv+0x4b0>
    528e:	9d03      	ldr	r5, [sp, #12]
    5290:	4555      	cmp	r5, sl
    5292:	d9f2      	bls.n	527a <__aeabi_ddiv+0x4a6>
    5294:	4643      	mov	r3, r8
    5296:	468b      	mov	fp, r1
    5298:	1a1d      	subs	r5, r3, r0
    529a:	e716      	b.n	50ca <__aeabi_ddiv+0x2f6>
    529c:	469b      	mov	fp, r3
    529e:	e6ca      	b.n	5036 <__aeabi_ddiv+0x262>
    52a0:	0015      	movs	r5, r2
    52a2:	e6e7      	b.n	5074 <__aeabi_ddiv+0x2a0>
    52a4:	465a      	mov	r2, fp
    52a6:	08c9      	lsrs	r1, r1, #3
    52a8:	0752      	lsls	r2, r2, #29
    52aa:	430a      	orrs	r2, r1
    52ac:	055b      	lsls	r3, r3, #21
    52ae:	4690      	mov	r8, r2
    52b0:	0d5c      	lsrs	r4, r3, #21
    52b2:	465a      	mov	r2, fp
    52b4:	2301      	movs	r3, #1
    52b6:	9902      	ldr	r1, [sp, #8]
    52b8:	0252      	lsls	r2, r2, #9
    52ba:	4019      	ands	r1, r3
    52bc:	0b12      	lsrs	r2, r2, #12
    52be:	468c      	mov	ip, r1
    52c0:	e656      	b.n	4f70 <__aeabi_ddiv+0x19c>
    52c2:	2b00      	cmp	r3, #0
    52c4:	d100      	bne.n	52c8 <__aeabi_ddiv+0x4f4>
    52c6:	e76f      	b.n	51a8 <__aeabi_ddiv+0x3d4>
    52c8:	4446      	add	r6, r8
    52ca:	1e4a      	subs	r2, r1, #1
    52cc:	45b0      	cmp	r8, r6
    52ce:	d929      	bls.n	5324 <__aeabi_ddiv+0x550>
    52d0:	0011      	movs	r1, r2
    52d2:	4286      	cmp	r6, r0
    52d4:	d000      	beq.n	52d8 <__aeabi_ddiv+0x504>
    52d6:	e765      	b.n	51a4 <__aeabi_ddiv+0x3d0>
    52d8:	9a03      	ldr	r2, [sp, #12]
    52da:	4293      	cmp	r3, r2
    52dc:	d000      	beq.n	52e0 <__aeabi_ddiv+0x50c>
    52de:	e761      	b.n	51a4 <__aeabi_ddiv+0x3d0>
    52e0:	e762      	b.n	51a8 <__aeabi_ddiv+0x3d4>
    52e2:	2101      	movs	r1, #1
    52e4:	4249      	negs	r1, r1
    52e6:	2001      	movs	r0, #1
    52e8:	1ac2      	subs	r2, r0, r3
    52ea:	2a38      	cmp	r2, #56	; 0x38
    52ec:	dd21      	ble.n	5332 <__aeabi_ddiv+0x55e>
    52ee:	9b02      	ldr	r3, [sp, #8]
    52f0:	4003      	ands	r3, r0
    52f2:	469c      	mov	ip, r3
    52f4:	e638      	b.n	4f68 <__aeabi_ddiv+0x194>
    52f6:	220f      	movs	r2, #15
    52f8:	400a      	ands	r2, r1
    52fa:	2a04      	cmp	r2, #4
    52fc:	d100      	bne.n	5300 <__aeabi_ddiv+0x52c>
    52fe:	e75b      	b.n	51b8 <__aeabi_ddiv+0x3e4>
    5300:	000a      	movs	r2, r1
    5302:	1d11      	adds	r1, r2, #4
    5304:	4291      	cmp	r1, r2
    5306:	4192      	sbcs	r2, r2
    5308:	4252      	negs	r2, r2
    530a:	4493      	add	fp, r2
    530c:	e754      	b.n	51b8 <__aeabi_ddiv+0x3e4>
    530e:	4b47      	ldr	r3, [pc, #284]	; (542c <__aeabi_ddiv+0x658>)
    5310:	18e3      	adds	r3, r4, r3
    5312:	2b00      	cmp	r3, #0
    5314:	dde5      	ble.n	52e2 <__aeabi_ddiv+0x50e>
    5316:	2201      	movs	r2, #1
    5318:	4252      	negs	r2, r2
    531a:	e7f2      	b.n	5302 <__aeabi_ddiv+0x52e>
    531c:	001d      	movs	r5, r3
    531e:	e6fa      	b.n	5116 <__aeabi_ddiv+0x342>
    5320:	469a      	mov	sl, r3
    5322:	e71c      	b.n	515e <__aeabi_ddiv+0x38a>
    5324:	42b0      	cmp	r0, r6
    5326:	d839      	bhi.n	539c <__aeabi_ddiv+0x5c8>
    5328:	d06e      	beq.n	5408 <__aeabi_ddiv+0x634>
    532a:	0011      	movs	r1, r2
    532c:	e73a      	b.n	51a4 <__aeabi_ddiv+0x3d0>
    532e:	9302      	str	r3, [sp, #8]
    5330:	e73a      	b.n	51a8 <__aeabi_ddiv+0x3d4>
    5332:	2a1f      	cmp	r2, #31
    5334:	dc3c      	bgt.n	53b0 <__aeabi_ddiv+0x5dc>
    5336:	2320      	movs	r3, #32
    5338:	1a9b      	subs	r3, r3, r2
    533a:	000c      	movs	r4, r1
    533c:	4658      	mov	r0, fp
    533e:	4099      	lsls	r1, r3
    5340:	4098      	lsls	r0, r3
    5342:	1e4b      	subs	r3, r1, #1
    5344:	4199      	sbcs	r1, r3
    5346:	465b      	mov	r3, fp
    5348:	40d4      	lsrs	r4, r2
    534a:	40d3      	lsrs	r3, r2
    534c:	4320      	orrs	r0, r4
    534e:	4308      	orrs	r0, r1
    5350:	001a      	movs	r2, r3
    5352:	0743      	lsls	r3, r0, #29
    5354:	d009      	beq.n	536a <__aeabi_ddiv+0x596>
    5356:	230f      	movs	r3, #15
    5358:	4003      	ands	r3, r0
    535a:	2b04      	cmp	r3, #4
    535c:	d005      	beq.n	536a <__aeabi_ddiv+0x596>
    535e:	0001      	movs	r1, r0
    5360:	1d08      	adds	r0, r1, #4
    5362:	4288      	cmp	r0, r1
    5364:	419b      	sbcs	r3, r3
    5366:	425b      	negs	r3, r3
    5368:	18d2      	adds	r2, r2, r3
    536a:	0213      	lsls	r3, r2, #8
    536c:	d53a      	bpl.n	53e4 <__aeabi_ddiv+0x610>
    536e:	2301      	movs	r3, #1
    5370:	9a02      	ldr	r2, [sp, #8]
    5372:	2401      	movs	r4, #1
    5374:	401a      	ands	r2, r3
    5376:	2300      	movs	r3, #0
    5378:	4694      	mov	ip, r2
    537a:	4698      	mov	r8, r3
    537c:	2200      	movs	r2, #0
    537e:	e5f7      	b.n	4f70 <__aeabi_ddiv+0x19c>
    5380:	2102      	movs	r1, #2
    5382:	4249      	negs	r1, r1
    5384:	468c      	mov	ip, r1
    5386:	9d03      	ldr	r5, [sp, #12]
    5388:	44e3      	add	fp, ip
    538a:	46ac      	mov	ip, r5
    538c:	44e2      	add	sl, ip
    538e:	45aa      	cmp	sl, r5
    5390:	41ad      	sbcs	r5, r5
    5392:	426d      	negs	r5, r5
    5394:	4445      	add	r5, r8
    5396:	18ed      	adds	r5, r5, r3
    5398:	1a2d      	subs	r5, r5, r0
    539a:	e696      	b.n	50ca <__aeabi_ddiv+0x2f6>
    539c:	1e8a      	subs	r2, r1, #2
    539e:	9903      	ldr	r1, [sp, #12]
    53a0:	004d      	lsls	r5, r1, #1
    53a2:	428d      	cmp	r5, r1
    53a4:	4189      	sbcs	r1, r1
    53a6:	4249      	negs	r1, r1
    53a8:	4441      	add	r1, r8
    53aa:	1876      	adds	r6, r6, r1
    53ac:	9503      	str	r5, [sp, #12]
    53ae:	e78f      	b.n	52d0 <__aeabi_ddiv+0x4fc>
    53b0:	201f      	movs	r0, #31
    53b2:	4240      	negs	r0, r0
    53b4:	1ac3      	subs	r3, r0, r3
    53b6:	4658      	mov	r0, fp
    53b8:	40d8      	lsrs	r0, r3
    53ba:	0003      	movs	r3, r0
    53bc:	2a20      	cmp	r2, #32
    53be:	d028      	beq.n	5412 <__aeabi_ddiv+0x63e>
    53c0:	2040      	movs	r0, #64	; 0x40
    53c2:	465d      	mov	r5, fp
    53c4:	1a82      	subs	r2, r0, r2
    53c6:	4095      	lsls	r5, r2
    53c8:	4329      	orrs	r1, r5
    53ca:	1e4a      	subs	r2, r1, #1
    53cc:	4191      	sbcs	r1, r2
    53ce:	4319      	orrs	r1, r3
    53d0:	2307      	movs	r3, #7
    53d2:	2200      	movs	r2, #0
    53d4:	400b      	ands	r3, r1
    53d6:	d009      	beq.n	53ec <__aeabi_ddiv+0x618>
    53d8:	230f      	movs	r3, #15
    53da:	2200      	movs	r2, #0
    53dc:	400b      	ands	r3, r1
    53de:	0008      	movs	r0, r1
    53e0:	2b04      	cmp	r3, #4
    53e2:	d1bd      	bne.n	5360 <__aeabi_ddiv+0x58c>
    53e4:	0001      	movs	r1, r0
    53e6:	0753      	lsls	r3, r2, #29
    53e8:	0252      	lsls	r2, r2, #9
    53ea:	0b12      	lsrs	r2, r2, #12
    53ec:	08c9      	lsrs	r1, r1, #3
    53ee:	4319      	orrs	r1, r3
    53f0:	2301      	movs	r3, #1
    53f2:	4688      	mov	r8, r1
    53f4:	9902      	ldr	r1, [sp, #8]
    53f6:	2400      	movs	r4, #0
    53f8:	4019      	ands	r1, r3
    53fa:	468c      	mov	ip, r1
    53fc:	e5b8      	b.n	4f70 <__aeabi_ddiv+0x19c>
    53fe:	4552      	cmp	r2, sl
    5400:	d8be      	bhi.n	5380 <__aeabi_ddiv+0x5ac>
    5402:	468b      	mov	fp, r1
    5404:	2500      	movs	r5, #0
    5406:	e660      	b.n	50ca <__aeabi_ddiv+0x2f6>
    5408:	9d03      	ldr	r5, [sp, #12]
    540a:	429d      	cmp	r5, r3
    540c:	d3c6      	bcc.n	539c <__aeabi_ddiv+0x5c8>
    540e:	0011      	movs	r1, r2
    5410:	e762      	b.n	52d8 <__aeabi_ddiv+0x504>
    5412:	2500      	movs	r5, #0
    5414:	e7d8      	b.n	53c8 <__aeabi_ddiv+0x5f4>
    5416:	2280      	movs	r2, #128	; 0x80
    5418:	465b      	mov	r3, fp
    541a:	0312      	lsls	r2, r2, #12
    541c:	431a      	orrs	r2, r3
    541e:	9b01      	ldr	r3, [sp, #4]
    5420:	0312      	lsls	r2, r2, #12
    5422:	0b12      	lsrs	r2, r2, #12
    5424:	469c      	mov	ip, r3
    5426:	4688      	mov	r8, r1
    5428:	4c03      	ldr	r4, [pc, #12]	; (5438 <__aeabi_ddiv+0x664>)
    542a:	e5a1      	b.n	4f70 <__aeabi_ddiv+0x19c>
    542c:	000003ff 	.word	0x000003ff
    5430:	feffffff 	.word	0xfeffffff
    5434:	000007fe 	.word	0x000007fe
    5438:	000007ff 	.word	0x000007ff

0000543c <__eqdf2>:
    543c:	b5f0      	push	{r4, r5, r6, r7, lr}
    543e:	464f      	mov	r7, r9
    5440:	4646      	mov	r6, r8
    5442:	46d6      	mov	lr, sl
    5444:	005c      	lsls	r4, r3, #1
    5446:	b5c0      	push	{r6, r7, lr}
    5448:	031f      	lsls	r7, r3, #12
    544a:	0fdb      	lsrs	r3, r3, #31
    544c:	469a      	mov	sl, r3
    544e:	4b17      	ldr	r3, [pc, #92]	; (54ac <__eqdf2+0x70>)
    5450:	030e      	lsls	r6, r1, #12
    5452:	004d      	lsls	r5, r1, #1
    5454:	4684      	mov	ip, r0
    5456:	4680      	mov	r8, r0
    5458:	0b36      	lsrs	r6, r6, #12
    545a:	0d6d      	lsrs	r5, r5, #21
    545c:	0fc9      	lsrs	r1, r1, #31
    545e:	4691      	mov	r9, r2
    5460:	0b3f      	lsrs	r7, r7, #12
    5462:	0d64      	lsrs	r4, r4, #21
    5464:	2001      	movs	r0, #1
    5466:	429d      	cmp	r5, r3
    5468:	d008      	beq.n	547c <__eqdf2+0x40>
    546a:	429c      	cmp	r4, r3
    546c:	d001      	beq.n	5472 <__eqdf2+0x36>
    546e:	42a5      	cmp	r5, r4
    5470:	d00b      	beq.n	548a <__eqdf2+0x4e>
    5472:	bc1c      	pop	{r2, r3, r4}
    5474:	4690      	mov	r8, r2
    5476:	4699      	mov	r9, r3
    5478:	46a2      	mov	sl, r4
    547a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    547c:	4663      	mov	r3, ip
    547e:	4333      	orrs	r3, r6
    5480:	d1f7      	bne.n	5472 <__eqdf2+0x36>
    5482:	42ac      	cmp	r4, r5
    5484:	d1f5      	bne.n	5472 <__eqdf2+0x36>
    5486:	433a      	orrs	r2, r7
    5488:	d1f3      	bne.n	5472 <__eqdf2+0x36>
    548a:	2001      	movs	r0, #1
    548c:	42be      	cmp	r6, r7
    548e:	d1f0      	bne.n	5472 <__eqdf2+0x36>
    5490:	45c8      	cmp	r8, r9
    5492:	d1ee      	bne.n	5472 <__eqdf2+0x36>
    5494:	4551      	cmp	r1, sl
    5496:	d007      	beq.n	54a8 <__eqdf2+0x6c>
    5498:	2d00      	cmp	r5, #0
    549a:	d1ea      	bne.n	5472 <__eqdf2+0x36>
    549c:	4663      	mov	r3, ip
    549e:	431e      	orrs	r6, r3
    54a0:	0030      	movs	r0, r6
    54a2:	1e46      	subs	r6, r0, #1
    54a4:	41b0      	sbcs	r0, r6
    54a6:	e7e4      	b.n	5472 <__eqdf2+0x36>
    54a8:	2000      	movs	r0, #0
    54aa:	e7e2      	b.n	5472 <__eqdf2+0x36>
    54ac:	000007ff 	.word	0x000007ff

000054b0 <__gedf2>:
    54b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    54b2:	4645      	mov	r5, r8
    54b4:	46de      	mov	lr, fp
    54b6:	4657      	mov	r7, sl
    54b8:	464e      	mov	r6, r9
    54ba:	b5e0      	push	{r5, r6, r7, lr}
    54bc:	031f      	lsls	r7, r3, #12
    54be:	0b3d      	lsrs	r5, r7, #12
    54c0:	4f2c      	ldr	r7, [pc, #176]	; (5574 <__gedf2+0xc4>)
    54c2:	030e      	lsls	r6, r1, #12
    54c4:	004c      	lsls	r4, r1, #1
    54c6:	46ab      	mov	fp, r5
    54c8:	005d      	lsls	r5, r3, #1
    54ca:	4684      	mov	ip, r0
    54cc:	0b36      	lsrs	r6, r6, #12
    54ce:	0d64      	lsrs	r4, r4, #21
    54d0:	0fc9      	lsrs	r1, r1, #31
    54d2:	4690      	mov	r8, r2
    54d4:	0d6d      	lsrs	r5, r5, #21
    54d6:	0fdb      	lsrs	r3, r3, #31
    54d8:	42bc      	cmp	r4, r7
    54da:	d02a      	beq.n	5532 <__gedf2+0x82>
    54dc:	4f25      	ldr	r7, [pc, #148]	; (5574 <__gedf2+0xc4>)
    54de:	42bd      	cmp	r5, r7
    54e0:	d02d      	beq.n	553e <__gedf2+0x8e>
    54e2:	2c00      	cmp	r4, #0
    54e4:	d10f      	bne.n	5506 <__gedf2+0x56>
    54e6:	4330      	orrs	r0, r6
    54e8:	0007      	movs	r7, r0
    54ea:	4681      	mov	r9, r0
    54ec:	4278      	negs	r0, r7
    54ee:	4178      	adcs	r0, r7
    54f0:	b2c0      	uxtb	r0, r0
    54f2:	2d00      	cmp	r5, #0
    54f4:	d117      	bne.n	5526 <__gedf2+0x76>
    54f6:	465f      	mov	r7, fp
    54f8:	433a      	orrs	r2, r7
    54fa:	d114      	bne.n	5526 <__gedf2+0x76>
    54fc:	464b      	mov	r3, r9
    54fe:	2000      	movs	r0, #0
    5500:	2b00      	cmp	r3, #0
    5502:	d00a      	beq.n	551a <__gedf2+0x6a>
    5504:	e006      	b.n	5514 <__gedf2+0x64>
    5506:	2d00      	cmp	r5, #0
    5508:	d102      	bne.n	5510 <__gedf2+0x60>
    550a:	4658      	mov	r0, fp
    550c:	4302      	orrs	r2, r0
    550e:	d001      	beq.n	5514 <__gedf2+0x64>
    5510:	4299      	cmp	r1, r3
    5512:	d018      	beq.n	5546 <__gedf2+0x96>
    5514:	4248      	negs	r0, r1
    5516:	2101      	movs	r1, #1
    5518:	4308      	orrs	r0, r1
    551a:	bc3c      	pop	{r2, r3, r4, r5}
    551c:	4690      	mov	r8, r2
    551e:	4699      	mov	r9, r3
    5520:	46a2      	mov	sl, r4
    5522:	46ab      	mov	fp, r5
    5524:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5526:	2800      	cmp	r0, #0
    5528:	d0f2      	beq.n	5510 <__gedf2+0x60>
    552a:	2001      	movs	r0, #1
    552c:	3b01      	subs	r3, #1
    552e:	4318      	orrs	r0, r3
    5530:	e7f3      	b.n	551a <__gedf2+0x6a>
    5532:	0037      	movs	r7, r6
    5534:	4307      	orrs	r7, r0
    5536:	d0d1      	beq.n	54dc <__gedf2+0x2c>
    5538:	2002      	movs	r0, #2
    553a:	4240      	negs	r0, r0
    553c:	e7ed      	b.n	551a <__gedf2+0x6a>
    553e:	465f      	mov	r7, fp
    5540:	4317      	orrs	r7, r2
    5542:	d0ce      	beq.n	54e2 <__gedf2+0x32>
    5544:	e7f8      	b.n	5538 <__gedf2+0x88>
    5546:	42ac      	cmp	r4, r5
    5548:	dce4      	bgt.n	5514 <__gedf2+0x64>
    554a:	da03      	bge.n	5554 <__gedf2+0xa4>
    554c:	1e48      	subs	r0, r1, #1
    554e:	2101      	movs	r1, #1
    5550:	4308      	orrs	r0, r1
    5552:	e7e2      	b.n	551a <__gedf2+0x6a>
    5554:	455e      	cmp	r6, fp
    5556:	d8dd      	bhi.n	5514 <__gedf2+0x64>
    5558:	d006      	beq.n	5568 <__gedf2+0xb8>
    555a:	2000      	movs	r0, #0
    555c:	455e      	cmp	r6, fp
    555e:	d2dc      	bcs.n	551a <__gedf2+0x6a>
    5560:	2301      	movs	r3, #1
    5562:	1e48      	subs	r0, r1, #1
    5564:	4318      	orrs	r0, r3
    5566:	e7d8      	b.n	551a <__gedf2+0x6a>
    5568:	45c4      	cmp	ip, r8
    556a:	d8d3      	bhi.n	5514 <__gedf2+0x64>
    556c:	2000      	movs	r0, #0
    556e:	45c4      	cmp	ip, r8
    5570:	d3f6      	bcc.n	5560 <__gedf2+0xb0>
    5572:	e7d2      	b.n	551a <__gedf2+0x6a>
    5574:	000007ff 	.word	0x000007ff

00005578 <__ledf2>:
    5578:	b5f0      	push	{r4, r5, r6, r7, lr}
    557a:	464e      	mov	r6, r9
    557c:	4645      	mov	r5, r8
    557e:	46de      	mov	lr, fp
    5580:	4657      	mov	r7, sl
    5582:	005c      	lsls	r4, r3, #1
    5584:	b5e0      	push	{r5, r6, r7, lr}
    5586:	031f      	lsls	r7, r3, #12
    5588:	0fdb      	lsrs	r3, r3, #31
    558a:	4699      	mov	r9, r3
    558c:	4b2a      	ldr	r3, [pc, #168]	; (5638 <__ledf2+0xc0>)
    558e:	030e      	lsls	r6, r1, #12
    5590:	004d      	lsls	r5, r1, #1
    5592:	0fc9      	lsrs	r1, r1, #31
    5594:	4684      	mov	ip, r0
    5596:	0b36      	lsrs	r6, r6, #12
    5598:	0d6d      	lsrs	r5, r5, #21
    559a:	468b      	mov	fp, r1
    559c:	4690      	mov	r8, r2
    559e:	0b3f      	lsrs	r7, r7, #12
    55a0:	0d64      	lsrs	r4, r4, #21
    55a2:	429d      	cmp	r5, r3
    55a4:	d020      	beq.n	55e8 <__ledf2+0x70>
    55a6:	4b24      	ldr	r3, [pc, #144]	; (5638 <__ledf2+0xc0>)
    55a8:	429c      	cmp	r4, r3
    55aa:	d022      	beq.n	55f2 <__ledf2+0x7a>
    55ac:	2d00      	cmp	r5, #0
    55ae:	d112      	bne.n	55d6 <__ledf2+0x5e>
    55b0:	4330      	orrs	r0, r6
    55b2:	4243      	negs	r3, r0
    55b4:	4143      	adcs	r3, r0
    55b6:	b2db      	uxtb	r3, r3
    55b8:	2c00      	cmp	r4, #0
    55ba:	d01f      	beq.n	55fc <__ledf2+0x84>
    55bc:	2b00      	cmp	r3, #0
    55be:	d00c      	beq.n	55da <__ledf2+0x62>
    55c0:	464b      	mov	r3, r9
    55c2:	2001      	movs	r0, #1
    55c4:	3b01      	subs	r3, #1
    55c6:	4303      	orrs	r3, r0
    55c8:	0018      	movs	r0, r3
    55ca:	bc3c      	pop	{r2, r3, r4, r5}
    55cc:	4690      	mov	r8, r2
    55ce:	4699      	mov	r9, r3
    55d0:	46a2      	mov	sl, r4
    55d2:	46ab      	mov	fp, r5
    55d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    55d6:	2c00      	cmp	r4, #0
    55d8:	d016      	beq.n	5608 <__ledf2+0x90>
    55da:	45cb      	cmp	fp, r9
    55dc:	d017      	beq.n	560e <__ledf2+0x96>
    55de:	465b      	mov	r3, fp
    55e0:	4259      	negs	r1, r3
    55e2:	2301      	movs	r3, #1
    55e4:	430b      	orrs	r3, r1
    55e6:	e7ef      	b.n	55c8 <__ledf2+0x50>
    55e8:	0031      	movs	r1, r6
    55ea:	2302      	movs	r3, #2
    55ec:	4301      	orrs	r1, r0
    55ee:	d1eb      	bne.n	55c8 <__ledf2+0x50>
    55f0:	e7d9      	b.n	55a6 <__ledf2+0x2e>
    55f2:	0039      	movs	r1, r7
    55f4:	2302      	movs	r3, #2
    55f6:	4311      	orrs	r1, r2
    55f8:	d1e6      	bne.n	55c8 <__ledf2+0x50>
    55fa:	e7d7      	b.n	55ac <__ledf2+0x34>
    55fc:	433a      	orrs	r2, r7
    55fe:	d1dd      	bne.n	55bc <__ledf2+0x44>
    5600:	2300      	movs	r3, #0
    5602:	2800      	cmp	r0, #0
    5604:	d0e0      	beq.n	55c8 <__ledf2+0x50>
    5606:	e7ea      	b.n	55de <__ledf2+0x66>
    5608:	433a      	orrs	r2, r7
    560a:	d1e6      	bne.n	55da <__ledf2+0x62>
    560c:	e7e7      	b.n	55de <__ledf2+0x66>
    560e:	42a5      	cmp	r5, r4
    5610:	dce5      	bgt.n	55de <__ledf2+0x66>
    5612:	db05      	blt.n	5620 <__ledf2+0xa8>
    5614:	42be      	cmp	r6, r7
    5616:	d8e2      	bhi.n	55de <__ledf2+0x66>
    5618:	d007      	beq.n	562a <__ledf2+0xb2>
    561a:	2300      	movs	r3, #0
    561c:	42be      	cmp	r6, r7
    561e:	d2d3      	bcs.n	55c8 <__ledf2+0x50>
    5620:	4659      	mov	r1, fp
    5622:	2301      	movs	r3, #1
    5624:	3901      	subs	r1, #1
    5626:	430b      	orrs	r3, r1
    5628:	e7ce      	b.n	55c8 <__ledf2+0x50>
    562a:	45c4      	cmp	ip, r8
    562c:	d8d7      	bhi.n	55de <__ledf2+0x66>
    562e:	2300      	movs	r3, #0
    5630:	45c4      	cmp	ip, r8
    5632:	d3f5      	bcc.n	5620 <__ledf2+0xa8>
    5634:	e7c8      	b.n	55c8 <__ledf2+0x50>
    5636:	46c0      	nop			; (mov r8, r8)
    5638:	000007ff 	.word	0x000007ff

0000563c <__aeabi_dmul>:
    563c:	b5f0      	push	{r4, r5, r6, r7, lr}
    563e:	4657      	mov	r7, sl
    5640:	4645      	mov	r5, r8
    5642:	46de      	mov	lr, fp
    5644:	464e      	mov	r6, r9
    5646:	b5e0      	push	{r5, r6, r7, lr}
    5648:	030c      	lsls	r4, r1, #12
    564a:	4698      	mov	r8, r3
    564c:	004e      	lsls	r6, r1, #1
    564e:	0b23      	lsrs	r3, r4, #12
    5650:	b087      	sub	sp, #28
    5652:	0007      	movs	r7, r0
    5654:	4692      	mov	sl, r2
    5656:	469b      	mov	fp, r3
    5658:	0d76      	lsrs	r6, r6, #21
    565a:	0fcd      	lsrs	r5, r1, #31
    565c:	2e00      	cmp	r6, #0
    565e:	d06b      	beq.n	5738 <__aeabi_dmul+0xfc>
    5660:	4b6d      	ldr	r3, [pc, #436]	; (5818 <__aeabi_dmul+0x1dc>)
    5662:	429e      	cmp	r6, r3
    5664:	d035      	beq.n	56d2 <__aeabi_dmul+0x96>
    5666:	2480      	movs	r4, #128	; 0x80
    5668:	465b      	mov	r3, fp
    566a:	0f42      	lsrs	r2, r0, #29
    566c:	0424      	lsls	r4, r4, #16
    566e:	00db      	lsls	r3, r3, #3
    5670:	4314      	orrs	r4, r2
    5672:	431c      	orrs	r4, r3
    5674:	00c3      	lsls	r3, r0, #3
    5676:	4699      	mov	r9, r3
    5678:	4b68      	ldr	r3, [pc, #416]	; (581c <__aeabi_dmul+0x1e0>)
    567a:	46a3      	mov	fp, r4
    567c:	469c      	mov	ip, r3
    567e:	2300      	movs	r3, #0
    5680:	2700      	movs	r7, #0
    5682:	4466      	add	r6, ip
    5684:	9302      	str	r3, [sp, #8]
    5686:	4643      	mov	r3, r8
    5688:	031c      	lsls	r4, r3, #12
    568a:	005a      	lsls	r2, r3, #1
    568c:	0fdb      	lsrs	r3, r3, #31
    568e:	4650      	mov	r0, sl
    5690:	0b24      	lsrs	r4, r4, #12
    5692:	0d52      	lsrs	r2, r2, #21
    5694:	4698      	mov	r8, r3
    5696:	d100      	bne.n	569a <__aeabi_dmul+0x5e>
    5698:	e076      	b.n	5788 <__aeabi_dmul+0x14c>
    569a:	4b5f      	ldr	r3, [pc, #380]	; (5818 <__aeabi_dmul+0x1dc>)
    569c:	429a      	cmp	r2, r3
    569e:	d06d      	beq.n	577c <__aeabi_dmul+0x140>
    56a0:	2380      	movs	r3, #128	; 0x80
    56a2:	0f41      	lsrs	r1, r0, #29
    56a4:	041b      	lsls	r3, r3, #16
    56a6:	430b      	orrs	r3, r1
    56a8:	495c      	ldr	r1, [pc, #368]	; (581c <__aeabi_dmul+0x1e0>)
    56aa:	00e4      	lsls	r4, r4, #3
    56ac:	468c      	mov	ip, r1
    56ae:	431c      	orrs	r4, r3
    56b0:	00c3      	lsls	r3, r0, #3
    56b2:	2000      	movs	r0, #0
    56b4:	4462      	add	r2, ip
    56b6:	4641      	mov	r1, r8
    56b8:	18b6      	adds	r6, r6, r2
    56ba:	4069      	eors	r1, r5
    56bc:	1c72      	adds	r2, r6, #1
    56be:	9101      	str	r1, [sp, #4]
    56c0:	4694      	mov	ip, r2
    56c2:	4307      	orrs	r7, r0
    56c4:	2f0f      	cmp	r7, #15
    56c6:	d900      	bls.n	56ca <__aeabi_dmul+0x8e>
    56c8:	e0b0      	b.n	582c <__aeabi_dmul+0x1f0>
    56ca:	4a55      	ldr	r2, [pc, #340]	; (5820 <__aeabi_dmul+0x1e4>)
    56cc:	00bf      	lsls	r7, r7, #2
    56ce:	59d2      	ldr	r2, [r2, r7]
    56d0:	4697      	mov	pc, r2
    56d2:	465b      	mov	r3, fp
    56d4:	4303      	orrs	r3, r0
    56d6:	4699      	mov	r9, r3
    56d8:	d000      	beq.n	56dc <__aeabi_dmul+0xa0>
    56da:	e087      	b.n	57ec <__aeabi_dmul+0x1b0>
    56dc:	2300      	movs	r3, #0
    56de:	469b      	mov	fp, r3
    56e0:	3302      	adds	r3, #2
    56e2:	2708      	movs	r7, #8
    56e4:	9302      	str	r3, [sp, #8]
    56e6:	e7ce      	b.n	5686 <__aeabi_dmul+0x4a>
    56e8:	4642      	mov	r2, r8
    56ea:	9201      	str	r2, [sp, #4]
    56ec:	2802      	cmp	r0, #2
    56ee:	d067      	beq.n	57c0 <__aeabi_dmul+0x184>
    56f0:	2803      	cmp	r0, #3
    56f2:	d100      	bne.n	56f6 <__aeabi_dmul+0xba>
    56f4:	e20e      	b.n	5b14 <__aeabi_dmul+0x4d8>
    56f6:	2801      	cmp	r0, #1
    56f8:	d000      	beq.n	56fc <__aeabi_dmul+0xc0>
    56fa:	e162      	b.n	59c2 <__aeabi_dmul+0x386>
    56fc:	2300      	movs	r3, #0
    56fe:	2400      	movs	r4, #0
    5700:	2200      	movs	r2, #0
    5702:	4699      	mov	r9, r3
    5704:	9901      	ldr	r1, [sp, #4]
    5706:	4001      	ands	r1, r0
    5708:	b2cd      	uxtb	r5, r1
    570a:	2100      	movs	r1, #0
    570c:	0312      	lsls	r2, r2, #12
    570e:	0d0b      	lsrs	r3, r1, #20
    5710:	0b12      	lsrs	r2, r2, #12
    5712:	051b      	lsls	r3, r3, #20
    5714:	4313      	orrs	r3, r2
    5716:	4a43      	ldr	r2, [pc, #268]	; (5824 <__aeabi_dmul+0x1e8>)
    5718:	0524      	lsls	r4, r4, #20
    571a:	4013      	ands	r3, r2
    571c:	431c      	orrs	r4, r3
    571e:	0064      	lsls	r4, r4, #1
    5720:	07ed      	lsls	r5, r5, #31
    5722:	0864      	lsrs	r4, r4, #1
    5724:	432c      	orrs	r4, r5
    5726:	4648      	mov	r0, r9
    5728:	0021      	movs	r1, r4
    572a:	b007      	add	sp, #28
    572c:	bc3c      	pop	{r2, r3, r4, r5}
    572e:	4690      	mov	r8, r2
    5730:	4699      	mov	r9, r3
    5732:	46a2      	mov	sl, r4
    5734:	46ab      	mov	fp, r5
    5736:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5738:	4303      	orrs	r3, r0
    573a:	4699      	mov	r9, r3
    573c:	d04f      	beq.n	57de <__aeabi_dmul+0x1a2>
    573e:	465b      	mov	r3, fp
    5740:	2b00      	cmp	r3, #0
    5742:	d100      	bne.n	5746 <__aeabi_dmul+0x10a>
    5744:	e189      	b.n	5a5a <__aeabi_dmul+0x41e>
    5746:	4658      	mov	r0, fp
    5748:	f000 feb8 	bl	64bc <__clzsi2>
    574c:	0003      	movs	r3, r0
    574e:	3b0b      	subs	r3, #11
    5750:	2b1c      	cmp	r3, #28
    5752:	dd00      	ble.n	5756 <__aeabi_dmul+0x11a>
    5754:	e17a      	b.n	5a4c <__aeabi_dmul+0x410>
    5756:	221d      	movs	r2, #29
    5758:	1ad3      	subs	r3, r2, r3
    575a:	003a      	movs	r2, r7
    575c:	0001      	movs	r1, r0
    575e:	465c      	mov	r4, fp
    5760:	40da      	lsrs	r2, r3
    5762:	3908      	subs	r1, #8
    5764:	408c      	lsls	r4, r1
    5766:	0013      	movs	r3, r2
    5768:	408f      	lsls	r7, r1
    576a:	4323      	orrs	r3, r4
    576c:	469b      	mov	fp, r3
    576e:	46b9      	mov	r9, r7
    5770:	2300      	movs	r3, #0
    5772:	4e2d      	ldr	r6, [pc, #180]	; (5828 <__aeabi_dmul+0x1ec>)
    5774:	2700      	movs	r7, #0
    5776:	1a36      	subs	r6, r6, r0
    5778:	9302      	str	r3, [sp, #8]
    577a:	e784      	b.n	5686 <__aeabi_dmul+0x4a>
    577c:	4653      	mov	r3, sl
    577e:	4323      	orrs	r3, r4
    5780:	d12a      	bne.n	57d8 <__aeabi_dmul+0x19c>
    5782:	2400      	movs	r4, #0
    5784:	2002      	movs	r0, #2
    5786:	e796      	b.n	56b6 <__aeabi_dmul+0x7a>
    5788:	4653      	mov	r3, sl
    578a:	4323      	orrs	r3, r4
    578c:	d020      	beq.n	57d0 <__aeabi_dmul+0x194>
    578e:	2c00      	cmp	r4, #0
    5790:	d100      	bne.n	5794 <__aeabi_dmul+0x158>
    5792:	e157      	b.n	5a44 <__aeabi_dmul+0x408>
    5794:	0020      	movs	r0, r4
    5796:	f000 fe91 	bl	64bc <__clzsi2>
    579a:	0003      	movs	r3, r0
    579c:	3b0b      	subs	r3, #11
    579e:	2b1c      	cmp	r3, #28
    57a0:	dd00      	ble.n	57a4 <__aeabi_dmul+0x168>
    57a2:	e149      	b.n	5a38 <__aeabi_dmul+0x3fc>
    57a4:	211d      	movs	r1, #29
    57a6:	1acb      	subs	r3, r1, r3
    57a8:	4651      	mov	r1, sl
    57aa:	0002      	movs	r2, r0
    57ac:	40d9      	lsrs	r1, r3
    57ae:	4653      	mov	r3, sl
    57b0:	3a08      	subs	r2, #8
    57b2:	4094      	lsls	r4, r2
    57b4:	4093      	lsls	r3, r2
    57b6:	430c      	orrs	r4, r1
    57b8:	4a1b      	ldr	r2, [pc, #108]	; (5828 <__aeabi_dmul+0x1ec>)
    57ba:	1a12      	subs	r2, r2, r0
    57bc:	2000      	movs	r0, #0
    57be:	e77a      	b.n	56b6 <__aeabi_dmul+0x7a>
    57c0:	2501      	movs	r5, #1
    57c2:	9b01      	ldr	r3, [sp, #4]
    57c4:	4c14      	ldr	r4, [pc, #80]	; (5818 <__aeabi_dmul+0x1dc>)
    57c6:	401d      	ands	r5, r3
    57c8:	2300      	movs	r3, #0
    57ca:	2200      	movs	r2, #0
    57cc:	4699      	mov	r9, r3
    57ce:	e79c      	b.n	570a <__aeabi_dmul+0xce>
    57d0:	2400      	movs	r4, #0
    57d2:	2200      	movs	r2, #0
    57d4:	2001      	movs	r0, #1
    57d6:	e76e      	b.n	56b6 <__aeabi_dmul+0x7a>
    57d8:	4653      	mov	r3, sl
    57da:	2003      	movs	r0, #3
    57dc:	e76b      	b.n	56b6 <__aeabi_dmul+0x7a>
    57de:	2300      	movs	r3, #0
    57e0:	469b      	mov	fp, r3
    57e2:	3301      	adds	r3, #1
    57e4:	2704      	movs	r7, #4
    57e6:	2600      	movs	r6, #0
    57e8:	9302      	str	r3, [sp, #8]
    57ea:	e74c      	b.n	5686 <__aeabi_dmul+0x4a>
    57ec:	2303      	movs	r3, #3
    57ee:	4681      	mov	r9, r0
    57f0:	270c      	movs	r7, #12
    57f2:	9302      	str	r3, [sp, #8]
    57f4:	e747      	b.n	5686 <__aeabi_dmul+0x4a>
    57f6:	2280      	movs	r2, #128	; 0x80
    57f8:	2300      	movs	r3, #0
    57fa:	2500      	movs	r5, #0
    57fc:	0312      	lsls	r2, r2, #12
    57fe:	4699      	mov	r9, r3
    5800:	4c05      	ldr	r4, [pc, #20]	; (5818 <__aeabi_dmul+0x1dc>)
    5802:	e782      	b.n	570a <__aeabi_dmul+0xce>
    5804:	465c      	mov	r4, fp
    5806:	464b      	mov	r3, r9
    5808:	9802      	ldr	r0, [sp, #8]
    580a:	e76f      	b.n	56ec <__aeabi_dmul+0xb0>
    580c:	465c      	mov	r4, fp
    580e:	464b      	mov	r3, r9
    5810:	9501      	str	r5, [sp, #4]
    5812:	9802      	ldr	r0, [sp, #8]
    5814:	e76a      	b.n	56ec <__aeabi_dmul+0xb0>
    5816:	46c0      	nop			; (mov r8, r8)
    5818:	000007ff 	.word	0x000007ff
    581c:	fffffc01 	.word	0xfffffc01
    5820:	00006890 	.word	0x00006890
    5824:	800fffff 	.word	0x800fffff
    5828:	fffffc0d 	.word	0xfffffc0d
    582c:	464a      	mov	r2, r9
    582e:	4649      	mov	r1, r9
    5830:	0c17      	lsrs	r7, r2, #16
    5832:	0c1a      	lsrs	r2, r3, #16
    5834:	041b      	lsls	r3, r3, #16
    5836:	0c1b      	lsrs	r3, r3, #16
    5838:	0408      	lsls	r0, r1, #16
    583a:	0019      	movs	r1, r3
    583c:	0c00      	lsrs	r0, r0, #16
    583e:	4341      	muls	r1, r0
    5840:	0015      	movs	r5, r2
    5842:	4688      	mov	r8, r1
    5844:	0019      	movs	r1, r3
    5846:	437d      	muls	r5, r7
    5848:	4379      	muls	r1, r7
    584a:	9503      	str	r5, [sp, #12]
    584c:	4689      	mov	r9, r1
    584e:	0029      	movs	r1, r5
    5850:	0015      	movs	r5, r2
    5852:	4345      	muls	r5, r0
    5854:	444d      	add	r5, r9
    5856:	9502      	str	r5, [sp, #8]
    5858:	4645      	mov	r5, r8
    585a:	0c2d      	lsrs	r5, r5, #16
    585c:	46aa      	mov	sl, r5
    585e:	9d02      	ldr	r5, [sp, #8]
    5860:	4455      	add	r5, sl
    5862:	45a9      	cmp	r9, r5
    5864:	d906      	bls.n	5874 <__aeabi_dmul+0x238>
    5866:	468a      	mov	sl, r1
    5868:	2180      	movs	r1, #128	; 0x80
    586a:	0249      	lsls	r1, r1, #9
    586c:	4689      	mov	r9, r1
    586e:	44ca      	add	sl, r9
    5870:	4651      	mov	r1, sl
    5872:	9103      	str	r1, [sp, #12]
    5874:	0c29      	lsrs	r1, r5, #16
    5876:	9104      	str	r1, [sp, #16]
    5878:	4641      	mov	r1, r8
    587a:	0409      	lsls	r1, r1, #16
    587c:	042d      	lsls	r5, r5, #16
    587e:	0c09      	lsrs	r1, r1, #16
    5880:	4688      	mov	r8, r1
    5882:	0029      	movs	r1, r5
    5884:	0c25      	lsrs	r5, r4, #16
    5886:	0424      	lsls	r4, r4, #16
    5888:	4441      	add	r1, r8
    588a:	0c24      	lsrs	r4, r4, #16
    588c:	9105      	str	r1, [sp, #20]
    588e:	0021      	movs	r1, r4
    5890:	4341      	muls	r1, r0
    5892:	4688      	mov	r8, r1
    5894:	0021      	movs	r1, r4
    5896:	4379      	muls	r1, r7
    5898:	468a      	mov	sl, r1
    589a:	4368      	muls	r0, r5
    589c:	4641      	mov	r1, r8
    589e:	4450      	add	r0, sl
    58a0:	4681      	mov	r9, r0
    58a2:	0c08      	lsrs	r0, r1, #16
    58a4:	4448      	add	r0, r9
    58a6:	436f      	muls	r7, r5
    58a8:	4582      	cmp	sl, r0
    58aa:	d903      	bls.n	58b4 <__aeabi_dmul+0x278>
    58ac:	2180      	movs	r1, #128	; 0x80
    58ae:	0249      	lsls	r1, r1, #9
    58b0:	4689      	mov	r9, r1
    58b2:	444f      	add	r7, r9
    58b4:	0c01      	lsrs	r1, r0, #16
    58b6:	4689      	mov	r9, r1
    58b8:	0039      	movs	r1, r7
    58ba:	4449      	add	r1, r9
    58bc:	9102      	str	r1, [sp, #8]
    58be:	4641      	mov	r1, r8
    58c0:	040f      	lsls	r7, r1, #16
    58c2:	9904      	ldr	r1, [sp, #16]
    58c4:	0c3f      	lsrs	r7, r7, #16
    58c6:	4688      	mov	r8, r1
    58c8:	0400      	lsls	r0, r0, #16
    58ca:	19c0      	adds	r0, r0, r7
    58cc:	4480      	add	r8, r0
    58ce:	4641      	mov	r1, r8
    58d0:	9104      	str	r1, [sp, #16]
    58d2:	4659      	mov	r1, fp
    58d4:	0c0f      	lsrs	r7, r1, #16
    58d6:	0409      	lsls	r1, r1, #16
    58d8:	0c09      	lsrs	r1, r1, #16
    58da:	4688      	mov	r8, r1
    58dc:	4359      	muls	r1, r3
    58de:	468a      	mov	sl, r1
    58e0:	0039      	movs	r1, r7
    58e2:	4351      	muls	r1, r2
    58e4:	4689      	mov	r9, r1
    58e6:	4641      	mov	r1, r8
    58e8:	434a      	muls	r2, r1
    58ea:	4651      	mov	r1, sl
    58ec:	0c09      	lsrs	r1, r1, #16
    58ee:	468b      	mov	fp, r1
    58f0:	437b      	muls	r3, r7
    58f2:	18d2      	adds	r2, r2, r3
    58f4:	445a      	add	r2, fp
    58f6:	4293      	cmp	r3, r2
    58f8:	d903      	bls.n	5902 <__aeabi_dmul+0x2c6>
    58fa:	2380      	movs	r3, #128	; 0x80
    58fc:	025b      	lsls	r3, r3, #9
    58fe:	469b      	mov	fp, r3
    5900:	44d9      	add	r9, fp
    5902:	4651      	mov	r1, sl
    5904:	0409      	lsls	r1, r1, #16
    5906:	0c09      	lsrs	r1, r1, #16
    5908:	468a      	mov	sl, r1
    590a:	4641      	mov	r1, r8
    590c:	4361      	muls	r1, r4
    590e:	437c      	muls	r4, r7
    5910:	0c13      	lsrs	r3, r2, #16
    5912:	0412      	lsls	r2, r2, #16
    5914:	444b      	add	r3, r9
    5916:	4452      	add	r2, sl
    5918:	46a1      	mov	r9, r4
    591a:	468a      	mov	sl, r1
    591c:	003c      	movs	r4, r7
    591e:	4641      	mov	r1, r8
    5920:	436c      	muls	r4, r5
    5922:	434d      	muls	r5, r1
    5924:	4651      	mov	r1, sl
    5926:	444d      	add	r5, r9
    5928:	0c0f      	lsrs	r7, r1, #16
    592a:	197d      	adds	r5, r7, r5
    592c:	45a9      	cmp	r9, r5
    592e:	d903      	bls.n	5938 <__aeabi_dmul+0x2fc>
    5930:	2180      	movs	r1, #128	; 0x80
    5932:	0249      	lsls	r1, r1, #9
    5934:	4688      	mov	r8, r1
    5936:	4444      	add	r4, r8
    5938:	9f04      	ldr	r7, [sp, #16]
    593a:	9903      	ldr	r1, [sp, #12]
    593c:	46b8      	mov	r8, r7
    593e:	4441      	add	r1, r8
    5940:	468b      	mov	fp, r1
    5942:	4583      	cmp	fp, r0
    5944:	4180      	sbcs	r0, r0
    5946:	4241      	negs	r1, r0
    5948:	4688      	mov	r8, r1
    594a:	4651      	mov	r1, sl
    594c:	0408      	lsls	r0, r1, #16
    594e:	042f      	lsls	r7, r5, #16
    5950:	0c00      	lsrs	r0, r0, #16
    5952:	183f      	adds	r7, r7, r0
    5954:	4658      	mov	r0, fp
    5956:	9902      	ldr	r1, [sp, #8]
    5958:	1810      	adds	r0, r2, r0
    595a:	4689      	mov	r9, r1
    595c:	4290      	cmp	r0, r2
    595e:	4192      	sbcs	r2, r2
    5960:	444f      	add	r7, r9
    5962:	46ba      	mov	sl, r7
    5964:	4252      	negs	r2, r2
    5966:	4699      	mov	r9, r3
    5968:	4693      	mov	fp, r2
    596a:	44c2      	add	sl, r8
    596c:	44d1      	add	r9, sl
    596e:	44cb      	add	fp, r9
    5970:	428f      	cmp	r7, r1
    5972:	41bf      	sbcs	r7, r7
    5974:	45c2      	cmp	sl, r8
    5976:	4189      	sbcs	r1, r1
    5978:	4599      	cmp	r9, r3
    597a:	419b      	sbcs	r3, r3
    597c:	4593      	cmp	fp, r2
    597e:	4192      	sbcs	r2, r2
    5980:	427f      	negs	r7, r7
    5982:	4249      	negs	r1, r1
    5984:	0c2d      	lsrs	r5, r5, #16
    5986:	4252      	negs	r2, r2
    5988:	430f      	orrs	r7, r1
    598a:	425b      	negs	r3, r3
    598c:	4313      	orrs	r3, r2
    598e:	197f      	adds	r7, r7, r5
    5990:	18ff      	adds	r7, r7, r3
    5992:	465b      	mov	r3, fp
    5994:	193c      	adds	r4, r7, r4
    5996:	0ddb      	lsrs	r3, r3, #23
    5998:	9a05      	ldr	r2, [sp, #20]
    599a:	0264      	lsls	r4, r4, #9
    599c:	431c      	orrs	r4, r3
    599e:	0243      	lsls	r3, r0, #9
    59a0:	4313      	orrs	r3, r2
    59a2:	1e5d      	subs	r5, r3, #1
    59a4:	41ab      	sbcs	r3, r5
    59a6:	465a      	mov	r2, fp
    59a8:	0dc0      	lsrs	r0, r0, #23
    59aa:	4303      	orrs	r3, r0
    59ac:	0252      	lsls	r2, r2, #9
    59ae:	4313      	orrs	r3, r2
    59b0:	01e2      	lsls	r2, r4, #7
    59b2:	d556      	bpl.n	5a62 <__aeabi_dmul+0x426>
    59b4:	2001      	movs	r0, #1
    59b6:	085a      	lsrs	r2, r3, #1
    59b8:	4003      	ands	r3, r0
    59ba:	4313      	orrs	r3, r2
    59bc:	07e2      	lsls	r2, r4, #31
    59be:	4313      	orrs	r3, r2
    59c0:	0864      	lsrs	r4, r4, #1
    59c2:	485a      	ldr	r0, [pc, #360]	; (5b2c <__aeabi_dmul+0x4f0>)
    59c4:	4460      	add	r0, ip
    59c6:	2800      	cmp	r0, #0
    59c8:	dd4d      	ble.n	5a66 <__aeabi_dmul+0x42a>
    59ca:	075a      	lsls	r2, r3, #29
    59cc:	d009      	beq.n	59e2 <__aeabi_dmul+0x3a6>
    59ce:	220f      	movs	r2, #15
    59d0:	401a      	ands	r2, r3
    59d2:	2a04      	cmp	r2, #4
    59d4:	d005      	beq.n	59e2 <__aeabi_dmul+0x3a6>
    59d6:	1d1a      	adds	r2, r3, #4
    59d8:	429a      	cmp	r2, r3
    59da:	419b      	sbcs	r3, r3
    59dc:	425b      	negs	r3, r3
    59de:	18e4      	adds	r4, r4, r3
    59e0:	0013      	movs	r3, r2
    59e2:	01e2      	lsls	r2, r4, #7
    59e4:	d504      	bpl.n	59f0 <__aeabi_dmul+0x3b4>
    59e6:	2080      	movs	r0, #128	; 0x80
    59e8:	4a51      	ldr	r2, [pc, #324]	; (5b30 <__aeabi_dmul+0x4f4>)
    59ea:	00c0      	lsls	r0, r0, #3
    59ec:	4014      	ands	r4, r2
    59ee:	4460      	add	r0, ip
    59f0:	4a50      	ldr	r2, [pc, #320]	; (5b34 <__aeabi_dmul+0x4f8>)
    59f2:	4290      	cmp	r0, r2
    59f4:	dd00      	ble.n	59f8 <__aeabi_dmul+0x3bc>
    59f6:	e6e3      	b.n	57c0 <__aeabi_dmul+0x184>
    59f8:	2501      	movs	r5, #1
    59fa:	08db      	lsrs	r3, r3, #3
    59fc:	0762      	lsls	r2, r4, #29
    59fe:	431a      	orrs	r2, r3
    5a00:	0264      	lsls	r4, r4, #9
    5a02:	9b01      	ldr	r3, [sp, #4]
    5a04:	4691      	mov	r9, r2
    5a06:	0b22      	lsrs	r2, r4, #12
    5a08:	0544      	lsls	r4, r0, #21
    5a0a:	0d64      	lsrs	r4, r4, #21
    5a0c:	401d      	ands	r5, r3
    5a0e:	e67c      	b.n	570a <__aeabi_dmul+0xce>
    5a10:	2280      	movs	r2, #128	; 0x80
    5a12:	4659      	mov	r1, fp
    5a14:	0312      	lsls	r2, r2, #12
    5a16:	4211      	tst	r1, r2
    5a18:	d008      	beq.n	5a2c <__aeabi_dmul+0x3f0>
    5a1a:	4214      	tst	r4, r2
    5a1c:	d106      	bne.n	5a2c <__aeabi_dmul+0x3f0>
    5a1e:	4322      	orrs	r2, r4
    5a20:	0312      	lsls	r2, r2, #12
    5a22:	0b12      	lsrs	r2, r2, #12
    5a24:	4645      	mov	r5, r8
    5a26:	4699      	mov	r9, r3
    5a28:	4c43      	ldr	r4, [pc, #268]	; (5b38 <__aeabi_dmul+0x4fc>)
    5a2a:	e66e      	b.n	570a <__aeabi_dmul+0xce>
    5a2c:	465b      	mov	r3, fp
    5a2e:	431a      	orrs	r2, r3
    5a30:	0312      	lsls	r2, r2, #12
    5a32:	0b12      	lsrs	r2, r2, #12
    5a34:	4c40      	ldr	r4, [pc, #256]	; (5b38 <__aeabi_dmul+0x4fc>)
    5a36:	e668      	b.n	570a <__aeabi_dmul+0xce>
    5a38:	0003      	movs	r3, r0
    5a3a:	4654      	mov	r4, sl
    5a3c:	3b28      	subs	r3, #40	; 0x28
    5a3e:	409c      	lsls	r4, r3
    5a40:	2300      	movs	r3, #0
    5a42:	e6b9      	b.n	57b8 <__aeabi_dmul+0x17c>
    5a44:	f000 fd3a 	bl	64bc <__clzsi2>
    5a48:	3020      	adds	r0, #32
    5a4a:	e6a6      	b.n	579a <__aeabi_dmul+0x15e>
    5a4c:	0003      	movs	r3, r0
    5a4e:	3b28      	subs	r3, #40	; 0x28
    5a50:	409f      	lsls	r7, r3
    5a52:	2300      	movs	r3, #0
    5a54:	46bb      	mov	fp, r7
    5a56:	4699      	mov	r9, r3
    5a58:	e68a      	b.n	5770 <__aeabi_dmul+0x134>
    5a5a:	f000 fd2f 	bl	64bc <__clzsi2>
    5a5e:	3020      	adds	r0, #32
    5a60:	e674      	b.n	574c <__aeabi_dmul+0x110>
    5a62:	46b4      	mov	ip, r6
    5a64:	e7ad      	b.n	59c2 <__aeabi_dmul+0x386>
    5a66:	2501      	movs	r5, #1
    5a68:	1a2a      	subs	r2, r5, r0
    5a6a:	2a38      	cmp	r2, #56	; 0x38
    5a6c:	dd06      	ble.n	5a7c <__aeabi_dmul+0x440>
    5a6e:	9b01      	ldr	r3, [sp, #4]
    5a70:	2400      	movs	r4, #0
    5a72:	401d      	ands	r5, r3
    5a74:	2300      	movs	r3, #0
    5a76:	2200      	movs	r2, #0
    5a78:	4699      	mov	r9, r3
    5a7a:	e646      	b.n	570a <__aeabi_dmul+0xce>
    5a7c:	2a1f      	cmp	r2, #31
    5a7e:	dc21      	bgt.n	5ac4 <__aeabi_dmul+0x488>
    5a80:	2520      	movs	r5, #32
    5a82:	0020      	movs	r0, r4
    5a84:	1aad      	subs	r5, r5, r2
    5a86:	001e      	movs	r6, r3
    5a88:	40ab      	lsls	r3, r5
    5a8a:	40a8      	lsls	r0, r5
    5a8c:	40d6      	lsrs	r6, r2
    5a8e:	1e5d      	subs	r5, r3, #1
    5a90:	41ab      	sbcs	r3, r5
    5a92:	4330      	orrs	r0, r6
    5a94:	4318      	orrs	r0, r3
    5a96:	40d4      	lsrs	r4, r2
    5a98:	0743      	lsls	r3, r0, #29
    5a9a:	d009      	beq.n	5ab0 <__aeabi_dmul+0x474>
    5a9c:	230f      	movs	r3, #15
    5a9e:	4003      	ands	r3, r0
    5aa0:	2b04      	cmp	r3, #4
    5aa2:	d005      	beq.n	5ab0 <__aeabi_dmul+0x474>
    5aa4:	0003      	movs	r3, r0
    5aa6:	1d18      	adds	r0, r3, #4
    5aa8:	4298      	cmp	r0, r3
    5aaa:	419b      	sbcs	r3, r3
    5aac:	425b      	negs	r3, r3
    5aae:	18e4      	adds	r4, r4, r3
    5ab0:	0223      	lsls	r3, r4, #8
    5ab2:	d521      	bpl.n	5af8 <__aeabi_dmul+0x4bc>
    5ab4:	2501      	movs	r5, #1
    5ab6:	9b01      	ldr	r3, [sp, #4]
    5ab8:	2401      	movs	r4, #1
    5aba:	401d      	ands	r5, r3
    5abc:	2300      	movs	r3, #0
    5abe:	2200      	movs	r2, #0
    5ac0:	4699      	mov	r9, r3
    5ac2:	e622      	b.n	570a <__aeabi_dmul+0xce>
    5ac4:	251f      	movs	r5, #31
    5ac6:	0021      	movs	r1, r4
    5ac8:	426d      	negs	r5, r5
    5aca:	1a28      	subs	r0, r5, r0
    5acc:	40c1      	lsrs	r1, r0
    5ace:	0008      	movs	r0, r1
    5ad0:	2a20      	cmp	r2, #32
    5ad2:	d01d      	beq.n	5b10 <__aeabi_dmul+0x4d4>
    5ad4:	355f      	adds	r5, #95	; 0x5f
    5ad6:	1aaa      	subs	r2, r5, r2
    5ad8:	4094      	lsls	r4, r2
    5ada:	4323      	orrs	r3, r4
    5adc:	1e5c      	subs	r4, r3, #1
    5ade:	41a3      	sbcs	r3, r4
    5ae0:	2507      	movs	r5, #7
    5ae2:	4303      	orrs	r3, r0
    5ae4:	401d      	ands	r5, r3
    5ae6:	2200      	movs	r2, #0
    5ae8:	2d00      	cmp	r5, #0
    5aea:	d009      	beq.n	5b00 <__aeabi_dmul+0x4c4>
    5aec:	220f      	movs	r2, #15
    5aee:	2400      	movs	r4, #0
    5af0:	401a      	ands	r2, r3
    5af2:	0018      	movs	r0, r3
    5af4:	2a04      	cmp	r2, #4
    5af6:	d1d6      	bne.n	5aa6 <__aeabi_dmul+0x46a>
    5af8:	0003      	movs	r3, r0
    5afa:	0765      	lsls	r5, r4, #29
    5afc:	0264      	lsls	r4, r4, #9
    5afe:	0b22      	lsrs	r2, r4, #12
    5b00:	08db      	lsrs	r3, r3, #3
    5b02:	432b      	orrs	r3, r5
    5b04:	2501      	movs	r5, #1
    5b06:	4699      	mov	r9, r3
    5b08:	9b01      	ldr	r3, [sp, #4]
    5b0a:	2400      	movs	r4, #0
    5b0c:	401d      	ands	r5, r3
    5b0e:	e5fc      	b.n	570a <__aeabi_dmul+0xce>
    5b10:	2400      	movs	r4, #0
    5b12:	e7e2      	b.n	5ada <__aeabi_dmul+0x49e>
    5b14:	2280      	movs	r2, #128	; 0x80
    5b16:	2501      	movs	r5, #1
    5b18:	0312      	lsls	r2, r2, #12
    5b1a:	4322      	orrs	r2, r4
    5b1c:	9901      	ldr	r1, [sp, #4]
    5b1e:	0312      	lsls	r2, r2, #12
    5b20:	0b12      	lsrs	r2, r2, #12
    5b22:	400d      	ands	r5, r1
    5b24:	4699      	mov	r9, r3
    5b26:	4c04      	ldr	r4, [pc, #16]	; (5b38 <__aeabi_dmul+0x4fc>)
    5b28:	e5ef      	b.n	570a <__aeabi_dmul+0xce>
    5b2a:	46c0      	nop			; (mov r8, r8)
    5b2c:	000003ff 	.word	0x000003ff
    5b30:	feffffff 	.word	0xfeffffff
    5b34:	000007fe 	.word	0x000007fe
    5b38:	000007ff 	.word	0x000007ff

00005b3c <__aeabi_dsub>:
    5b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5b3e:	4646      	mov	r6, r8
    5b40:	46d6      	mov	lr, sl
    5b42:	464f      	mov	r7, r9
    5b44:	030c      	lsls	r4, r1, #12
    5b46:	b5c0      	push	{r6, r7, lr}
    5b48:	0fcd      	lsrs	r5, r1, #31
    5b4a:	004e      	lsls	r6, r1, #1
    5b4c:	0a61      	lsrs	r1, r4, #9
    5b4e:	0f44      	lsrs	r4, r0, #29
    5b50:	430c      	orrs	r4, r1
    5b52:	00c1      	lsls	r1, r0, #3
    5b54:	0058      	lsls	r0, r3, #1
    5b56:	0d40      	lsrs	r0, r0, #21
    5b58:	4684      	mov	ip, r0
    5b5a:	468a      	mov	sl, r1
    5b5c:	000f      	movs	r7, r1
    5b5e:	0319      	lsls	r1, r3, #12
    5b60:	0f50      	lsrs	r0, r2, #29
    5b62:	0a49      	lsrs	r1, r1, #9
    5b64:	4301      	orrs	r1, r0
    5b66:	48c6      	ldr	r0, [pc, #792]	; (5e80 <__aeabi_dsub+0x344>)
    5b68:	0d76      	lsrs	r6, r6, #21
    5b6a:	46a8      	mov	r8, r5
    5b6c:	0fdb      	lsrs	r3, r3, #31
    5b6e:	00d2      	lsls	r2, r2, #3
    5b70:	4584      	cmp	ip, r0
    5b72:	d100      	bne.n	5b76 <__aeabi_dsub+0x3a>
    5b74:	e0d8      	b.n	5d28 <__aeabi_dsub+0x1ec>
    5b76:	2001      	movs	r0, #1
    5b78:	4043      	eors	r3, r0
    5b7a:	42ab      	cmp	r3, r5
    5b7c:	d100      	bne.n	5b80 <__aeabi_dsub+0x44>
    5b7e:	e0a6      	b.n	5cce <__aeabi_dsub+0x192>
    5b80:	4660      	mov	r0, ip
    5b82:	1a35      	subs	r5, r6, r0
    5b84:	2d00      	cmp	r5, #0
    5b86:	dc00      	bgt.n	5b8a <__aeabi_dsub+0x4e>
    5b88:	e105      	b.n	5d96 <__aeabi_dsub+0x25a>
    5b8a:	2800      	cmp	r0, #0
    5b8c:	d110      	bne.n	5bb0 <__aeabi_dsub+0x74>
    5b8e:	000b      	movs	r3, r1
    5b90:	4313      	orrs	r3, r2
    5b92:	d100      	bne.n	5b96 <__aeabi_dsub+0x5a>
    5b94:	e0d7      	b.n	5d46 <__aeabi_dsub+0x20a>
    5b96:	1e6b      	subs	r3, r5, #1
    5b98:	2b00      	cmp	r3, #0
    5b9a:	d000      	beq.n	5b9e <__aeabi_dsub+0x62>
    5b9c:	e14b      	b.n	5e36 <__aeabi_dsub+0x2fa>
    5b9e:	4653      	mov	r3, sl
    5ba0:	1a9f      	subs	r7, r3, r2
    5ba2:	45ba      	cmp	sl, r7
    5ba4:	4180      	sbcs	r0, r0
    5ba6:	1a64      	subs	r4, r4, r1
    5ba8:	4240      	negs	r0, r0
    5baa:	1a24      	subs	r4, r4, r0
    5bac:	2601      	movs	r6, #1
    5bae:	e01e      	b.n	5bee <__aeabi_dsub+0xb2>
    5bb0:	4bb3      	ldr	r3, [pc, #716]	; (5e80 <__aeabi_dsub+0x344>)
    5bb2:	429e      	cmp	r6, r3
    5bb4:	d048      	beq.n	5c48 <__aeabi_dsub+0x10c>
    5bb6:	2380      	movs	r3, #128	; 0x80
    5bb8:	041b      	lsls	r3, r3, #16
    5bba:	4319      	orrs	r1, r3
    5bbc:	2d38      	cmp	r5, #56	; 0x38
    5bbe:	dd00      	ble.n	5bc2 <__aeabi_dsub+0x86>
    5bc0:	e119      	b.n	5df6 <__aeabi_dsub+0x2ba>
    5bc2:	2d1f      	cmp	r5, #31
    5bc4:	dd00      	ble.n	5bc8 <__aeabi_dsub+0x8c>
    5bc6:	e14c      	b.n	5e62 <__aeabi_dsub+0x326>
    5bc8:	2320      	movs	r3, #32
    5bca:	000f      	movs	r7, r1
    5bcc:	1b5b      	subs	r3, r3, r5
    5bce:	0010      	movs	r0, r2
    5bd0:	409a      	lsls	r2, r3
    5bd2:	409f      	lsls	r7, r3
    5bd4:	40e8      	lsrs	r0, r5
    5bd6:	1e53      	subs	r3, r2, #1
    5bd8:	419a      	sbcs	r2, r3
    5bda:	40e9      	lsrs	r1, r5
    5bdc:	4307      	orrs	r7, r0
    5bde:	4317      	orrs	r7, r2
    5be0:	4653      	mov	r3, sl
    5be2:	1bdf      	subs	r7, r3, r7
    5be4:	1a61      	subs	r1, r4, r1
    5be6:	45ba      	cmp	sl, r7
    5be8:	41a4      	sbcs	r4, r4
    5bea:	4264      	negs	r4, r4
    5bec:	1b0c      	subs	r4, r1, r4
    5bee:	0223      	lsls	r3, r4, #8
    5bf0:	d400      	bmi.n	5bf4 <__aeabi_dsub+0xb8>
    5bf2:	e0c5      	b.n	5d80 <__aeabi_dsub+0x244>
    5bf4:	0264      	lsls	r4, r4, #9
    5bf6:	0a65      	lsrs	r5, r4, #9
    5bf8:	2d00      	cmp	r5, #0
    5bfa:	d100      	bne.n	5bfe <__aeabi_dsub+0xc2>
    5bfc:	e0f6      	b.n	5dec <__aeabi_dsub+0x2b0>
    5bfe:	0028      	movs	r0, r5
    5c00:	f000 fc5c 	bl	64bc <__clzsi2>
    5c04:	0003      	movs	r3, r0
    5c06:	3b08      	subs	r3, #8
    5c08:	2b1f      	cmp	r3, #31
    5c0a:	dd00      	ble.n	5c0e <__aeabi_dsub+0xd2>
    5c0c:	e0e9      	b.n	5de2 <__aeabi_dsub+0x2a6>
    5c0e:	2220      	movs	r2, #32
    5c10:	003c      	movs	r4, r7
    5c12:	1ad2      	subs	r2, r2, r3
    5c14:	409d      	lsls	r5, r3
    5c16:	40d4      	lsrs	r4, r2
    5c18:	409f      	lsls	r7, r3
    5c1a:	4325      	orrs	r5, r4
    5c1c:	429e      	cmp	r6, r3
    5c1e:	dd00      	ble.n	5c22 <__aeabi_dsub+0xe6>
    5c20:	e0db      	b.n	5dda <__aeabi_dsub+0x29e>
    5c22:	1b9e      	subs	r6, r3, r6
    5c24:	1c73      	adds	r3, r6, #1
    5c26:	2b1f      	cmp	r3, #31
    5c28:	dd00      	ble.n	5c2c <__aeabi_dsub+0xf0>
    5c2a:	e10a      	b.n	5e42 <__aeabi_dsub+0x306>
    5c2c:	2220      	movs	r2, #32
    5c2e:	0038      	movs	r0, r7
    5c30:	1ad2      	subs	r2, r2, r3
    5c32:	0029      	movs	r1, r5
    5c34:	4097      	lsls	r7, r2
    5c36:	002c      	movs	r4, r5
    5c38:	4091      	lsls	r1, r2
    5c3a:	40d8      	lsrs	r0, r3
    5c3c:	1e7a      	subs	r2, r7, #1
    5c3e:	4197      	sbcs	r7, r2
    5c40:	40dc      	lsrs	r4, r3
    5c42:	2600      	movs	r6, #0
    5c44:	4301      	orrs	r1, r0
    5c46:	430f      	orrs	r7, r1
    5c48:	077b      	lsls	r3, r7, #29
    5c4a:	d009      	beq.n	5c60 <__aeabi_dsub+0x124>
    5c4c:	230f      	movs	r3, #15
    5c4e:	403b      	ands	r3, r7
    5c50:	2b04      	cmp	r3, #4
    5c52:	d005      	beq.n	5c60 <__aeabi_dsub+0x124>
    5c54:	1d3b      	adds	r3, r7, #4
    5c56:	42bb      	cmp	r3, r7
    5c58:	41bf      	sbcs	r7, r7
    5c5a:	427f      	negs	r7, r7
    5c5c:	19e4      	adds	r4, r4, r7
    5c5e:	001f      	movs	r7, r3
    5c60:	0223      	lsls	r3, r4, #8
    5c62:	d525      	bpl.n	5cb0 <__aeabi_dsub+0x174>
    5c64:	4b86      	ldr	r3, [pc, #536]	; (5e80 <__aeabi_dsub+0x344>)
    5c66:	3601      	adds	r6, #1
    5c68:	429e      	cmp	r6, r3
    5c6a:	d100      	bne.n	5c6e <__aeabi_dsub+0x132>
    5c6c:	e0af      	b.n	5dce <__aeabi_dsub+0x292>
    5c6e:	4b85      	ldr	r3, [pc, #532]	; (5e84 <__aeabi_dsub+0x348>)
    5c70:	2501      	movs	r5, #1
    5c72:	401c      	ands	r4, r3
    5c74:	4643      	mov	r3, r8
    5c76:	0762      	lsls	r2, r4, #29
    5c78:	08ff      	lsrs	r7, r7, #3
    5c7a:	0264      	lsls	r4, r4, #9
    5c7c:	0576      	lsls	r6, r6, #21
    5c7e:	4317      	orrs	r7, r2
    5c80:	0b24      	lsrs	r4, r4, #12
    5c82:	0d76      	lsrs	r6, r6, #21
    5c84:	401d      	ands	r5, r3
    5c86:	2100      	movs	r1, #0
    5c88:	0324      	lsls	r4, r4, #12
    5c8a:	0b23      	lsrs	r3, r4, #12
    5c8c:	0d0c      	lsrs	r4, r1, #20
    5c8e:	4a7e      	ldr	r2, [pc, #504]	; (5e88 <__aeabi_dsub+0x34c>)
    5c90:	0524      	lsls	r4, r4, #20
    5c92:	431c      	orrs	r4, r3
    5c94:	4014      	ands	r4, r2
    5c96:	0533      	lsls	r3, r6, #20
    5c98:	4323      	orrs	r3, r4
    5c9a:	005b      	lsls	r3, r3, #1
    5c9c:	07ed      	lsls	r5, r5, #31
    5c9e:	085b      	lsrs	r3, r3, #1
    5ca0:	432b      	orrs	r3, r5
    5ca2:	0038      	movs	r0, r7
    5ca4:	0019      	movs	r1, r3
    5ca6:	bc1c      	pop	{r2, r3, r4}
    5ca8:	4690      	mov	r8, r2
    5caa:	4699      	mov	r9, r3
    5cac:	46a2      	mov	sl, r4
    5cae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5cb0:	2501      	movs	r5, #1
    5cb2:	4643      	mov	r3, r8
    5cb4:	0762      	lsls	r2, r4, #29
    5cb6:	08ff      	lsrs	r7, r7, #3
    5cb8:	4317      	orrs	r7, r2
    5cba:	08e4      	lsrs	r4, r4, #3
    5cbc:	401d      	ands	r5, r3
    5cbe:	4b70      	ldr	r3, [pc, #448]	; (5e80 <__aeabi_dsub+0x344>)
    5cc0:	429e      	cmp	r6, r3
    5cc2:	d036      	beq.n	5d32 <__aeabi_dsub+0x1f6>
    5cc4:	0324      	lsls	r4, r4, #12
    5cc6:	0576      	lsls	r6, r6, #21
    5cc8:	0b24      	lsrs	r4, r4, #12
    5cca:	0d76      	lsrs	r6, r6, #21
    5ccc:	e7db      	b.n	5c86 <__aeabi_dsub+0x14a>
    5cce:	4663      	mov	r3, ip
    5cd0:	1af3      	subs	r3, r6, r3
    5cd2:	2b00      	cmp	r3, #0
    5cd4:	dc00      	bgt.n	5cd8 <__aeabi_dsub+0x19c>
    5cd6:	e094      	b.n	5e02 <__aeabi_dsub+0x2c6>
    5cd8:	4660      	mov	r0, ip
    5cda:	2800      	cmp	r0, #0
    5cdc:	d035      	beq.n	5d4a <__aeabi_dsub+0x20e>
    5cde:	4868      	ldr	r0, [pc, #416]	; (5e80 <__aeabi_dsub+0x344>)
    5ce0:	4286      	cmp	r6, r0
    5ce2:	d0b1      	beq.n	5c48 <__aeabi_dsub+0x10c>
    5ce4:	2780      	movs	r7, #128	; 0x80
    5ce6:	043f      	lsls	r7, r7, #16
    5ce8:	4339      	orrs	r1, r7
    5cea:	2b38      	cmp	r3, #56	; 0x38
    5cec:	dc00      	bgt.n	5cf0 <__aeabi_dsub+0x1b4>
    5cee:	e0fd      	b.n	5eec <__aeabi_dsub+0x3b0>
    5cf0:	430a      	orrs	r2, r1
    5cf2:	0017      	movs	r7, r2
    5cf4:	2100      	movs	r1, #0
    5cf6:	1e7a      	subs	r2, r7, #1
    5cf8:	4197      	sbcs	r7, r2
    5cfa:	4457      	add	r7, sl
    5cfc:	4557      	cmp	r7, sl
    5cfe:	4180      	sbcs	r0, r0
    5d00:	1909      	adds	r1, r1, r4
    5d02:	4244      	negs	r4, r0
    5d04:	190c      	adds	r4, r1, r4
    5d06:	0223      	lsls	r3, r4, #8
    5d08:	d53a      	bpl.n	5d80 <__aeabi_dsub+0x244>
    5d0a:	4b5d      	ldr	r3, [pc, #372]	; (5e80 <__aeabi_dsub+0x344>)
    5d0c:	3601      	adds	r6, #1
    5d0e:	429e      	cmp	r6, r3
    5d10:	d100      	bne.n	5d14 <__aeabi_dsub+0x1d8>
    5d12:	e14b      	b.n	5fac <__aeabi_dsub+0x470>
    5d14:	2201      	movs	r2, #1
    5d16:	4b5b      	ldr	r3, [pc, #364]	; (5e84 <__aeabi_dsub+0x348>)
    5d18:	401c      	ands	r4, r3
    5d1a:	087b      	lsrs	r3, r7, #1
    5d1c:	4017      	ands	r7, r2
    5d1e:	431f      	orrs	r7, r3
    5d20:	07e2      	lsls	r2, r4, #31
    5d22:	4317      	orrs	r7, r2
    5d24:	0864      	lsrs	r4, r4, #1
    5d26:	e78f      	b.n	5c48 <__aeabi_dsub+0x10c>
    5d28:	0008      	movs	r0, r1
    5d2a:	4310      	orrs	r0, r2
    5d2c:	d000      	beq.n	5d30 <__aeabi_dsub+0x1f4>
    5d2e:	e724      	b.n	5b7a <__aeabi_dsub+0x3e>
    5d30:	e721      	b.n	5b76 <__aeabi_dsub+0x3a>
    5d32:	0023      	movs	r3, r4
    5d34:	433b      	orrs	r3, r7
    5d36:	d100      	bne.n	5d3a <__aeabi_dsub+0x1fe>
    5d38:	e1b9      	b.n	60ae <__aeabi_dsub+0x572>
    5d3a:	2280      	movs	r2, #128	; 0x80
    5d3c:	0312      	lsls	r2, r2, #12
    5d3e:	4314      	orrs	r4, r2
    5d40:	0324      	lsls	r4, r4, #12
    5d42:	0b24      	lsrs	r4, r4, #12
    5d44:	e79f      	b.n	5c86 <__aeabi_dsub+0x14a>
    5d46:	002e      	movs	r6, r5
    5d48:	e77e      	b.n	5c48 <__aeabi_dsub+0x10c>
    5d4a:	0008      	movs	r0, r1
    5d4c:	4310      	orrs	r0, r2
    5d4e:	d100      	bne.n	5d52 <__aeabi_dsub+0x216>
    5d50:	e0ca      	b.n	5ee8 <__aeabi_dsub+0x3ac>
    5d52:	1e58      	subs	r0, r3, #1
    5d54:	4684      	mov	ip, r0
    5d56:	2800      	cmp	r0, #0
    5d58:	d000      	beq.n	5d5c <__aeabi_dsub+0x220>
    5d5a:	e0e7      	b.n	5f2c <__aeabi_dsub+0x3f0>
    5d5c:	4452      	add	r2, sl
    5d5e:	4552      	cmp	r2, sl
    5d60:	4180      	sbcs	r0, r0
    5d62:	1864      	adds	r4, r4, r1
    5d64:	4240      	negs	r0, r0
    5d66:	1824      	adds	r4, r4, r0
    5d68:	0017      	movs	r7, r2
    5d6a:	2601      	movs	r6, #1
    5d6c:	0223      	lsls	r3, r4, #8
    5d6e:	d507      	bpl.n	5d80 <__aeabi_dsub+0x244>
    5d70:	2602      	movs	r6, #2
    5d72:	e7cf      	b.n	5d14 <__aeabi_dsub+0x1d8>
    5d74:	4664      	mov	r4, ip
    5d76:	432c      	orrs	r4, r5
    5d78:	d100      	bne.n	5d7c <__aeabi_dsub+0x240>
    5d7a:	e1b3      	b.n	60e4 <__aeabi_dsub+0x5a8>
    5d7c:	002c      	movs	r4, r5
    5d7e:	4667      	mov	r7, ip
    5d80:	077b      	lsls	r3, r7, #29
    5d82:	d000      	beq.n	5d86 <__aeabi_dsub+0x24a>
    5d84:	e762      	b.n	5c4c <__aeabi_dsub+0x110>
    5d86:	0763      	lsls	r3, r4, #29
    5d88:	08ff      	lsrs	r7, r7, #3
    5d8a:	431f      	orrs	r7, r3
    5d8c:	2501      	movs	r5, #1
    5d8e:	4643      	mov	r3, r8
    5d90:	08e4      	lsrs	r4, r4, #3
    5d92:	401d      	ands	r5, r3
    5d94:	e793      	b.n	5cbe <__aeabi_dsub+0x182>
    5d96:	2d00      	cmp	r5, #0
    5d98:	d178      	bne.n	5e8c <__aeabi_dsub+0x350>
    5d9a:	1c75      	adds	r5, r6, #1
    5d9c:	056d      	lsls	r5, r5, #21
    5d9e:	0d6d      	lsrs	r5, r5, #21
    5da0:	2d01      	cmp	r5, #1
    5da2:	dc00      	bgt.n	5da6 <__aeabi_dsub+0x26a>
    5da4:	e0f2      	b.n	5f8c <__aeabi_dsub+0x450>
    5da6:	4650      	mov	r0, sl
    5da8:	1a80      	subs	r0, r0, r2
    5daa:	4582      	cmp	sl, r0
    5dac:	41bf      	sbcs	r7, r7
    5dae:	1a65      	subs	r5, r4, r1
    5db0:	427f      	negs	r7, r7
    5db2:	1bed      	subs	r5, r5, r7
    5db4:	4684      	mov	ip, r0
    5db6:	0228      	lsls	r0, r5, #8
    5db8:	d400      	bmi.n	5dbc <__aeabi_dsub+0x280>
    5dba:	e08c      	b.n	5ed6 <__aeabi_dsub+0x39a>
    5dbc:	4650      	mov	r0, sl
    5dbe:	1a17      	subs	r7, r2, r0
    5dc0:	42ba      	cmp	r2, r7
    5dc2:	4192      	sbcs	r2, r2
    5dc4:	1b0c      	subs	r4, r1, r4
    5dc6:	4255      	negs	r5, r2
    5dc8:	1b65      	subs	r5, r4, r5
    5dca:	4698      	mov	r8, r3
    5dcc:	e714      	b.n	5bf8 <__aeabi_dsub+0xbc>
    5dce:	2501      	movs	r5, #1
    5dd0:	4643      	mov	r3, r8
    5dd2:	2400      	movs	r4, #0
    5dd4:	401d      	ands	r5, r3
    5dd6:	2700      	movs	r7, #0
    5dd8:	e755      	b.n	5c86 <__aeabi_dsub+0x14a>
    5dda:	4c2a      	ldr	r4, [pc, #168]	; (5e84 <__aeabi_dsub+0x348>)
    5ddc:	1af6      	subs	r6, r6, r3
    5dde:	402c      	ands	r4, r5
    5de0:	e732      	b.n	5c48 <__aeabi_dsub+0x10c>
    5de2:	003d      	movs	r5, r7
    5de4:	3828      	subs	r0, #40	; 0x28
    5de6:	4085      	lsls	r5, r0
    5de8:	2700      	movs	r7, #0
    5dea:	e717      	b.n	5c1c <__aeabi_dsub+0xe0>
    5dec:	0038      	movs	r0, r7
    5dee:	f000 fb65 	bl	64bc <__clzsi2>
    5df2:	3020      	adds	r0, #32
    5df4:	e706      	b.n	5c04 <__aeabi_dsub+0xc8>
    5df6:	430a      	orrs	r2, r1
    5df8:	0017      	movs	r7, r2
    5dfa:	2100      	movs	r1, #0
    5dfc:	1e7a      	subs	r2, r7, #1
    5dfe:	4197      	sbcs	r7, r2
    5e00:	e6ee      	b.n	5be0 <__aeabi_dsub+0xa4>
    5e02:	2b00      	cmp	r3, #0
    5e04:	d000      	beq.n	5e08 <__aeabi_dsub+0x2cc>
    5e06:	e0e5      	b.n	5fd4 <__aeabi_dsub+0x498>
    5e08:	1c73      	adds	r3, r6, #1
    5e0a:	469c      	mov	ip, r3
    5e0c:	055b      	lsls	r3, r3, #21
    5e0e:	0d5b      	lsrs	r3, r3, #21
    5e10:	2b01      	cmp	r3, #1
    5e12:	dc00      	bgt.n	5e16 <__aeabi_dsub+0x2da>
    5e14:	e09f      	b.n	5f56 <__aeabi_dsub+0x41a>
    5e16:	4b1a      	ldr	r3, [pc, #104]	; (5e80 <__aeabi_dsub+0x344>)
    5e18:	459c      	cmp	ip, r3
    5e1a:	d100      	bne.n	5e1e <__aeabi_dsub+0x2e2>
    5e1c:	e0c5      	b.n	5faa <__aeabi_dsub+0x46e>
    5e1e:	4452      	add	r2, sl
    5e20:	4552      	cmp	r2, sl
    5e22:	4180      	sbcs	r0, r0
    5e24:	1864      	adds	r4, r4, r1
    5e26:	4240      	negs	r0, r0
    5e28:	1824      	adds	r4, r4, r0
    5e2a:	07e7      	lsls	r7, r4, #31
    5e2c:	0852      	lsrs	r2, r2, #1
    5e2e:	4317      	orrs	r7, r2
    5e30:	0864      	lsrs	r4, r4, #1
    5e32:	4666      	mov	r6, ip
    5e34:	e708      	b.n	5c48 <__aeabi_dsub+0x10c>
    5e36:	4812      	ldr	r0, [pc, #72]	; (5e80 <__aeabi_dsub+0x344>)
    5e38:	4285      	cmp	r5, r0
    5e3a:	d100      	bne.n	5e3e <__aeabi_dsub+0x302>
    5e3c:	e085      	b.n	5f4a <__aeabi_dsub+0x40e>
    5e3e:	001d      	movs	r5, r3
    5e40:	e6bc      	b.n	5bbc <__aeabi_dsub+0x80>
    5e42:	0029      	movs	r1, r5
    5e44:	3e1f      	subs	r6, #31
    5e46:	40f1      	lsrs	r1, r6
    5e48:	2b20      	cmp	r3, #32
    5e4a:	d100      	bne.n	5e4e <__aeabi_dsub+0x312>
    5e4c:	e07f      	b.n	5f4e <__aeabi_dsub+0x412>
    5e4e:	2240      	movs	r2, #64	; 0x40
    5e50:	1ad3      	subs	r3, r2, r3
    5e52:	409d      	lsls	r5, r3
    5e54:	432f      	orrs	r7, r5
    5e56:	1e7d      	subs	r5, r7, #1
    5e58:	41af      	sbcs	r7, r5
    5e5a:	2400      	movs	r4, #0
    5e5c:	430f      	orrs	r7, r1
    5e5e:	2600      	movs	r6, #0
    5e60:	e78e      	b.n	5d80 <__aeabi_dsub+0x244>
    5e62:	002b      	movs	r3, r5
    5e64:	000f      	movs	r7, r1
    5e66:	3b20      	subs	r3, #32
    5e68:	40df      	lsrs	r7, r3
    5e6a:	2d20      	cmp	r5, #32
    5e6c:	d071      	beq.n	5f52 <__aeabi_dsub+0x416>
    5e6e:	2340      	movs	r3, #64	; 0x40
    5e70:	1b5d      	subs	r5, r3, r5
    5e72:	40a9      	lsls	r1, r5
    5e74:	430a      	orrs	r2, r1
    5e76:	1e51      	subs	r1, r2, #1
    5e78:	418a      	sbcs	r2, r1
    5e7a:	2100      	movs	r1, #0
    5e7c:	4317      	orrs	r7, r2
    5e7e:	e6af      	b.n	5be0 <__aeabi_dsub+0xa4>
    5e80:	000007ff 	.word	0x000007ff
    5e84:	ff7fffff 	.word	0xff7fffff
    5e88:	800fffff 	.word	0x800fffff
    5e8c:	2e00      	cmp	r6, #0
    5e8e:	d03e      	beq.n	5f0e <__aeabi_dsub+0x3d2>
    5e90:	4eb3      	ldr	r6, [pc, #716]	; (6160 <__aeabi_dsub+0x624>)
    5e92:	45b4      	cmp	ip, r6
    5e94:	d045      	beq.n	5f22 <__aeabi_dsub+0x3e6>
    5e96:	2680      	movs	r6, #128	; 0x80
    5e98:	0436      	lsls	r6, r6, #16
    5e9a:	426d      	negs	r5, r5
    5e9c:	4334      	orrs	r4, r6
    5e9e:	2d38      	cmp	r5, #56	; 0x38
    5ea0:	dd00      	ble.n	5ea4 <__aeabi_dsub+0x368>
    5ea2:	e0a8      	b.n	5ff6 <__aeabi_dsub+0x4ba>
    5ea4:	2d1f      	cmp	r5, #31
    5ea6:	dd00      	ble.n	5eaa <__aeabi_dsub+0x36e>
    5ea8:	e11f      	b.n	60ea <__aeabi_dsub+0x5ae>
    5eaa:	2620      	movs	r6, #32
    5eac:	0027      	movs	r7, r4
    5eae:	4650      	mov	r0, sl
    5eb0:	1b76      	subs	r6, r6, r5
    5eb2:	40b7      	lsls	r7, r6
    5eb4:	40e8      	lsrs	r0, r5
    5eb6:	4307      	orrs	r7, r0
    5eb8:	4650      	mov	r0, sl
    5eba:	40b0      	lsls	r0, r6
    5ebc:	1e46      	subs	r6, r0, #1
    5ebe:	41b0      	sbcs	r0, r6
    5ec0:	40ec      	lsrs	r4, r5
    5ec2:	4338      	orrs	r0, r7
    5ec4:	1a17      	subs	r7, r2, r0
    5ec6:	42ba      	cmp	r2, r7
    5ec8:	4192      	sbcs	r2, r2
    5eca:	1b0c      	subs	r4, r1, r4
    5ecc:	4252      	negs	r2, r2
    5ece:	1aa4      	subs	r4, r4, r2
    5ed0:	4666      	mov	r6, ip
    5ed2:	4698      	mov	r8, r3
    5ed4:	e68b      	b.n	5bee <__aeabi_dsub+0xb2>
    5ed6:	4664      	mov	r4, ip
    5ed8:	4667      	mov	r7, ip
    5eda:	432c      	orrs	r4, r5
    5edc:	d000      	beq.n	5ee0 <__aeabi_dsub+0x3a4>
    5ede:	e68b      	b.n	5bf8 <__aeabi_dsub+0xbc>
    5ee0:	2500      	movs	r5, #0
    5ee2:	2600      	movs	r6, #0
    5ee4:	2700      	movs	r7, #0
    5ee6:	e6ea      	b.n	5cbe <__aeabi_dsub+0x182>
    5ee8:	001e      	movs	r6, r3
    5eea:	e6ad      	b.n	5c48 <__aeabi_dsub+0x10c>
    5eec:	2b1f      	cmp	r3, #31
    5eee:	dc60      	bgt.n	5fb2 <__aeabi_dsub+0x476>
    5ef0:	2720      	movs	r7, #32
    5ef2:	1af8      	subs	r0, r7, r3
    5ef4:	000f      	movs	r7, r1
    5ef6:	4684      	mov	ip, r0
    5ef8:	4087      	lsls	r7, r0
    5efa:	0010      	movs	r0, r2
    5efc:	40d8      	lsrs	r0, r3
    5efe:	4307      	orrs	r7, r0
    5f00:	4660      	mov	r0, ip
    5f02:	4082      	lsls	r2, r0
    5f04:	1e50      	subs	r0, r2, #1
    5f06:	4182      	sbcs	r2, r0
    5f08:	40d9      	lsrs	r1, r3
    5f0a:	4317      	orrs	r7, r2
    5f0c:	e6f5      	b.n	5cfa <__aeabi_dsub+0x1be>
    5f0e:	0026      	movs	r6, r4
    5f10:	4650      	mov	r0, sl
    5f12:	4306      	orrs	r6, r0
    5f14:	d005      	beq.n	5f22 <__aeabi_dsub+0x3e6>
    5f16:	43ed      	mvns	r5, r5
    5f18:	2d00      	cmp	r5, #0
    5f1a:	d0d3      	beq.n	5ec4 <__aeabi_dsub+0x388>
    5f1c:	4e90      	ldr	r6, [pc, #576]	; (6160 <__aeabi_dsub+0x624>)
    5f1e:	45b4      	cmp	ip, r6
    5f20:	d1bd      	bne.n	5e9e <__aeabi_dsub+0x362>
    5f22:	000c      	movs	r4, r1
    5f24:	0017      	movs	r7, r2
    5f26:	4666      	mov	r6, ip
    5f28:	4698      	mov	r8, r3
    5f2a:	e68d      	b.n	5c48 <__aeabi_dsub+0x10c>
    5f2c:	488c      	ldr	r0, [pc, #560]	; (6160 <__aeabi_dsub+0x624>)
    5f2e:	4283      	cmp	r3, r0
    5f30:	d00b      	beq.n	5f4a <__aeabi_dsub+0x40e>
    5f32:	4663      	mov	r3, ip
    5f34:	e6d9      	b.n	5cea <__aeabi_dsub+0x1ae>
    5f36:	2d00      	cmp	r5, #0
    5f38:	d000      	beq.n	5f3c <__aeabi_dsub+0x400>
    5f3a:	e096      	b.n	606a <__aeabi_dsub+0x52e>
    5f3c:	0008      	movs	r0, r1
    5f3e:	4310      	orrs	r0, r2
    5f40:	d100      	bne.n	5f44 <__aeabi_dsub+0x408>
    5f42:	e0e2      	b.n	610a <__aeabi_dsub+0x5ce>
    5f44:	000c      	movs	r4, r1
    5f46:	0017      	movs	r7, r2
    5f48:	4698      	mov	r8, r3
    5f4a:	4e85      	ldr	r6, [pc, #532]	; (6160 <__aeabi_dsub+0x624>)
    5f4c:	e67c      	b.n	5c48 <__aeabi_dsub+0x10c>
    5f4e:	2500      	movs	r5, #0
    5f50:	e780      	b.n	5e54 <__aeabi_dsub+0x318>
    5f52:	2100      	movs	r1, #0
    5f54:	e78e      	b.n	5e74 <__aeabi_dsub+0x338>
    5f56:	0023      	movs	r3, r4
    5f58:	4650      	mov	r0, sl
    5f5a:	4303      	orrs	r3, r0
    5f5c:	2e00      	cmp	r6, #0
    5f5e:	d000      	beq.n	5f62 <__aeabi_dsub+0x426>
    5f60:	e0a8      	b.n	60b4 <__aeabi_dsub+0x578>
    5f62:	2b00      	cmp	r3, #0
    5f64:	d100      	bne.n	5f68 <__aeabi_dsub+0x42c>
    5f66:	e0de      	b.n	6126 <__aeabi_dsub+0x5ea>
    5f68:	000b      	movs	r3, r1
    5f6a:	4313      	orrs	r3, r2
    5f6c:	d100      	bne.n	5f70 <__aeabi_dsub+0x434>
    5f6e:	e66b      	b.n	5c48 <__aeabi_dsub+0x10c>
    5f70:	4452      	add	r2, sl
    5f72:	4552      	cmp	r2, sl
    5f74:	4180      	sbcs	r0, r0
    5f76:	1864      	adds	r4, r4, r1
    5f78:	4240      	negs	r0, r0
    5f7a:	1824      	adds	r4, r4, r0
    5f7c:	0017      	movs	r7, r2
    5f7e:	0223      	lsls	r3, r4, #8
    5f80:	d400      	bmi.n	5f84 <__aeabi_dsub+0x448>
    5f82:	e6fd      	b.n	5d80 <__aeabi_dsub+0x244>
    5f84:	4b77      	ldr	r3, [pc, #476]	; (6164 <__aeabi_dsub+0x628>)
    5f86:	4666      	mov	r6, ip
    5f88:	401c      	ands	r4, r3
    5f8a:	e65d      	b.n	5c48 <__aeabi_dsub+0x10c>
    5f8c:	0025      	movs	r5, r4
    5f8e:	4650      	mov	r0, sl
    5f90:	4305      	orrs	r5, r0
    5f92:	2e00      	cmp	r6, #0
    5f94:	d1cf      	bne.n	5f36 <__aeabi_dsub+0x3fa>
    5f96:	2d00      	cmp	r5, #0
    5f98:	d14f      	bne.n	603a <__aeabi_dsub+0x4fe>
    5f9a:	000c      	movs	r4, r1
    5f9c:	4314      	orrs	r4, r2
    5f9e:	d100      	bne.n	5fa2 <__aeabi_dsub+0x466>
    5fa0:	e0a0      	b.n	60e4 <__aeabi_dsub+0x5a8>
    5fa2:	000c      	movs	r4, r1
    5fa4:	0017      	movs	r7, r2
    5fa6:	4698      	mov	r8, r3
    5fa8:	e64e      	b.n	5c48 <__aeabi_dsub+0x10c>
    5faa:	4666      	mov	r6, ip
    5fac:	2400      	movs	r4, #0
    5fae:	2700      	movs	r7, #0
    5fb0:	e685      	b.n	5cbe <__aeabi_dsub+0x182>
    5fb2:	001f      	movs	r7, r3
    5fb4:	0008      	movs	r0, r1
    5fb6:	3f20      	subs	r7, #32
    5fb8:	40f8      	lsrs	r0, r7
    5fba:	0007      	movs	r7, r0
    5fbc:	2b20      	cmp	r3, #32
    5fbe:	d100      	bne.n	5fc2 <__aeabi_dsub+0x486>
    5fc0:	e08e      	b.n	60e0 <__aeabi_dsub+0x5a4>
    5fc2:	2040      	movs	r0, #64	; 0x40
    5fc4:	1ac3      	subs	r3, r0, r3
    5fc6:	4099      	lsls	r1, r3
    5fc8:	430a      	orrs	r2, r1
    5fca:	1e51      	subs	r1, r2, #1
    5fcc:	418a      	sbcs	r2, r1
    5fce:	2100      	movs	r1, #0
    5fd0:	4317      	orrs	r7, r2
    5fd2:	e692      	b.n	5cfa <__aeabi_dsub+0x1be>
    5fd4:	2e00      	cmp	r6, #0
    5fd6:	d114      	bne.n	6002 <__aeabi_dsub+0x4c6>
    5fd8:	0026      	movs	r6, r4
    5fda:	4650      	mov	r0, sl
    5fdc:	4306      	orrs	r6, r0
    5fde:	d062      	beq.n	60a6 <__aeabi_dsub+0x56a>
    5fe0:	43db      	mvns	r3, r3
    5fe2:	2b00      	cmp	r3, #0
    5fe4:	d15c      	bne.n	60a0 <__aeabi_dsub+0x564>
    5fe6:	1887      	adds	r7, r0, r2
    5fe8:	4297      	cmp	r7, r2
    5fea:	4192      	sbcs	r2, r2
    5fec:	1864      	adds	r4, r4, r1
    5fee:	4252      	negs	r2, r2
    5ff0:	18a4      	adds	r4, r4, r2
    5ff2:	4666      	mov	r6, ip
    5ff4:	e687      	b.n	5d06 <__aeabi_dsub+0x1ca>
    5ff6:	4650      	mov	r0, sl
    5ff8:	4320      	orrs	r0, r4
    5ffa:	1e44      	subs	r4, r0, #1
    5ffc:	41a0      	sbcs	r0, r4
    5ffe:	2400      	movs	r4, #0
    6000:	e760      	b.n	5ec4 <__aeabi_dsub+0x388>
    6002:	4e57      	ldr	r6, [pc, #348]	; (6160 <__aeabi_dsub+0x624>)
    6004:	45b4      	cmp	ip, r6
    6006:	d04e      	beq.n	60a6 <__aeabi_dsub+0x56a>
    6008:	2680      	movs	r6, #128	; 0x80
    600a:	0436      	lsls	r6, r6, #16
    600c:	425b      	negs	r3, r3
    600e:	4334      	orrs	r4, r6
    6010:	2b38      	cmp	r3, #56	; 0x38
    6012:	dd00      	ble.n	6016 <__aeabi_dsub+0x4da>
    6014:	e07f      	b.n	6116 <__aeabi_dsub+0x5da>
    6016:	2b1f      	cmp	r3, #31
    6018:	dd00      	ble.n	601c <__aeabi_dsub+0x4e0>
    601a:	e08b      	b.n	6134 <__aeabi_dsub+0x5f8>
    601c:	2620      	movs	r6, #32
    601e:	0027      	movs	r7, r4
    6020:	4650      	mov	r0, sl
    6022:	1af6      	subs	r6, r6, r3
    6024:	40b7      	lsls	r7, r6
    6026:	40d8      	lsrs	r0, r3
    6028:	4307      	orrs	r7, r0
    602a:	4650      	mov	r0, sl
    602c:	40b0      	lsls	r0, r6
    602e:	1e46      	subs	r6, r0, #1
    6030:	41b0      	sbcs	r0, r6
    6032:	4307      	orrs	r7, r0
    6034:	40dc      	lsrs	r4, r3
    6036:	18bf      	adds	r7, r7, r2
    6038:	e7d6      	b.n	5fe8 <__aeabi_dsub+0x4ac>
    603a:	000d      	movs	r5, r1
    603c:	4315      	orrs	r5, r2
    603e:	d100      	bne.n	6042 <__aeabi_dsub+0x506>
    6040:	e602      	b.n	5c48 <__aeabi_dsub+0x10c>
    6042:	4650      	mov	r0, sl
    6044:	1a80      	subs	r0, r0, r2
    6046:	4582      	cmp	sl, r0
    6048:	41bf      	sbcs	r7, r7
    604a:	1a65      	subs	r5, r4, r1
    604c:	427f      	negs	r7, r7
    604e:	1bed      	subs	r5, r5, r7
    6050:	4684      	mov	ip, r0
    6052:	0228      	lsls	r0, r5, #8
    6054:	d400      	bmi.n	6058 <__aeabi_dsub+0x51c>
    6056:	e68d      	b.n	5d74 <__aeabi_dsub+0x238>
    6058:	4650      	mov	r0, sl
    605a:	1a17      	subs	r7, r2, r0
    605c:	42ba      	cmp	r2, r7
    605e:	4192      	sbcs	r2, r2
    6060:	1b0c      	subs	r4, r1, r4
    6062:	4252      	negs	r2, r2
    6064:	1aa4      	subs	r4, r4, r2
    6066:	4698      	mov	r8, r3
    6068:	e5ee      	b.n	5c48 <__aeabi_dsub+0x10c>
    606a:	000d      	movs	r5, r1
    606c:	4315      	orrs	r5, r2
    606e:	d100      	bne.n	6072 <__aeabi_dsub+0x536>
    6070:	e76b      	b.n	5f4a <__aeabi_dsub+0x40e>
    6072:	4650      	mov	r0, sl
    6074:	0767      	lsls	r7, r4, #29
    6076:	08c0      	lsrs	r0, r0, #3
    6078:	4307      	orrs	r7, r0
    607a:	2080      	movs	r0, #128	; 0x80
    607c:	08e4      	lsrs	r4, r4, #3
    607e:	0300      	lsls	r0, r0, #12
    6080:	4204      	tst	r4, r0
    6082:	d007      	beq.n	6094 <__aeabi_dsub+0x558>
    6084:	08cd      	lsrs	r5, r1, #3
    6086:	4205      	tst	r5, r0
    6088:	d104      	bne.n	6094 <__aeabi_dsub+0x558>
    608a:	002c      	movs	r4, r5
    608c:	4698      	mov	r8, r3
    608e:	08d7      	lsrs	r7, r2, #3
    6090:	0749      	lsls	r1, r1, #29
    6092:	430f      	orrs	r7, r1
    6094:	0f7b      	lsrs	r3, r7, #29
    6096:	00e4      	lsls	r4, r4, #3
    6098:	431c      	orrs	r4, r3
    609a:	00ff      	lsls	r7, r7, #3
    609c:	4e30      	ldr	r6, [pc, #192]	; (6160 <__aeabi_dsub+0x624>)
    609e:	e5d3      	b.n	5c48 <__aeabi_dsub+0x10c>
    60a0:	4e2f      	ldr	r6, [pc, #188]	; (6160 <__aeabi_dsub+0x624>)
    60a2:	45b4      	cmp	ip, r6
    60a4:	d1b4      	bne.n	6010 <__aeabi_dsub+0x4d4>
    60a6:	000c      	movs	r4, r1
    60a8:	0017      	movs	r7, r2
    60aa:	4666      	mov	r6, ip
    60ac:	e5cc      	b.n	5c48 <__aeabi_dsub+0x10c>
    60ae:	2700      	movs	r7, #0
    60b0:	2400      	movs	r4, #0
    60b2:	e5e8      	b.n	5c86 <__aeabi_dsub+0x14a>
    60b4:	2b00      	cmp	r3, #0
    60b6:	d039      	beq.n	612c <__aeabi_dsub+0x5f0>
    60b8:	000b      	movs	r3, r1
    60ba:	4313      	orrs	r3, r2
    60bc:	d100      	bne.n	60c0 <__aeabi_dsub+0x584>
    60be:	e744      	b.n	5f4a <__aeabi_dsub+0x40e>
    60c0:	08c0      	lsrs	r0, r0, #3
    60c2:	0767      	lsls	r7, r4, #29
    60c4:	4307      	orrs	r7, r0
    60c6:	2080      	movs	r0, #128	; 0x80
    60c8:	08e4      	lsrs	r4, r4, #3
    60ca:	0300      	lsls	r0, r0, #12
    60cc:	4204      	tst	r4, r0
    60ce:	d0e1      	beq.n	6094 <__aeabi_dsub+0x558>
    60d0:	08cb      	lsrs	r3, r1, #3
    60d2:	4203      	tst	r3, r0
    60d4:	d1de      	bne.n	6094 <__aeabi_dsub+0x558>
    60d6:	08d7      	lsrs	r7, r2, #3
    60d8:	0749      	lsls	r1, r1, #29
    60da:	430f      	orrs	r7, r1
    60dc:	001c      	movs	r4, r3
    60de:	e7d9      	b.n	6094 <__aeabi_dsub+0x558>
    60e0:	2100      	movs	r1, #0
    60e2:	e771      	b.n	5fc8 <__aeabi_dsub+0x48c>
    60e4:	2500      	movs	r5, #0
    60e6:	2700      	movs	r7, #0
    60e8:	e5e9      	b.n	5cbe <__aeabi_dsub+0x182>
    60ea:	002e      	movs	r6, r5
    60ec:	0027      	movs	r7, r4
    60ee:	3e20      	subs	r6, #32
    60f0:	40f7      	lsrs	r7, r6
    60f2:	2d20      	cmp	r5, #32
    60f4:	d02f      	beq.n	6156 <__aeabi_dsub+0x61a>
    60f6:	2640      	movs	r6, #64	; 0x40
    60f8:	1b75      	subs	r5, r6, r5
    60fa:	40ac      	lsls	r4, r5
    60fc:	4650      	mov	r0, sl
    60fe:	4320      	orrs	r0, r4
    6100:	1e44      	subs	r4, r0, #1
    6102:	41a0      	sbcs	r0, r4
    6104:	2400      	movs	r4, #0
    6106:	4338      	orrs	r0, r7
    6108:	e6dc      	b.n	5ec4 <__aeabi_dsub+0x388>
    610a:	2480      	movs	r4, #128	; 0x80
    610c:	2500      	movs	r5, #0
    610e:	0324      	lsls	r4, r4, #12
    6110:	4e13      	ldr	r6, [pc, #76]	; (6160 <__aeabi_dsub+0x624>)
    6112:	2700      	movs	r7, #0
    6114:	e5d3      	b.n	5cbe <__aeabi_dsub+0x182>
    6116:	4650      	mov	r0, sl
    6118:	4320      	orrs	r0, r4
    611a:	0007      	movs	r7, r0
    611c:	1e78      	subs	r0, r7, #1
    611e:	4187      	sbcs	r7, r0
    6120:	2400      	movs	r4, #0
    6122:	18bf      	adds	r7, r7, r2
    6124:	e760      	b.n	5fe8 <__aeabi_dsub+0x4ac>
    6126:	000c      	movs	r4, r1
    6128:	0017      	movs	r7, r2
    612a:	e58d      	b.n	5c48 <__aeabi_dsub+0x10c>
    612c:	000c      	movs	r4, r1
    612e:	0017      	movs	r7, r2
    6130:	4e0b      	ldr	r6, [pc, #44]	; (6160 <__aeabi_dsub+0x624>)
    6132:	e589      	b.n	5c48 <__aeabi_dsub+0x10c>
    6134:	001e      	movs	r6, r3
    6136:	0027      	movs	r7, r4
    6138:	3e20      	subs	r6, #32
    613a:	40f7      	lsrs	r7, r6
    613c:	2b20      	cmp	r3, #32
    613e:	d00c      	beq.n	615a <__aeabi_dsub+0x61e>
    6140:	2640      	movs	r6, #64	; 0x40
    6142:	1af3      	subs	r3, r6, r3
    6144:	409c      	lsls	r4, r3
    6146:	4650      	mov	r0, sl
    6148:	4320      	orrs	r0, r4
    614a:	1e44      	subs	r4, r0, #1
    614c:	41a0      	sbcs	r0, r4
    614e:	4307      	orrs	r7, r0
    6150:	2400      	movs	r4, #0
    6152:	18bf      	adds	r7, r7, r2
    6154:	e748      	b.n	5fe8 <__aeabi_dsub+0x4ac>
    6156:	2400      	movs	r4, #0
    6158:	e7d0      	b.n	60fc <__aeabi_dsub+0x5c0>
    615a:	2400      	movs	r4, #0
    615c:	e7f3      	b.n	6146 <__aeabi_dsub+0x60a>
    615e:	46c0      	nop			; (mov r8, r8)
    6160:	000007ff 	.word	0x000007ff
    6164:	ff7fffff 	.word	0xff7fffff

00006168 <__aeabi_dcmpun>:
    6168:	b570      	push	{r4, r5, r6, lr}
    616a:	4e0e      	ldr	r6, [pc, #56]	; (61a4 <__aeabi_dcmpun+0x3c>)
    616c:	030d      	lsls	r5, r1, #12
    616e:	031c      	lsls	r4, r3, #12
    6170:	0049      	lsls	r1, r1, #1
    6172:	005b      	lsls	r3, r3, #1
    6174:	0b2d      	lsrs	r5, r5, #12
    6176:	0d49      	lsrs	r1, r1, #21
    6178:	0b24      	lsrs	r4, r4, #12
    617a:	0d5b      	lsrs	r3, r3, #21
    617c:	42b1      	cmp	r1, r6
    617e:	d004      	beq.n	618a <__aeabi_dcmpun+0x22>
    6180:	4908      	ldr	r1, [pc, #32]	; (61a4 <__aeabi_dcmpun+0x3c>)
    6182:	2000      	movs	r0, #0
    6184:	428b      	cmp	r3, r1
    6186:	d008      	beq.n	619a <__aeabi_dcmpun+0x32>
    6188:	bd70      	pop	{r4, r5, r6, pc}
    618a:	4305      	orrs	r5, r0
    618c:	2001      	movs	r0, #1
    618e:	2d00      	cmp	r5, #0
    6190:	d1fa      	bne.n	6188 <__aeabi_dcmpun+0x20>
    6192:	4904      	ldr	r1, [pc, #16]	; (61a4 <__aeabi_dcmpun+0x3c>)
    6194:	2000      	movs	r0, #0
    6196:	428b      	cmp	r3, r1
    6198:	d1f6      	bne.n	6188 <__aeabi_dcmpun+0x20>
    619a:	4314      	orrs	r4, r2
    619c:	0020      	movs	r0, r4
    619e:	1e44      	subs	r4, r0, #1
    61a0:	41a0      	sbcs	r0, r4
    61a2:	e7f1      	b.n	6188 <__aeabi_dcmpun+0x20>
    61a4:	000007ff 	.word	0x000007ff

000061a8 <__aeabi_d2iz>:
    61a8:	b530      	push	{r4, r5, lr}
    61aa:	4d13      	ldr	r5, [pc, #76]	; (61f8 <__aeabi_d2iz+0x50>)
    61ac:	030a      	lsls	r2, r1, #12
    61ae:	004b      	lsls	r3, r1, #1
    61b0:	0b12      	lsrs	r2, r2, #12
    61b2:	0d5b      	lsrs	r3, r3, #21
    61b4:	0fc9      	lsrs	r1, r1, #31
    61b6:	2400      	movs	r4, #0
    61b8:	42ab      	cmp	r3, r5
    61ba:	dd10      	ble.n	61de <__aeabi_d2iz+0x36>
    61bc:	4c0f      	ldr	r4, [pc, #60]	; (61fc <__aeabi_d2iz+0x54>)
    61be:	42a3      	cmp	r3, r4
    61c0:	dc0f      	bgt.n	61e2 <__aeabi_d2iz+0x3a>
    61c2:	2480      	movs	r4, #128	; 0x80
    61c4:	4d0e      	ldr	r5, [pc, #56]	; (6200 <__aeabi_d2iz+0x58>)
    61c6:	0364      	lsls	r4, r4, #13
    61c8:	4322      	orrs	r2, r4
    61ca:	1aed      	subs	r5, r5, r3
    61cc:	2d1f      	cmp	r5, #31
    61ce:	dd0b      	ble.n	61e8 <__aeabi_d2iz+0x40>
    61d0:	480c      	ldr	r0, [pc, #48]	; (6204 <__aeabi_d2iz+0x5c>)
    61d2:	1ac3      	subs	r3, r0, r3
    61d4:	40da      	lsrs	r2, r3
    61d6:	4254      	negs	r4, r2
    61d8:	2900      	cmp	r1, #0
    61da:	d100      	bne.n	61de <__aeabi_d2iz+0x36>
    61dc:	0014      	movs	r4, r2
    61de:	0020      	movs	r0, r4
    61e0:	bd30      	pop	{r4, r5, pc}
    61e2:	4b09      	ldr	r3, [pc, #36]	; (6208 <__aeabi_d2iz+0x60>)
    61e4:	18cc      	adds	r4, r1, r3
    61e6:	e7fa      	b.n	61de <__aeabi_d2iz+0x36>
    61e8:	4c08      	ldr	r4, [pc, #32]	; (620c <__aeabi_d2iz+0x64>)
    61ea:	40e8      	lsrs	r0, r5
    61ec:	46a4      	mov	ip, r4
    61ee:	4463      	add	r3, ip
    61f0:	409a      	lsls	r2, r3
    61f2:	4302      	orrs	r2, r0
    61f4:	e7ef      	b.n	61d6 <__aeabi_d2iz+0x2e>
    61f6:	46c0      	nop			; (mov r8, r8)
    61f8:	000003fe 	.word	0x000003fe
    61fc:	0000041d 	.word	0x0000041d
    6200:	00000433 	.word	0x00000433
    6204:	00000413 	.word	0x00000413
    6208:	7fffffff 	.word	0x7fffffff
    620c:	fffffbed 	.word	0xfffffbed

00006210 <__aeabi_i2d>:
    6210:	b570      	push	{r4, r5, r6, lr}
    6212:	2800      	cmp	r0, #0
    6214:	d030      	beq.n	6278 <__aeabi_i2d+0x68>
    6216:	17c3      	asrs	r3, r0, #31
    6218:	18c4      	adds	r4, r0, r3
    621a:	405c      	eors	r4, r3
    621c:	0fc5      	lsrs	r5, r0, #31
    621e:	0020      	movs	r0, r4
    6220:	f000 f94c 	bl	64bc <__clzsi2>
    6224:	4b17      	ldr	r3, [pc, #92]	; (6284 <__aeabi_i2d+0x74>)
    6226:	4a18      	ldr	r2, [pc, #96]	; (6288 <__aeabi_i2d+0x78>)
    6228:	1a1b      	subs	r3, r3, r0
    622a:	1ad2      	subs	r2, r2, r3
    622c:	2a1f      	cmp	r2, #31
    622e:	dd18      	ble.n	6262 <__aeabi_i2d+0x52>
    6230:	4a16      	ldr	r2, [pc, #88]	; (628c <__aeabi_i2d+0x7c>)
    6232:	1ad2      	subs	r2, r2, r3
    6234:	4094      	lsls	r4, r2
    6236:	2200      	movs	r2, #0
    6238:	0324      	lsls	r4, r4, #12
    623a:	055b      	lsls	r3, r3, #21
    623c:	0b24      	lsrs	r4, r4, #12
    623e:	0d5b      	lsrs	r3, r3, #21
    6240:	2100      	movs	r1, #0
    6242:	0010      	movs	r0, r2
    6244:	0324      	lsls	r4, r4, #12
    6246:	0d0a      	lsrs	r2, r1, #20
    6248:	0b24      	lsrs	r4, r4, #12
    624a:	0512      	lsls	r2, r2, #20
    624c:	4322      	orrs	r2, r4
    624e:	4c10      	ldr	r4, [pc, #64]	; (6290 <__aeabi_i2d+0x80>)
    6250:	051b      	lsls	r3, r3, #20
    6252:	4022      	ands	r2, r4
    6254:	4313      	orrs	r3, r2
    6256:	005b      	lsls	r3, r3, #1
    6258:	07ed      	lsls	r5, r5, #31
    625a:	085b      	lsrs	r3, r3, #1
    625c:	432b      	orrs	r3, r5
    625e:	0019      	movs	r1, r3
    6260:	bd70      	pop	{r4, r5, r6, pc}
    6262:	0021      	movs	r1, r4
    6264:	4091      	lsls	r1, r2
    6266:	000a      	movs	r2, r1
    6268:	210b      	movs	r1, #11
    626a:	1a08      	subs	r0, r1, r0
    626c:	40c4      	lsrs	r4, r0
    626e:	055b      	lsls	r3, r3, #21
    6270:	0324      	lsls	r4, r4, #12
    6272:	0b24      	lsrs	r4, r4, #12
    6274:	0d5b      	lsrs	r3, r3, #21
    6276:	e7e3      	b.n	6240 <__aeabi_i2d+0x30>
    6278:	2500      	movs	r5, #0
    627a:	2300      	movs	r3, #0
    627c:	2400      	movs	r4, #0
    627e:	2200      	movs	r2, #0
    6280:	e7de      	b.n	6240 <__aeabi_i2d+0x30>
    6282:	46c0      	nop			; (mov r8, r8)
    6284:	0000041e 	.word	0x0000041e
    6288:	00000433 	.word	0x00000433
    628c:	00000413 	.word	0x00000413
    6290:	800fffff 	.word	0x800fffff

00006294 <__aeabi_ui2d>:
    6294:	b510      	push	{r4, lr}
    6296:	1e04      	subs	r4, r0, #0
    6298:	d028      	beq.n	62ec <__aeabi_ui2d+0x58>
    629a:	f000 f90f 	bl	64bc <__clzsi2>
    629e:	4b15      	ldr	r3, [pc, #84]	; (62f4 <__aeabi_ui2d+0x60>)
    62a0:	4a15      	ldr	r2, [pc, #84]	; (62f8 <__aeabi_ui2d+0x64>)
    62a2:	1a1b      	subs	r3, r3, r0
    62a4:	1ad2      	subs	r2, r2, r3
    62a6:	2a1f      	cmp	r2, #31
    62a8:	dd15      	ble.n	62d6 <__aeabi_ui2d+0x42>
    62aa:	4a14      	ldr	r2, [pc, #80]	; (62fc <__aeabi_ui2d+0x68>)
    62ac:	1ad2      	subs	r2, r2, r3
    62ae:	4094      	lsls	r4, r2
    62b0:	2200      	movs	r2, #0
    62b2:	0324      	lsls	r4, r4, #12
    62b4:	055b      	lsls	r3, r3, #21
    62b6:	0b24      	lsrs	r4, r4, #12
    62b8:	0d5b      	lsrs	r3, r3, #21
    62ba:	2100      	movs	r1, #0
    62bc:	0010      	movs	r0, r2
    62be:	0324      	lsls	r4, r4, #12
    62c0:	0d0a      	lsrs	r2, r1, #20
    62c2:	0b24      	lsrs	r4, r4, #12
    62c4:	0512      	lsls	r2, r2, #20
    62c6:	4322      	orrs	r2, r4
    62c8:	4c0d      	ldr	r4, [pc, #52]	; (6300 <__aeabi_ui2d+0x6c>)
    62ca:	051b      	lsls	r3, r3, #20
    62cc:	4022      	ands	r2, r4
    62ce:	4313      	orrs	r3, r2
    62d0:	005b      	lsls	r3, r3, #1
    62d2:	0859      	lsrs	r1, r3, #1
    62d4:	bd10      	pop	{r4, pc}
    62d6:	0021      	movs	r1, r4
    62d8:	4091      	lsls	r1, r2
    62da:	000a      	movs	r2, r1
    62dc:	210b      	movs	r1, #11
    62de:	1a08      	subs	r0, r1, r0
    62e0:	40c4      	lsrs	r4, r0
    62e2:	055b      	lsls	r3, r3, #21
    62e4:	0324      	lsls	r4, r4, #12
    62e6:	0b24      	lsrs	r4, r4, #12
    62e8:	0d5b      	lsrs	r3, r3, #21
    62ea:	e7e6      	b.n	62ba <__aeabi_ui2d+0x26>
    62ec:	2300      	movs	r3, #0
    62ee:	2400      	movs	r4, #0
    62f0:	2200      	movs	r2, #0
    62f2:	e7e2      	b.n	62ba <__aeabi_ui2d+0x26>
    62f4:	0000041e 	.word	0x0000041e
    62f8:	00000433 	.word	0x00000433
    62fc:	00000413 	.word	0x00000413
    6300:	800fffff 	.word	0x800fffff

00006304 <__aeabi_f2d>:
    6304:	0041      	lsls	r1, r0, #1
    6306:	0e09      	lsrs	r1, r1, #24
    6308:	1c4b      	adds	r3, r1, #1
    630a:	b570      	push	{r4, r5, r6, lr}
    630c:	b2db      	uxtb	r3, r3
    630e:	0246      	lsls	r6, r0, #9
    6310:	0a75      	lsrs	r5, r6, #9
    6312:	0fc4      	lsrs	r4, r0, #31
    6314:	2b01      	cmp	r3, #1
    6316:	dd14      	ble.n	6342 <__aeabi_f2d+0x3e>
    6318:	23e0      	movs	r3, #224	; 0xe0
    631a:	009b      	lsls	r3, r3, #2
    631c:	076d      	lsls	r5, r5, #29
    631e:	0b36      	lsrs	r6, r6, #12
    6320:	18cb      	adds	r3, r1, r3
    6322:	2100      	movs	r1, #0
    6324:	0d0a      	lsrs	r2, r1, #20
    6326:	0028      	movs	r0, r5
    6328:	0512      	lsls	r2, r2, #20
    632a:	4d1c      	ldr	r5, [pc, #112]	; (639c <__aeabi_f2d+0x98>)
    632c:	4332      	orrs	r2, r6
    632e:	055b      	lsls	r3, r3, #21
    6330:	402a      	ands	r2, r5
    6332:	085b      	lsrs	r3, r3, #1
    6334:	4313      	orrs	r3, r2
    6336:	005b      	lsls	r3, r3, #1
    6338:	07e4      	lsls	r4, r4, #31
    633a:	085b      	lsrs	r3, r3, #1
    633c:	4323      	orrs	r3, r4
    633e:	0019      	movs	r1, r3
    6340:	bd70      	pop	{r4, r5, r6, pc}
    6342:	2900      	cmp	r1, #0
    6344:	d114      	bne.n	6370 <__aeabi_f2d+0x6c>
    6346:	2d00      	cmp	r5, #0
    6348:	d01e      	beq.n	6388 <__aeabi_f2d+0x84>
    634a:	0028      	movs	r0, r5
    634c:	f000 f8b6 	bl	64bc <__clzsi2>
    6350:	280a      	cmp	r0, #10
    6352:	dc1c      	bgt.n	638e <__aeabi_f2d+0x8a>
    6354:	230b      	movs	r3, #11
    6356:	002a      	movs	r2, r5
    6358:	1a1b      	subs	r3, r3, r0
    635a:	40da      	lsrs	r2, r3
    635c:	0003      	movs	r3, r0
    635e:	3315      	adds	r3, #21
    6360:	409d      	lsls	r5, r3
    6362:	4b0f      	ldr	r3, [pc, #60]	; (63a0 <__aeabi_f2d+0x9c>)
    6364:	0312      	lsls	r2, r2, #12
    6366:	1a1b      	subs	r3, r3, r0
    6368:	055b      	lsls	r3, r3, #21
    636a:	0b16      	lsrs	r6, r2, #12
    636c:	0d5b      	lsrs	r3, r3, #21
    636e:	e7d8      	b.n	6322 <__aeabi_f2d+0x1e>
    6370:	2d00      	cmp	r5, #0
    6372:	d006      	beq.n	6382 <__aeabi_f2d+0x7e>
    6374:	0b32      	lsrs	r2, r6, #12
    6376:	2680      	movs	r6, #128	; 0x80
    6378:	0336      	lsls	r6, r6, #12
    637a:	076d      	lsls	r5, r5, #29
    637c:	4316      	orrs	r6, r2
    637e:	4b09      	ldr	r3, [pc, #36]	; (63a4 <__aeabi_f2d+0xa0>)
    6380:	e7cf      	b.n	6322 <__aeabi_f2d+0x1e>
    6382:	4b08      	ldr	r3, [pc, #32]	; (63a4 <__aeabi_f2d+0xa0>)
    6384:	2600      	movs	r6, #0
    6386:	e7cc      	b.n	6322 <__aeabi_f2d+0x1e>
    6388:	2300      	movs	r3, #0
    638a:	2600      	movs	r6, #0
    638c:	e7c9      	b.n	6322 <__aeabi_f2d+0x1e>
    638e:	0003      	movs	r3, r0
    6390:	002a      	movs	r2, r5
    6392:	3b0b      	subs	r3, #11
    6394:	409a      	lsls	r2, r3
    6396:	2500      	movs	r5, #0
    6398:	e7e3      	b.n	6362 <__aeabi_f2d+0x5e>
    639a:	46c0      	nop			; (mov r8, r8)
    639c:	800fffff 	.word	0x800fffff
    63a0:	00000389 	.word	0x00000389
    63a4:	000007ff 	.word	0x000007ff

000063a8 <__aeabi_d2f>:
    63a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    63aa:	004c      	lsls	r4, r1, #1
    63ac:	0d64      	lsrs	r4, r4, #21
    63ae:	030b      	lsls	r3, r1, #12
    63b0:	1c62      	adds	r2, r4, #1
    63b2:	0f45      	lsrs	r5, r0, #29
    63b4:	0a5b      	lsrs	r3, r3, #9
    63b6:	0552      	lsls	r2, r2, #21
    63b8:	432b      	orrs	r3, r5
    63ba:	0fc9      	lsrs	r1, r1, #31
    63bc:	00c5      	lsls	r5, r0, #3
    63be:	0d52      	lsrs	r2, r2, #21
    63c0:	2a01      	cmp	r2, #1
    63c2:	dd28      	ble.n	6416 <__aeabi_d2f+0x6e>
    63c4:	4a3a      	ldr	r2, [pc, #232]	; (64b0 <__aeabi_d2f+0x108>)
    63c6:	18a6      	adds	r6, r4, r2
    63c8:	2efe      	cmp	r6, #254	; 0xfe
    63ca:	dc1b      	bgt.n	6404 <__aeabi_d2f+0x5c>
    63cc:	2e00      	cmp	r6, #0
    63ce:	dd3e      	ble.n	644e <__aeabi_d2f+0xa6>
    63d0:	0180      	lsls	r0, r0, #6
    63d2:	0002      	movs	r2, r0
    63d4:	1e50      	subs	r0, r2, #1
    63d6:	4182      	sbcs	r2, r0
    63d8:	0f6d      	lsrs	r5, r5, #29
    63da:	432a      	orrs	r2, r5
    63dc:	00db      	lsls	r3, r3, #3
    63de:	4313      	orrs	r3, r2
    63e0:	075a      	lsls	r2, r3, #29
    63e2:	d004      	beq.n	63ee <__aeabi_d2f+0x46>
    63e4:	220f      	movs	r2, #15
    63e6:	401a      	ands	r2, r3
    63e8:	2a04      	cmp	r2, #4
    63ea:	d000      	beq.n	63ee <__aeabi_d2f+0x46>
    63ec:	3304      	adds	r3, #4
    63ee:	2280      	movs	r2, #128	; 0x80
    63f0:	04d2      	lsls	r2, r2, #19
    63f2:	401a      	ands	r2, r3
    63f4:	d05a      	beq.n	64ac <__aeabi_d2f+0x104>
    63f6:	3601      	adds	r6, #1
    63f8:	2eff      	cmp	r6, #255	; 0xff
    63fa:	d003      	beq.n	6404 <__aeabi_d2f+0x5c>
    63fc:	019b      	lsls	r3, r3, #6
    63fe:	0a5b      	lsrs	r3, r3, #9
    6400:	b2f4      	uxtb	r4, r6
    6402:	e001      	b.n	6408 <__aeabi_d2f+0x60>
    6404:	24ff      	movs	r4, #255	; 0xff
    6406:	2300      	movs	r3, #0
    6408:	0258      	lsls	r0, r3, #9
    640a:	05e4      	lsls	r4, r4, #23
    640c:	0a40      	lsrs	r0, r0, #9
    640e:	07c9      	lsls	r1, r1, #31
    6410:	4320      	orrs	r0, r4
    6412:	4308      	orrs	r0, r1
    6414:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6416:	2c00      	cmp	r4, #0
    6418:	d007      	beq.n	642a <__aeabi_d2f+0x82>
    641a:	431d      	orrs	r5, r3
    641c:	d0f2      	beq.n	6404 <__aeabi_d2f+0x5c>
    641e:	2080      	movs	r0, #128	; 0x80
    6420:	00db      	lsls	r3, r3, #3
    6422:	0480      	lsls	r0, r0, #18
    6424:	4303      	orrs	r3, r0
    6426:	26ff      	movs	r6, #255	; 0xff
    6428:	e7da      	b.n	63e0 <__aeabi_d2f+0x38>
    642a:	432b      	orrs	r3, r5
    642c:	d003      	beq.n	6436 <__aeabi_d2f+0x8e>
    642e:	2305      	movs	r3, #5
    6430:	08db      	lsrs	r3, r3, #3
    6432:	2cff      	cmp	r4, #255	; 0xff
    6434:	d003      	beq.n	643e <__aeabi_d2f+0x96>
    6436:	025b      	lsls	r3, r3, #9
    6438:	0a5b      	lsrs	r3, r3, #9
    643a:	b2e4      	uxtb	r4, r4
    643c:	e7e4      	b.n	6408 <__aeabi_d2f+0x60>
    643e:	2b00      	cmp	r3, #0
    6440:	d032      	beq.n	64a8 <__aeabi_d2f+0x100>
    6442:	2080      	movs	r0, #128	; 0x80
    6444:	03c0      	lsls	r0, r0, #15
    6446:	4303      	orrs	r3, r0
    6448:	025b      	lsls	r3, r3, #9
    644a:	0a5b      	lsrs	r3, r3, #9
    644c:	e7dc      	b.n	6408 <__aeabi_d2f+0x60>
    644e:	0032      	movs	r2, r6
    6450:	3217      	adds	r2, #23
    6452:	db14      	blt.n	647e <__aeabi_d2f+0xd6>
    6454:	2280      	movs	r2, #128	; 0x80
    6456:	271e      	movs	r7, #30
    6458:	0412      	lsls	r2, r2, #16
    645a:	4313      	orrs	r3, r2
    645c:	1bbf      	subs	r7, r7, r6
    645e:	2f1f      	cmp	r7, #31
    6460:	dc0f      	bgt.n	6482 <__aeabi_d2f+0xda>
    6462:	4a14      	ldr	r2, [pc, #80]	; (64b4 <__aeabi_d2f+0x10c>)
    6464:	4694      	mov	ip, r2
    6466:	4464      	add	r4, ip
    6468:	002a      	movs	r2, r5
    646a:	40a5      	lsls	r5, r4
    646c:	002e      	movs	r6, r5
    646e:	40a3      	lsls	r3, r4
    6470:	1e75      	subs	r5, r6, #1
    6472:	41ae      	sbcs	r6, r5
    6474:	40fa      	lsrs	r2, r7
    6476:	4333      	orrs	r3, r6
    6478:	4313      	orrs	r3, r2
    647a:	2600      	movs	r6, #0
    647c:	e7b0      	b.n	63e0 <__aeabi_d2f+0x38>
    647e:	2400      	movs	r4, #0
    6480:	e7d5      	b.n	642e <__aeabi_d2f+0x86>
    6482:	2202      	movs	r2, #2
    6484:	4252      	negs	r2, r2
    6486:	1b96      	subs	r6, r2, r6
    6488:	001a      	movs	r2, r3
    648a:	40f2      	lsrs	r2, r6
    648c:	2f20      	cmp	r7, #32
    648e:	d009      	beq.n	64a4 <__aeabi_d2f+0xfc>
    6490:	4809      	ldr	r0, [pc, #36]	; (64b8 <__aeabi_d2f+0x110>)
    6492:	4684      	mov	ip, r0
    6494:	4464      	add	r4, ip
    6496:	40a3      	lsls	r3, r4
    6498:	432b      	orrs	r3, r5
    649a:	1e5d      	subs	r5, r3, #1
    649c:	41ab      	sbcs	r3, r5
    649e:	2600      	movs	r6, #0
    64a0:	4313      	orrs	r3, r2
    64a2:	e79d      	b.n	63e0 <__aeabi_d2f+0x38>
    64a4:	2300      	movs	r3, #0
    64a6:	e7f7      	b.n	6498 <__aeabi_d2f+0xf0>
    64a8:	2300      	movs	r3, #0
    64aa:	e7ad      	b.n	6408 <__aeabi_d2f+0x60>
    64ac:	0034      	movs	r4, r6
    64ae:	e7bf      	b.n	6430 <__aeabi_d2f+0x88>
    64b0:	fffffc80 	.word	0xfffffc80
    64b4:	fffffc82 	.word	0xfffffc82
    64b8:	fffffca2 	.word	0xfffffca2

000064bc <__clzsi2>:
    64bc:	211c      	movs	r1, #28
    64be:	2301      	movs	r3, #1
    64c0:	041b      	lsls	r3, r3, #16
    64c2:	4298      	cmp	r0, r3
    64c4:	d301      	bcc.n	64ca <__clzsi2+0xe>
    64c6:	0c00      	lsrs	r0, r0, #16
    64c8:	3910      	subs	r1, #16
    64ca:	0a1b      	lsrs	r3, r3, #8
    64cc:	4298      	cmp	r0, r3
    64ce:	d301      	bcc.n	64d4 <__clzsi2+0x18>
    64d0:	0a00      	lsrs	r0, r0, #8
    64d2:	3908      	subs	r1, #8
    64d4:	091b      	lsrs	r3, r3, #4
    64d6:	4298      	cmp	r0, r3
    64d8:	d301      	bcc.n	64de <__clzsi2+0x22>
    64da:	0900      	lsrs	r0, r0, #4
    64dc:	3904      	subs	r1, #4
    64de:	a202      	add	r2, pc, #8	; (adr r2, 64e8 <__clzsi2+0x2c>)
    64e0:	5c10      	ldrb	r0, [r2, r0]
    64e2:	1840      	adds	r0, r0, r1
    64e4:	4770      	bx	lr
    64e6:	46c0      	nop			; (mov r8, r8)
    64e8:	02020304 	.word	0x02020304
    64ec:	01010101 	.word	0x01010101
	...
    64f8:	00020018 	.word	0x00020018
    64fc:	20000004 	.word	0x20000004
    6500:	00000000 	.word	0x00000000
    6504:	00020018 	.word	0x00020018
    6508:	20000000 	.word	0x20000000
    650c:	00000000 	.word	0x00000000
    6510:	3a746f47 	.word	0x3a746f47
    6514:	0d582520 	.word	0x0d582520
    6518:	0000000a 	.word	0x0000000a
    651c:	75746573 	.word	0x75746573
    6520:	6f642070 	.word	0x6f642070
    6524:	0d21656e 	.word	0x0d21656e
    6528:	00000000 	.word	0x00000000
    652c:	69786158 	.word	0x69786158
    6530:	25203a73 	.word	0x25203a73
    6534:	2066322e 	.word	0x2066322e
    6538:	69786159 	.word	0x69786159
    653c:	25203a73 	.word	0x25203a73
    6540:	2066322e 	.word	0x2066322e
    6544:	6978615a 	.word	0x6978615a
    6548:	25203a73 	.word	0x25203a73
    654c:	0d66322e 	.word	0x0d66322e
    6550:	0000000a 	.word	0x0000000a
    6554:	42000800 	.word	0x42000800
    6558:	42000c00 	.word	0x42000c00
    655c:	42001000 	.word	0x42001000
    6560:	42001400 	.word	0x42001400
    6564:	42001800 	.word	0x42001800
    6568:	42001c00 	.word	0x42001c00
    656c:	000014d2 	.word	0x000014d2
    6570:	000014ce 	.word	0x000014ce
    6574:	000014ce 	.word	0x000014ce
    6578:	00001530 	.word	0x00001530
    657c:	00001530 	.word	0x00001530
    6580:	000014e6 	.word	0x000014e6
    6584:	000014d8 	.word	0x000014d8
    6588:	000014ec 	.word	0x000014ec
    658c:	0000151e 	.word	0x0000151e

00006590 <_global_impure_ptr>:
    6590:	2000001c 00464e49 00666e69 004e414e     ... INF.inf.NAN.
    65a0:	006e616e 31300030 35343332 39383736     nan.0.0123456789
    65b0:	44434241 30004645 34333231 38373635     ABCDEF.012345678
    65c0:	63626139 00666564 69666e49 7974696e     9abcdef.Infinity
    65d0:	4e614e00 00000000                       .NaN....

000065d8 <__sf_fake_stderr>:
	...

000065f8 <__sf_fake_stdin>:
	...

00006618 <__sf_fake_stdout>:
	...

00006638 <__mprec_bigtens>:
    6638:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    6648:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    6658:	7f73bf3c 75154fdd                       <.s..O.u

00006660 <__mprec_tens>:
    6660:	00000000 3ff00000 00000000 40240000     .......?......$@
    6670:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    6680:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    6690:	00000000 412e8480 00000000 416312d0     .......A......cA
    66a0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    66b0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    66c0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    66d0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    66e0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    66f0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    6700:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    6710:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    6720:	79d99db4 44ea7843                       ...yCx.D

00006728 <p05.6052>:
    6728:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
    6738:	6c680020 6665004c 47464567 50004300      .hlL.efgEFG.C.P
    6748:	5849534f 00002e00                                OSIX...

0000674f <_ctype_>:
    674f:	20202000 20202020 28282020 20282828     .         ((((( 
    675f:	20202020 20202020 20202020 20202020                     
    676f:	10108820 10101010 10101010 10101010      ...............
    677f:	04040410 04040404 10040404 10101010     ................
    678f:	41411010 41414141 01010101 01010101     ..AAAAAA........
    679f:	01010101 01010101 01010101 10101010     ................
    67af:	42421010 42424242 02020202 02020202     ..BBBBBB........
    67bf:	02020202 02020202 02020202 10101010     ................
    67cf:	00000020 00000000 00000000 00000000      ...............
	...
    684f:	004fcc00 004fae00 004f6800 004e8600     ..O...O..hO...N.
    685f:	004f6800 004fa000 004f6800 004e8600     .hO...O..hO...N.
    686f:	004fae00 004fae00 004fa000 004e8600     ..O...O...O...N.
    687f:	004e7e00 004e7e00 004e7e00 0051e400     .~N..~N..~N...Q.
    688f:	00582c00 0056ec00 0056ec00 0056e800     .,X...V...V...V.
    689f:	00580400 00580400 0057f600 0056e800     ..X...X...W...V.
    68af:	00580400 0057f600 00580400 0056e800     ..X...W...X...V.
    68bf:	00580c00 00580c00 00580c00 005a1000     ..X...X...X...Z.
	...

000068d0 <_init>:
    68d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    68d2:	46c0      	nop			; (mov r8, r8)
    68d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    68d6:	bc08      	pop	{r3}
    68d8:	469e      	mov	lr, r3
    68da:	4770      	bx	lr

000068dc <__init_array_start>:
    68dc:	000000dd 	.word	0x000000dd
    68e0:	00000665 	.word	0x00000665

000068e4 <_fini>:
    68e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    68e6:	46c0      	nop			; (mov r8, r8)
    68e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    68ea:	bc08      	pop	{r3}
    68ec:	469e      	mov	lr, r3
    68ee:	4770      	bx	lr

000068f0 <__fini_array_start>:
    68f0:	000000b5 	.word	0x000000b5
